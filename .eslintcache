[{"C:\\Users\\vince\\guitar-trainer\\src\\index.tsx":"1","C:\\Users\\vince\\guitar-trainer\\src\\reportWebVitals.ts":"2","C:\\Users\\vince\\guitar-trainer\\src\\App.tsx":"3","C:\\Users\\vince\\guitar-trainer\\src\\definitions\\scales.ts":"4","C:\\Users\\vince\\guitar-trainer\\src\\definitions\\notes.ts":"5","C:\\Users\\vince\\guitar-trainer\\src\\definitions\\intervals.ts":"6","C:\\Users\\vince\\guitar-trainer\\src\\utils\\utils.ts":"7","C:\\Users\\vince\\guitar-trainer\\src\\utils\\store.ts":"8","C:\\Users\\vince\\guitar-trainer\\src\\definitions\\interfaces.ts":"9","C:\\Users\\vince\\guitar-trainer\\src\\definitions\\instruments.ts":"10","C:\\Users\\vince\\guitar-trainer\\src\\definitions\\index.ts":"11","C:\\Users\\vince\\guitar-trainer\\src\\definitions\\chords.ts":"12","C:\\Users\\vince\\guitar-trainer\\src\\definitions\\renderables.ts":"13","C:\\Users\\vince\\guitar-trainer\\src\\definitions0\\Intervals.ts":"14","C:\\Users\\vince\\guitar-trainer\\src\\components\\SimpleState.tsx":"15","C:\\Users\\vince\\guitar-trainer\\src\\components\\Pattern.tsx":"16","C:\\Users\\vince\\guitar-trainer\\src\\components\\Cell.tsx":"17"},{"size":568,"mtime":1611048847173,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":262,"mtime":1611070273650,"results":"21","hashOfConfig":"19"},{"size":5570,"mtime":1611072687346,"results":"22","hashOfConfig":"19"},{"size":1849,"mtime":1611071841442,"results":"23","hashOfConfig":"19"},{"size":2517,"mtime":1611153273515,"results":"24","hashOfConfig":"19"},{"size":429,"mtime":1611151490255,"results":"25","hashOfConfig":"19"},{"size":1200,"mtime":1611071429115,"results":"26","hashOfConfig":"19"},{"size":119,"mtime":1611046055368,"results":"27","hashOfConfig":"19"},{"size":1566,"mtime":1611148685746,"results":"28","hashOfConfig":"19"},{"size":568,"mtime":1611069044376,"results":"29","hashOfConfig":"19"},{"size":3195,"mtime":1611153000026,"results":"30","hashOfConfig":"19"},{"size":2948,"mtime":1611148715619,"results":"31","hashOfConfig":"19"},{"size":1501,"mtime":1610896791190,"results":"32","hashOfConfig":"19"},{"size":2618,"mtime":1611155196144,"results":"33","hashOfConfig":"19"},{"size":3141,"mtime":1611154355497,"results":"34","hashOfConfig":"19"},{"size":3814,"mtime":1611153468708,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1o33alj",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\vince\\guitar-trainer\\src\\index.tsx",[],["79","80"],"C:\\Users\\vince\\guitar-trainer\\src\\reportWebVitals.ts",[],"C:\\Users\\vince\\guitar-trainer\\src\\App.tsx",["81","82"],"import React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport SimpleState from \"./components/SimpleState\"\n\nfunction App() {\n  \n\n\n  return (\n    <div className=\"App\">\n     <SimpleState/>\n   </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\vince\\guitar-trainer\\src\\definitions\\scales.ts",["83","84"],"import { SpecificChord, specificChords } from \"./chords\"\r\nimport { Interval, intervals, intervalsArray } from \"./intervals\"\r\nimport { Note, notesArray } from \"./notes\"\r\n\r\nexport const RawScales: RawScalesInterface = {\r\n    Major: {\r\n        id: \"major\",\r\n        steps: [2, 2, 1, 2, 2, 2, 1],\r\n        modes: [\r\n            \"ionisch (dur)\",\r\n            \"dorisch\",\r\n            \"phrygisch\",\r\n            \"lydisch\",\r\n            \"mixolydisch\",\r\n            \"aeolisch (moll)\",\r\n            \"lokrisch\",\r\n        ]\r\n    },\r\n         HarmonicMinor: {\r\n            id: \"harmonic minor\",\r\n            steps: [2, 1, 2, 2, 1, 3, 1],\r\n            modes: [\r\n                \"harmonic minor mode\",\r\n                \"Locrian 13 or Locrian 6 (half-diminished)\",\r\n                \"Ionian #5 (augmented)\",\r\n                \"Dorian #11 (or dorian #4) (minor)\",\r\n                \"Phrygian dominant (dominant)\",\r\n                \"Lydian #2 (major)\",\r\n                \"Super locrian bb7 (diminished)\",\r\n            ]\r\n        },\r\n        MelodicMinor: {\r\n            id: \"melodic minor\",\r\n            steps: [2, 1, 2, 2, 2, 2, 1],\r\n            modes: [\r\n                \"melodic minor mode\",\r\n                \"dorisch b9\",\r\n                \"lydisch augmented\",\r\n                \"lydisch dominant\",\r\n                \"mixolydisch b13\",\r\n                \"aeolisch b5 (lokrisch #2)\",\r\n                \"alterierte skala (super lokrisch)\",\r\n            ] \r\n        },\r\n}\r\n\r\nexport interface RawScalesInterface {\r\n    Major: RawScale,\r\n         HarmonicMinor: RawScale,\r\n        MelodicMinor: RawScale, \r\n}\r\n\r\n\r\n\r\n\r\nexport interface RawScale {\r\n    id: string,\r\n    steps: number[],\r\n    modes: string[]\r\n}\r\n\r\n\r\n\r\nexport interface Scale {\r\n\r\n    readonly id: string,\r\n    readonly steps: number[],\r\n    readonly intervals: Interval[],\r\n\r\n    readonly isMode: boolean,\r\n\r\n    readonly baseScale?: Scale,\r\n\r\n}\r\n\r\nexport interface SpecificScale  {\r\n    readonly isScale:boolean,\r\n    readonly id: string,\r\n    readonly scale: Scale,\r\n\r\n    readonly notes: Note[],\r\n    readonly intervals: Interval[],\r\n\r\n\r\n    readonly rootNote: Note,\r\n    chords: SpecificChord[][],\r\n\r\n    readonly triads: SpecificChord[],\r\n    readonly tetrads: SpecificChord[],\r\n}\r\n\r\nexport const scales: Scale[] = generateScales()\r\n\r\nfunction generateScales(): Scale[] {\r\n\r\n    const scales: Scale[] = []\r\n\r\n    for (const [scaleKey, scaleValue] of Object.entries(RawScales)) {\r\n\r\n        const rawScale: RawScale = scaleValue\r\n\r\n        if (!rawScale.modes) {\r\n            scales.push(scaleValue)\r\n            continue;\r\n        }\r\n\r\n        let baseScale: Scale;\r\n        for (let i = 0; i < rawScale.modes.length; i++) {\r\n            const modeString = rawScale.modes[i];\r\n            const steps = [\r\n                ...rawScale.steps.slice(i, rawScale.modes.length),\r\n                ...rawScale.steps.slice(0, i)\r\n            ]\r\n            scales.push({\r\n                id: modeString,\r\n                steps,\r\n                isMode: i !== 0 ? true : false,\r\n                intervals: generateIntervals(steps),\r\n            })\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    return scales\r\n}\r\n\r\nfunction generateIntervals(steps: number[]): Interval[] {\r\n\r\n    const result: number[] = []\r\n    let last = 0;\r\n    for (let i = 0; i < steps.length - 1; i++) {\r\n        const element = steps[i];\r\n        last += element;\r\n        result.push(last)\r\n    }\r\n\r\n    return [intervals.PerfectUnison, ...result.map(n => intervalsArray[n])]\r\n\r\n}\r\n\r\nexport const specificScales: SpecificScale[] = generateSpecificScales()\r\n\r\n\r\nfunction generateSpecificScales(): SpecificScale[] {\r\n\r\n    const specificScales: SpecificScale[] = []\r\n\r\n    for (const rootNote of notesArray) {\r\n\r\n        for (const scale of scales) {\r\n\r\n            const notes: Note[] = []\r\n\r\n\r\n            for (const interval of scale.intervals) {\r\n\r\n                notes.push(notesArray[(interval.step + rootNote.intervalFromC.step) % 12])\r\n\r\n            }\r\n\r\n\r\n            const specificScale: SpecificScale = {\r\n                isScale:true,\r\n                id: rootNote.id + \" \" + scale.id,\r\n                scale,\r\n                notes,\r\n                rootNote,\r\n                intervals:scale.intervals,\r\n\r\n                chords: [],\r\n                triads: [],\r\n                tetrads: [],\r\n            }\r\n\r\n            const chords = generateSpecificChords(specificScale)\r\n            specificScale.chords = chords.chords\r\n\r\n            specificScales.push(specificScale)\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return specificScales\r\n}\r\n\r\nfunction generateSpecificChords(specificScale: SpecificScale): { chords: SpecificChord[][], tetrads: SpecificChord[], triads: SpecificChord[] } {\r\n\r\n    const notes = specificScale.notes\r\n\r\n    const specificChordsArray: SpecificChord[][] = []\r\n    const tetrads: SpecificChord[] = []\r\n    const triads: SpecificChord[] = []\r\n\r\n    for (let i = 0; i < notes.length; i++) {\r\n        const note = notes[i];\r\n        const specificChordsResult: SpecificChord[] = []\r\n        for (const specificChord of specificChords) {\r\n\r\n            if (specificChord.notes[0] !== note) continue;\r\n\r\n            const hasChord = specificChord.notes\r\n                .filter(note => !notes.includes(note)).length === 0\r\n\r\n\r\n\r\n            if (hasChord) {\r\n                specificChordsResult.push(specificChord)\r\n                specificChord.presentInScales.push(specificScale)\r\n            }\r\n\r\n        }\r\n        specificChordsArray.push(specificChordsResult)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return { chords: specificChordsArray, triads, tetrads }\r\n\r\n}","C:\\Users\\vince\\guitar-trainer\\src\\definitions\\notes.ts",[],"C:\\Users\\vince\\guitar-trainer\\src\\definitions\\intervals.ts",[],"C:\\Users\\vince\\guitar-trainer\\src\\utils\\utils.ts",["85"],"\r\ninterface RGB {\r\n    r: number,\r\n    g: number,\r\n    b: number,\r\n}\r\n\r\nexport function hexToRgb(hex: string): string {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    if (!result) return \"black\"\r\n    const rgb = {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    }\r\n    return \"rgb(\" + rgb.r + \",\" + rgb.g + \",\" + rgb.b + \",0.2)\"\r\n}","C:\\Users\\vince\\guitar-trainer\\src\\utils\\store.ts",["86","87","88"],"import create from \"zustand\"\r\nimport { Note, notesArray } from \"../definitions/notes\"\r\nimport { StringInstrument } from \"../definitions/instruments\"\r\nimport { RenderablePattern, renderables } from \"../definitions/renderables\"\r\n\r\n\r\n\r\ntype State = {\r\n    renderables: RenderablePattern[],\r\n\r\n    index1: number,\r\n    index2: number,\r\n\r\n    firstIntervals:boolean,\r\n    secondIntervals:boolean,\r\n\r\n    toggleFirstIntervals:() => void,\r\n    toggleSecondIntervals:() => void,\r\n\r\n    setIndex1: (index: number) => void\r\n    setIndex2: (index: number) => void\r\n    secondHidden:boolean,\r\n    toggleSecondHidden:() => void\r\n}\r\n\r\nexport const useSimpleStore = create<State>(set => ({\r\n    renderables,\r\n\r\n    index1:0,\r\n    index2:0,\r\n\r\n    firstIntervals:false,\r\n    secondIntervals:false,\r\n\r\n    secondHidden:true,\r\n    \r\n    setIndex1: (index1) => set(state => ({ index1 })),\r\n    setIndex2: (index2) => set(state => ({ index2 })),\r\n    toggleSecondHidden: () => set(state => ({ secondHidden:!state.secondHidden })),\r\n    toggleFirstIntervals: () => set(state => ({ firstIntervals:!state.firstIntervals })),\r\n    toggleSecondIntervals: () => set(state => ({ secondIntervals:!state.secondIntervals })),\r\n}))","C:\\Users\\vince\\guitar-trainer\\src\\definitions\\interfaces.ts",[],["89","90"],"C:\\Users\\vince\\guitar-trainer\\src\\definitions\\instruments.ts",[],"C:\\Users\\vince\\guitar-trainer\\src\\definitions\\index.ts",["91","92","93","94","95","96","97","98"],"\r\nimport { specificScales, scales } from \"./scales\"\r\nimport { getStringInstrument, RawStringInstruments } from './instruments';\r\nimport { specificChords } from \"./chords\";\r\nimport { Note, notes } from \"../definitions/notes\";\r\nimport { createRenderablePattern } from \"./renderables\";\r\nimport { intervals, Interval, intervalsArray } from \"../definitions/intervals\";\r\nimport \"./renderables\"\r\n\r\nexport function getInterval(from: Note, to: Note): Interval {\r\n\r\n    const n = ((to.intervalFromC.step - from.intervalFromC.step) + 12) % 12\r\n\r\n    return intervalsArray[n]\r\n\r\n}","C:\\Users\\vince\\guitar-trainer\\src\\definitions\\chords.ts",["99"],"import { Interval, intervals } from \"./intervals\"\r\nimport { Note, notesArray } from \"./notes\"\r\nimport { Scale, SpecificScale } from \"./scales\"\r\n\r\nexport const chords: RawChords = {\r\n/*     Minor: {\r\n        id: \"minor\",\r\n        intervals: [intervals.PerfectUnison, intervals.MinorThird, intervals.PerfectFifth],\r\n        symbol: \"_\",\r\n    }, */\r\n    Major: {\r\n        id: \"major\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MajorThird,\r\n            intervals.PerfectFifth],\r\n        symbol: \"\",\r\n    },\r\n    Major7: {\r\n        id: \"major7\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MajorThird,\r\n            intervals.PerfectFifth,\r\n            intervals.MajorSeventh,\r\n        ],\r\n        symbol: \"\",\r\n    },\r\n    Minor7b5: {\r\n        id: \"minor7b5\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MinorThird,\r\n            intervals.MinorSeventh,\r\n            intervals.Tritone],\r\n        symbol: \"m7b5\",\r\n    },\r\n    Chord7b9: {\r\n        id: \"7b9\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MajorThird,\r\n            intervals.PerfectFifth,\r\n            intervals.MinorSeventh,\r\n            intervals.MinorSecond\r\n        ],\r\n        symbol: \"7b9\",\r\n    },\r\n    Chord7Sharp5: {\r\n        id: \"7#5\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MajorThird,\r\n            intervals.MinorSixth,\r\n            intervals.MinorSeventh,\r\n        ],\r\n        symbol: \"7#5\",\r\n    },\r\n    PowerChord: {\r\n        id: \"5\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.PerfectFifth],\r\n        symbol: \"5\",\r\n    },\r\n}\r\n\r\nexport interface RawChords {\r\n    // Minor: RawChord,\r\n    Major: RawChord,\r\n    Minor7b5: RawChord,\r\n    Chord7b9: RawChord,\r\n    PowerChord: RawChord,\r\n    Major7: RawChord,\r\n    Chord7Sharp5: RawChord,\r\n}\r\n\r\nexport interface RawChord {\r\n    id: string,\r\n    intervals: Interval[],\r\n    symbol: string,\r\n    triad?:boolean,\r\n    tetrad?:boolean,\r\n}\r\n\r\nexport interface SpecificChord {\r\n    readonly rootNote: Note,\r\n    readonly id: string, // note name plus \r\n\r\n   readonly notes: Note[],\r\n    readonly intervals: Interval[],\r\n\r\n    readonly symbol: string,\r\n    presentInScales: SpecificScale[],\r\n}\r\n\r\n\r\nexport const specificChords: SpecificChord[] = generateSpecificChords()\r\n\r\nfunction generateSpecificChords(): SpecificChord[] {\r\n\r\n    const specificChords: SpecificChord[] = []\r\n\r\n    for (const rootNote of notesArray) {\r\n\r\n        for (const rawChord of Object.values(chords)) {\r\n\r\n\r\n            const notes: Note[] = []\r\n\r\n            for (const interval of rawChord.intervals) {\r\n\r\n                notes.push(notesArray[(interval.step + rootNote.intervalFromC.step) % 12])\r\n\r\n            }\r\n\r\n            specificChords.push({\r\n                rootNote,\r\n                id: rootNote.id + \" \" + rawChord.id,\r\n                notes,\r\n                intervals: rawChord.intervals,\r\n                symbol: rootNote.id + rawChord.symbol,\r\n                presentInScales: [],\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    return specificChords\r\n\r\n}","C:\\Users\\vince\\guitar-trainer\\src\\definitions\\renderables.ts",["100","101"],"import { SpecificChord, specificChords } from \"./chords\"\r\nimport { SpecificScale, specificScales } from \"./scales\"\r\nimport { getStringInstrument, RawStringInstruments, StringInstrument } from \"./instruments\"\r\nimport { Interval, intervals } from \"./intervals\"\r\nimport { Note, notes } from \"./notes\"\r\nimport { getInterval } from \".\"\r\n\r\n\r\nexport interface Dictionary<Item> {\r\n    [index: string]: Item\r\n}\r\n\r\n\r\n\r\nexport interface RenderableNote {\r\n    readonly interval: Interval,\r\n    readonly note: Note,\r\n    readonly hidden: boolean,\r\n}\r\n\r\ntype nullOrNumber = null | number\r\n\r\nexport interface RenderablePattern {\r\n\r\n    readonly id: string,\r\n\r\n    readonly strings: RenderableNote[][],\r\n\r\n    readonly fretsArray: nullOrNumber[]\r\n\r\n    readonly source: SpecificChord | SpecificScale,\r\n\r\n    readonly intervals: Interval[],\r\n\r\n    readonly notes: Note[],\r\n\r\n    readonly stringInstrument: StringInstrument,\r\n\r\n}\r\n\r\nexport type Renderable = SpecificChord | SpecificScale\r\n\r\nexport function createRenderablePattern(stringInstrument: StringInstrument, renderable: Renderable): RenderablePattern {\r\n\r\n    const strings = stringInstrument.strings.map(string => {\r\n\r\n        return string.map(note => {\r\n\r\n            const interval = getInterval(renderable.rootNote, note)\r\n\r\n\r\n            return {\r\n                interval, note,\r\n                hidden: !renderable.notes.includes(note),\r\n            }\r\n\r\n        })\r\n\r\n    })\r\n\r\n\r\n    return {\r\n        id: renderable.id,\r\n        intervals: renderable.intervals,\r\n        notes: renderable.notes,\r\n        source: renderable,\r\n        strings: strings as RenderableNote[][],\r\n        stringInstrument,\r\n        fretsArray:makeFretsArray(stringInstrument.fretsCount)\r\n    }\r\n\r\n}\r\n\r\nfunction makeFretsArray(fretscount : number) : nullOrNumber[] {\r\n\r\n    const array : nullOrNumber[] = []\r\n    const show = [3,5,7,12,15,17,19,24]\r\n    for (let i = 0; i < fretscount; i++) {\r\n        \r\n        if (show.includes(i)) array.push(i)\r\n        else array.push(null)\r\n        \r\n    }\r\n\r\n    return array\r\n\r\n}\r\n\r\nexport const renderables: RenderablePattern[] = generateAllRenderables()\r\n\r\nfunction generateAllRenderables() {\r\n\r\n    const guitar = getStringInstrument(RawStringInstruments.standardGuitar)\r\n    const renderables: RenderablePattern[] = []\r\n\r\n    for (const renderable of [...specificScales, ...specificChords]) {\r\n        const renderablePattern = createRenderablePattern(guitar, renderable)\r\n        renderables.push(renderablePattern)\r\n    }\r\n\r\n    return renderables\r\n\r\n}\r\n\r\n/* export type RenderableState = {\r\n\r\n    renderableArrays: RenderableArray[] | undefined,\r\n\r\n    add(\r\n        stringInstrument: StringInstrument,\r\n        config: \"notes\" | \"intervals\",\r\n        // renderable: Renderable,\r\n        // renderableSecondLayer?: Renderable,\r\n        index?: number,\r\n    ): void, // returns id\r\n\r\n    // removes renderableArray from array.\r\n    remove(id: string): void,\r\n\r\n}\r\n\r\n\r\n\r\n */","C:\\Users\\vince\\guitar-trainer\\src\\definitions0\\Intervals.ts",[],"C:\\Users\\vince\\guitar-trainer\\src\\components\\SimpleState.tsx",[],"C:\\Users\\vince\\guitar-trainer\\src\\components\\Pattern.tsx",["102"],"C:\\Users\\vince\\guitar-trainer\\src\\components\\Cell.tsx",["103","104","105","106","107"],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":26},{"ruleId":"112","severity":1,"message":"116","line":2,"column":8,"nodeType":"114","messageId":"115","endLine":2,"endColumn":12},{"ruleId":"112","severity":1,"message":"117","line":98,"column":17,"nodeType":"114","messageId":"115","endLine":98,"endColumn":25},{"ruleId":"112","severity":1,"message":"118","line":107,"column":13,"nodeType":"114","messageId":"115","endLine":107,"endColumn":29},{"ruleId":"112","severity":1,"message":"119","line":2,"column":11,"nodeType":"114","messageId":"115","endLine":2,"endColumn":14},{"ruleId":"112","severity":1,"message":"120","line":2,"column":10,"nodeType":"114","messageId":"115","endLine":2,"endColumn":14},{"ruleId":"112","severity":1,"message":"121","line":2,"column":16,"nodeType":"114","messageId":"115","endLine":2,"endColumn":26},{"ruleId":"112","severity":1,"message":"122","line":3,"column":10,"nodeType":"114","messageId":"115","endLine":3,"endColumn":26},{"ruleId":"108","replacedBy":"123"},{"ruleId":"110","replacedBy":"124"},{"ruleId":"112","severity":1,"message":"125","line":2,"column":10,"nodeType":"114","messageId":"115","endLine":2,"endColumn":24},{"ruleId":"112","severity":1,"message":"126","line":2,"column":26,"nodeType":"114","messageId":"115","endLine":2,"endColumn":32},{"ruleId":"112","severity":1,"message":"127","line":3,"column":10,"nodeType":"114","messageId":"115","endLine":3,"endColumn":29},{"ruleId":"112","severity":1,"message":"128","line":3,"column":31,"nodeType":"114","messageId":"115","endLine":3,"endColumn":51},{"ruleId":"112","severity":1,"message":"129","line":4,"column":10,"nodeType":"114","messageId":"115","endLine":4,"endColumn":24},{"ruleId":"112","severity":1,"message":"130","line":5,"column":16,"nodeType":"114","messageId":"115","endLine":5,"endColumn":21},{"ruleId":"112","severity":1,"message":"131","line":6,"column":10,"nodeType":"114","messageId":"115","endLine":6,"endColumn":33},{"ruleId":"112","severity":1,"message":"132","line":7,"column":10,"nodeType":"114","messageId":"115","endLine":7,"endColumn":19},{"ruleId":"112","severity":1,"message":"133","line":3,"column":10,"nodeType":"114","messageId":"115","endLine":3,"endColumn":15},{"ruleId":"112","severity":1,"message":"132","line":4,"column":20,"nodeType":"114","messageId":"115","endLine":4,"endColumn":29},{"ruleId":"112","severity":1,"message":"130","line":5,"column":16,"nodeType":"114","messageId":"115","endLine":5,"endColumn":21},{"ruleId":"112","severity":1,"message":"134","line":4,"column":10,"nodeType":"114","messageId":"115","endLine":4,"endColumn":18},{"ruleId":"112","severity":1,"message":"135","line":2,"column":10,"nodeType":"114","messageId":"115","endLine":2,"endColumn":18},{"ruleId":"112","severity":1,"message":"120","line":3,"column":10,"nodeType":"114","messageId":"115","endLine":3,"endColumn":14},{"ruleId":"112","severity":1,"message":"136","line":4,"column":26,"nodeType":"114","messageId":"115","endLine":4,"endColumn":43},{"ruleId":"112","severity":1,"message":"137","line":7,"column":8,"nodeType":"114","messageId":"115","endLine":7,"endColumn":15},{"ruleId":"112","severity":1,"message":"138","line":66,"column":12,"nodeType":"114","messageId":"115","endLine":66,"endColumn":23},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'scaleKey' is assigned a value but never used.","'baseScale' is defined but never used.","'RGB' is defined but never used.","'Note' is defined but never used.","'notesArray' is defined but never used.","'StringInstrument' is defined but never used.",["139"],["140"],"'specificScales' is defined but never used.","'scales' is defined but never used.","'getStringInstrument' is defined but never used.","'RawStringInstruments' is defined but never used.","'specificChords' is defined but never used.","'notes' is defined but never used.","'createRenderablePattern' is defined but never used.","'intervals' is defined but never used.","'Scale' is defined but never used.","'hexToRgb' is defined but never used.","'Interval' is defined but never used.","'RenderablePattern' is defined but never used.","'classes' is defined but never used.","'colorSecond' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]