[{"C:\\Users\\vince\\guitar-trainer\\src\\index.tsx":"1","C:\\Users\\vince\\guitar-trainer\\src\\reportWebVitals.ts":"2","C:\\Users\\vince\\guitar-trainer\\src\\App.tsx":"3","C:\\Users\\vince\\guitar-trainer\\src\\definitions\\store.ts":"4","C:\\Users\\vince\\guitar-trainer\\src\\components\\RenderableArrayComponent.tsx":"5","C:\\Users\\vince\\guitar-trainer\\src\\definitions\\generate.ts":"6","C:\\Users\\vince\\guitar-trainer\\src\\definitions\\interfaces.ts":"7","C:\\Users\\vince\\guitar-trainer\\src\\definitions\\scales.ts":"8","C:\\Users\\vince\\guitar-trainer\\src\\definitions\\notes.ts":"9","C:\\Users\\vince\\guitar-trainer\\src\\definitions\\intervals.ts":"10","C:\\Users\\vince\\guitar-trainer\\src\\utils\\utils.ts":"11"},{"size":570,"mtime":1611007122947,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":1065,"mtime":1611007216459,"results":"15","hashOfConfig":"13"},{"size":1923,"mtime":1611009480865,"results":"16","hashOfConfig":"13"},{"size":1199,"mtime":1611011141768,"results":"17","hashOfConfig":"13"},{"size":75,"mtime":1611006200441,"results":"18","hashOfConfig":"13"},{"size":2856,"mtime":1611008596023,"results":"19","hashOfConfig":"13"},{"size":861,"mtime":1611006684855,"results":"20","hashOfConfig":"13"},{"size":1778,"mtime":1611010447466,"results":"21","hashOfConfig":"13"},{"size":2274,"mtime":1611006074350,"results":"22","hashOfConfig":"13"},{"size":347,"mtime":1611010849153,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1o33alj",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\vince\\guitar-trainer\\src\\index.tsx",[],["52","53"],"C:\\Users\\vince\\guitar-trainer\\src\\reportWebVitals.ts",[],"C:\\Users\\vince\\guitar-trainer\\src\\App.tsx",["54","55"],"import React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { useRenderableStore } from \"./definitions/store\"\nimport { RenderableArrayComponent } from './components/RenderableArrayComponent';\nimport { guitar } from './definitions/interfaces';\nimport { createSpecificScale, scales } from './definitions/scales';\nimport { notes } from './definitions/notes';\n\nfunction App() {\n\n  const renderableState = useRenderableStore()\n\n  useEffect(() => {\n    renderableState.add(guitar, \"notes\", createSpecificScale(notes.C, scales.major))\n  }, [])\n\n  let mappedRenderableArray;\n  if (renderableState?.renderableArrays) {\n\n    mappedRenderableArray = renderableState.renderableArrays.map(renderableArray => {\n      return <RenderableArrayComponent renderableArray={renderableArray} renderableState={renderableState}></RenderableArrayComponent>\n    })\n\n  }\n\n  return (\n    <div className=\"App\">\n      <button onClick={e => {/* renderableState.add() */ }}>add</button>\n     {mappedRenderableArray} \n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\vince\\guitar-trainer\\src\\definitions\\store.ts",["56"],"import create from \"zustand\"\r\nimport { RenderableArray, Note, RenderableNote, RenderableState, RenderableString, StringInstrument } from \"./interfaces\"\r\nimport { notesArray } from \"./notes\"\r\n\r\n\r\n/* export interface CreateRenderableArray {\r\n    (stringInstrument: StringInstrument, renderable: Renderable): RenderableArray;\r\n}\r\n\r\nlet createRenderableArray : CreateRenderableArray;\r\n\r\ncreateRenderableArray = function(stringInstrument, renderable) {\r\n\r\n    const renderableArray : RenderableArray = {\r\n\r\n    }\r\n\r\n    return \r\n} */\r\n\r\nexport const useRenderableStore = create<RenderableState>(set => ({\r\n\r\n\r\n    renderableArrays: [],\r\n\r\n    add: (stringInstrument, config, renderable) => set(state => {\r\n\r\n        const renderableStrings: RenderableString[] = []\r\n\r\n        for (const note of stringInstrument.tuning) {\r\n\r\n            const notes: RenderableNote[] = []\r\n\r\n            const renderableString: RenderableString = {\r\n                notes\r\n            }\r\n\r\n            renderableStrings.push(renderableString)\r\n\r\n            const indexInNotes: number = notesArray.indexOf(note)\r\n            for (let index = 0; index < stringInstrument.fretsCount; index++) {\r\n                const grabbedNote: Note = notesArray[(index + indexInNotes) % 12]\r\n                \r\n                const renderableNote: RenderableNote = {\r\n                    color:grabbedNote.standardColor,\r\n                    text:grabbedNote.id\r\n                }\r\n\r\n                notes.push(renderableNote)\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n        const renderableArray: RenderableArray = {\r\n            index: 0,\r\n            strings: renderableStrings,\r\n            heading:stringInstrument.tuning[0].id+\" \"+ renderable.id,\r\n            config\r\n        }\r\n\r\n\r\n        return {\r\n            renderableArrays: [renderableArray]\r\n        }\r\n    }),\r\n    remove: (id) => set(state => {\r\n\r\n        return {\r\n\r\n        }\r\n    }),\r\n\r\n\r\n\r\n}))","C:\\Users\\vince\\guitar-trainer\\src\\components\\RenderableArrayComponent.tsx",[],"C:\\Users\\vince\\guitar-trainer\\src\\definitions\\generate.ts",[],"C:\\Users\\vince\\guitar-trainer\\src\\definitions\\interfaces.ts",["57"],"import create from \"zustand\"\r\nimport { notes } from \"./notes\"\r\n\r\n\r\nexport interface Dictionary<Item> {\r\n    [index: string] : Item\r\n}\r\n\r\nexport interface Note {\r\n    readonly id: string,\r\n    readonly intervalFromC: Interval,\r\n    readonly standardColor: string,\r\n}\r\n\r\nexport interface Interval {\r\n    readonly id: string,\r\n    // readonly octaveName:string,\r\n    readonly step: number,\r\n    readonly standardSymbol: string,\r\n    // readonly octaveSymbol: string,\r\n    readonly standardColor: string,\r\n}\r\n\r\n\r\nexport interface Chord {\r\n    readonly intervals: Interval[],\r\n    readonly id: string,\r\n    readonly symbol: string,\r\n    // octaveSymbol:string,\r\n    // more symbols like #4 b5 #11? \r\n    readonly isTriad: boolean,\r\n    readonly isTetrad: boolean,\r\n    readonly presentInScales: Scale[],\r\n}\r\n\r\nexport interface SpecificChord {\r\n    readonly root: Note,\r\n    readonly id: string, // note name plus \r\n    readonly notes: Note[],\r\n    readonly chord: Chord,\r\n}\r\n\r\nexport interface Scale {\r\n\r\n    readonly id: string,\r\n    readonly steps: number[],\r\n    readonly chords: Chord[], // generated automatically\r\n    readonly intervals: Interval[],\r\n\r\n    readonly isMode: boolean,\r\n    readonly modes: Scale[], // generated automatically\r\n\r\n    readonly baseScale?: Scale,\r\n    readonly triads: Chord[],\r\n    readonly tetrads: Chord[],\r\n\r\n}\r\n\r\nexport interface SpecificScale {\r\n    readonly id: string,\r\n    readonly scale: Scale,\r\n    readonly notes: Note[],\r\n    readonly rootNote: Note,\r\n    readonly chords: SpecificChord[],\r\n\r\n    readonly triads: SpecificChord[],\r\n    readonly tetrads: SpecificChord[],\r\n}\r\n\r\n// specificChord or specificChord or interval or note\r\nexport type Renderable = SpecificScale | SpecificChord | Interval | Note\r\n\r\n\r\nexport interface RenderableNote {\r\n    readonly color: string,\r\n    readonly text: string,\r\n\r\n}\r\n\r\nexport interface RenderableString {\r\n\r\n    readonly notes: RenderableNote[],\r\n\r\n}\r\n\r\nexport interface RenderableArray {\r\n    readonly strings: RenderableString[],\r\n    readonly heading: string,\r\n    readonly index: number,\r\n    readonly config : \"notes\" | \"intervals\"\r\n}\r\n\r\n// A guitar, violin or ukulele tuning\r\nexport interface StringInstrument {\r\n    readonly id: string,\r\n    readonly fretsCount: number,\r\n    readonly tuning: Note[],\r\n}\r\n\r\nexport const guitar : StringInstrument = {\r\n    id:\"guitar\",\r\n    fretsCount:24,\r\n    tuning:[notes.E, notes.A, notes.D, notes.G, notes.B, notes.E],\r\n}\r\n\r\nexport type RenderableState = {\r\n\r\n    renderableArrays: RenderableArray[] | undefined,\r\n\r\n    add(\r\n        stringInstrument: StringInstrument,\r\n        config: \"notes\" | \"intervals\",\r\n        renderable: Renderable,\r\n        renderableSecondLayer?: Renderable,\r\n        index?: number,\r\n    ): void, // returns id\r\n\r\n    // removes renderableArray from array.\r\n    remove(id: string): void,\r\n\r\n}\r\n\r\n\r\n\r\n","C:\\Users\\vince\\guitar-trainer\\src\\definitions\\scales.ts",["58","59","60","61"],"import { Interval,SpecificChord, Scale, Chord, Dictionary, Note, SpecificScale } from \"./interfaces\"\r\nimport { intervals } from \"./intervals\"\r\n\r\nexport interface Scales {\r\n    major: Scale,\r\n}\r\n\r\nexport const scales: Scales = {\r\n    major: {\r\n        id: \"major\",\r\n        steps: [2, 2, 1, 2, 2, 2, 1],\r\n\r\n        intervals: [],\r\n        modes: [],\r\n        chords: [],\r\n        isMode: false,\r\n        triads: [],\r\n        tetrads: [],\r\n    }\r\n}\r\n\r\nexport function createSpecificScale(root: Note, scale: Scale): SpecificScale {\r\n\r\n    const notes: Note[] = []\r\n    const triads: SpecificChord[] = []\r\n    const tetrads: SpecificChord[] = []\r\n    const chords: SpecificChord[] = []\r\n\r\n    return {\r\n        notes,\r\n        triads,\r\n        tetrads,\r\n        chords,\r\n\r\n        scale,\r\n        id: root.id + \" \" + scale.id,\r\n        rootNote: root,\r\n\r\n    }\r\n\r\n}","C:\\Users\\vince\\guitar-trainer\\src\\definitions\\notes.ts",["62"],"C:\\Users\\vince\\guitar-trainer\\src\\definitions\\intervals.ts",["63"],"\r\nimport { Interval, Dictionary } from \"./interfaces\"\r\n\r\nexport interface Intervals {\r\n    PerfectUnison: Interval,\r\n    MinorSecond: Interval,\r\n    MajorSecond: Interval,\r\n    MinorThird:Interval,\r\n    MajorThird: Interval,\r\n    PerfectForth: Interval,\r\n    Tritone: Interval,\r\n    PerfectFifth: Interval,\r\n    MinorSixth: Interval,\r\n    MajorSixth: Interval,\r\n    MinorSeventh: Interval,\r\n    MajorSeventh: Interval,\r\n}\r\n\r\n// https://en.wikipedia.org/wiki/Interval_(music)#cite_ref-TritoneA4_6-0:~:text=below.-,Number%20of,Interval\r\n\r\nexport const intervals: Intervals = {\r\n\r\n    PerfectUnison: {\r\n        id: \"unison\",\r\n        step: 0,\r\n        standardSymbol: \"root\",\r\n        standardColor: \"transparent\"\r\n    },\r\n\r\n    MinorSecond: {\r\n        id: \"minorSecond\",\r\n        step: 1,\r\n        standardSymbol: \"b9\",\r\n        standardColor: \"#cf0e00\"\r\n    },\r\n\r\n    MajorSecond: {\r\n        id: \"majorSecond\",\r\n        step: 2,\r\n        standardSymbol: \"9\",\r\n        standardColor: \"#cf4f00\"\r\n    },\r\n\r\n    MinorThird: {\r\n        id: \"minorThird\",\r\n        step: 3,\r\n        standardSymbol: \"b3\",\r\n        standardColor: \"#72cf00\"\r\n    },\r\n\r\n    MajorThird: {\r\n        id: \"majorThird\",\r\n        step: 4,\r\n        standardSymbol: \"3\",\r\n        standardColor: \"#00751f\"\r\n    },\r\n    PerfectForth: {\r\n        id: \"perfectForth\",\r\n        step: 5,\r\n        standardSymbol: \"11\",\r\n        standardColor: \"#00751f\"\r\n    },\r\n    Tritone: {\r\n        id: \"tritone\",\r\n        step: 6,\r\n        standardSymbol: \"b5\",\r\n        standardColor: \"#00751f\"\r\n    },\r\n    \r\n    \r\n    PerfectFifth: {\r\n        id: \"perfectFifth\",\r\n        step: 7,\r\n        standardSymbol: \"5\",\r\n        standardColor: \"#00751f\"\r\n    },\r\n    \r\n    \r\n    MinorSixth: {\r\n        id: \"minorSixth\",\r\n        step:8,\r\n        standardSymbol: \"b13\",\r\n        standardColor: \"#00751f\"\r\n    },\r\n    MajorSixth: {\r\n        id: \"majorSixth\",\r\n        step: 9,\r\n        standardSymbol: \"13\",\r\n        standardColor: \"#00751f\"\r\n    },\r\n    MinorSeventh: {\r\n        id: \"minorSeventh\",\r\n        step: 10,\r\n        standardSymbol: \"7\",\r\n        standardColor: \"#00751f\"\r\n    },\r\n    MajorSeventh: {\r\n        id: \"majorSeventh\",\r\n        step: 11,\r\n        standardSymbol: \"Δ\",\r\n        standardColor: \"#00751f\"\r\n    },\r\n\r\n}","C:\\Users\\vince\\guitar-trainer\\src\\utils\\utils.ts",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":2,"column":8,"nodeType":"70","messageId":"71","endLine":2,"endColumn":12},{"ruleId":"72","severity":1,"message":"73","line":17,"column":6,"nodeType":"74","endLine":17,"endColumn":8,"suggestions":"75"},{"ruleId":"68","severity":1,"message":"76","line":2,"column":84,"nodeType":"70","messageId":"71","endLine":2,"endColumn":100},{"ruleId":"68","severity":1,"message":"77","line":1,"column":8,"nodeType":"70","messageId":"71","endLine":1,"endColumn":14},{"ruleId":"68","severity":1,"message":"78","line":1,"column":10,"nodeType":"70","messageId":"71","endLine":1,"endColumn":18},{"ruleId":"68","severity":1,"message":"79","line":1,"column":41,"nodeType":"70","messageId":"71","endLine":1,"endColumn":46},{"ruleId":"68","severity":1,"message":"80","line":1,"column":48,"nodeType":"70","messageId":"71","endLine":1,"endColumn":58},{"ruleId":"68","severity":1,"message":"81","line":2,"column":10,"nodeType":"70","messageId":"71","endLine":2,"endColumn":19},{"ruleId":"68","severity":1,"message":"80","line":2,"column":9,"nodeType":"70","messageId":"71","endLine":2,"endColumn":19},{"ruleId":"68","severity":1,"message":"80","line":2,"column":20,"nodeType":"70","messageId":"71","endLine":2,"endColumn":30},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'renderableState'. Either include it or remove the dependency array.","ArrayExpression",["84"],"'StringInstrument' is defined but never used.","'create' is defined but never used.","'Interval' is defined but never used.","'Chord' is defined but never used.","'Dictionary' is defined but never used.","'intervals' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},"Update the dependencies array to be: [renderableState]",{"range":"87","text":"88"},[574,576],"[renderableState]"]