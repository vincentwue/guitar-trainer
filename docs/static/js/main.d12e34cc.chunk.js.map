{"version":3,"sources":["definitions/intervals.ts","definitions/notes.ts","definitions/chords.ts","definitions/scales.ts","definitions/instruments.ts","definitions/renderables.ts","definitions/index.ts","utils/store.ts","components/Cell.tsx","utils/utils.ts","components/Pattern.tsx","components/SimpleState.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["intervals","PerfectUnison","id","step","standardSymbol","standardColor","MinorSecond","MajorSecond","MinorThird","MajorThird","PerfectForth","Tritone","PerfectFifth","MinorSixth","MajorSixth","MinorSeventh","MajorSeventh","intervalsArray","Object","values","notes","C","intervalFromC","Db","D","Eb","E","F","Gb","G","Ab","A","Bb","B","notesArray","chords","Major","symbol","Major7","Minor7b5","Chord7b9","Chord7Sharp5","PowerChord","specificChords","rootNote","rawChord","interval","push","presentInScales","generateSpecificChords","RawScales","steps","modes","HarmonicMinor","MelodicMinor","scales","entries","scaleValue","rawScale","i","length","modeString","slice","newScale","isMode","generateIntervals","generateScales","result","last","map","n","specificScales","scale","specificScale","isScale","triads","tetrads","stepOfMode","intervalToRoot","nameOfBaseScale","rootNoteOfBaseScaleStepsFromC","rootNoteOfBaseScale","find","note","baseSpecificScale","spscale","generateSpecificScales","specificChordsArray","specificChordsResult","specificChord","filter","includes","RawStringInstruments","standardGuitar","fretsCount","tuning","dropDGuitar","createRenderablePattern","stringInstrument","renderable","strings","string","from","to","getInterval","hidden","source","fretsArray","makeFretsArray","fretscount","array","show","renderables","guitar","rawStringInstrument","indexInNotes","indexOf","index","grabbedNote","getStringInstrument","renderablePattern","generateAllRenderables","DisplayType","useSimpleStore","create","set","index1","index2","firstIntervals","secondIntervals","secondHidden","setIndex1","state","setIndex2","toggleSecondHidden","toggleFirstIntervals","toggleSecondIntervals","hexToRgb","hex","exec","parseInt","StringTemplate","props","style","display","width","height","alignItems","position","background","justifyContent","top","left","right","bottom","children","Pattern","first","second","colorFirst","renderableNote","className","color","backgroundColor","borderRadius","fontSize","console","log","reversedSecondStrings","mappedNotes","stringIndex","fretIndex","borderRight","borderLeft","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","colors","Intervals","symbols","Notes","mappedFretNumbers","textAlign","margin","gridTemplateColumns","gridTemplateRows","SimpleState","options","value","hasOwnProperty","pattern","split","padding","paddingLeft","onClick","e","abc","flexDirection","fontWeight","borderBottom","href","target","onChange","parseFloat","marginLeft","type","checked","flexGrow","overflow","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPA6BaA,EAAuB,CAEhCC,cAAe,CACXC,GAAI,SACJC,KAAM,EACNC,eAAgB,OAChBC,cAAe,WAGnBC,YAAa,CACTJ,GAAI,cACJC,KAAM,EACNC,eAAgB,KAChBC,cAAe,WAGnBE,YAAa,CACTL,GAAI,cACJC,KAAM,EACNC,eAAgB,IAChBC,cAAe,WAGnBG,WAAY,CACRN,GAAI,aACJC,KAAM,EACNC,eAAgB,KAChBC,cAAe,WAGnBI,WAAY,CACRP,GAAI,aACJC,KAAM,EACNC,eAAgB,IAChBC,cAAe,WAEnBK,aAAc,CACVR,GAAI,eACJC,KAAM,EACNC,eAAgB,KAChBC,cAAe,WAEnBM,QAAS,CACLT,GAAI,UACJC,KAAM,EACNC,eAAgB,KAChBC,cAAe,WAInBO,aAAc,CACVV,GAAI,eACJC,KAAM,EACNC,eAAgB,IAChBC,cAAe,WAInBQ,WAAY,CACRX,GAAI,aACJC,KAAM,EACNC,eAAgB,MAChBC,cAAe,WAEnBS,WAAY,CACRZ,GAAI,aACJC,KAAM,EACNC,eAAgB,KAChBC,cAAe,WAEnBU,aAAc,CACVb,GAAI,eACJC,KAAM,GACNC,eAAgB,IAChBC,cAAe,WAEnBW,aAAc,CACVd,GAAI,eACJC,KAAM,GACNC,eAAgB,SAChBC,cAAe,YAKVY,EAA6BC,OAAOC,OAAOnB,GCzF3CoB,EAAgB,CACzBC,EAAE,CACEnB,GAAG,IACHoB,cAActB,EAAUC,cACxBI,cAAc,WAElBkB,GAAG,CACCrB,GAAG,KACHoB,cAActB,EAAUM,YACxBD,cAAc,WAElBmB,EAAE,CACEtB,GAAG,IACHoB,cAActB,EAAUO,YACxBF,cAAc,WAElBoB,GAAG,CACCvB,GAAG,KACHoB,cAActB,EAAUQ,WACxBH,cAAc,WAElBqB,EAAE,CACExB,GAAG,IACHoB,cAActB,EAAUS,WACxBJ,cAAc,WAElBsB,EAAE,CACEzB,GAAG,IACHoB,cAActB,EAAUU,aACxBL,cAAc,WAElBuB,GAAG,CACC1B,GAAG,KACHoB,cAActB,EAAUW,QACxBN,cAAc,WAElBwB,EAAE,CACE3B,GAAG,IACHoB,cAActB,EAAUY,aACxBP,cAAc,WAElByB,GAAG,CACC5B,GAAG,KACHoB,cAActB,EAAUa,WACxBR,cAAc,WAElB0B,EAAE,CACE7B,GAAG,IACHoB,cAActB,EAAUc,WACxBT,cAAc,WAElB2B,GAAG,CACC9B,GAAG,KACHoB,cAActB,EAAUe,aACxBV,cAAc,WAElB4B,EAAE,CACE/B,GAAG,IACHoB,cAActB,EAAUgB,aACxBX,cAAc,YAIT6B,EAAsBhB,OAAOC,OAAOC,GCpFpCe,EAAoB,CAM7BC,MAAO,CACHlC,GAAI,QACJF,UAAW,CACPA,EAAUC,cACVD,EAAUS,WACVT,EAAUY,cACdyB,OAAQ,IAEZC,OAAQ,CACJpC,GAAI,SACJF,UAAW,CACPA,EAAUC,cACVD,EAAUS,WACVT,EAAUY,aACVZ,EAAUgB,cAEdqB,OAAQ,IAEZE,SAAU,CACNrC,GAAI,WACJF,UAAW,CACPA,EAAUC,cACVD,EAAUQ,WACVR,EAAUe,aACVf,EAAUW,SACd0B,OAAQ,QAEZG,SAAU,CACNtC,GAAI,MACJF,UAAW,CACPA,EAAUC,cACVD,EAAUS,WACVT,EAAUY,aACVZ,EAAUe,aACVf,EAAUM,aAEd+B,OAAQ,OAEZI,aAAc,CACVvC,GAAI,MACJF,UAAW,CACPA,EAAUC,cACVD,EAAUS,WACVT,EAAUa,WACVb,EAAUe,cAEdsB,OAAQ,OAEZK,WAAY,CACRxC,GAAI,IACJF,UAAW,CACPA,EAAUC,cACVD,EAAUY,cACdyB,OAAQ,MAkCHM,EAEb,WAEI,IAF+C,EAEzCA,EAAkC,GAFO,cAIxBT,GAJwB,IAI/C,2BAEI,IAFgC,IAAzBU,EAAwB,QAE/B,MAAuB1B,OAAOC,OAAOgB,GAArC,eAA8C,CAAzC,IAAyC,EAAnCU,EAAQ,KAGTzB,EAAgB,GAHoB,cAKnByB,EAAS7C,WALU,IAK1C,2BAA2C,CAAC,IAAjC8C,EAAgC,QAEvC1B,EAAM2B,KAAKb,GAAYY,EAAS3C,KAAOyC,EAAStB,cAAcnB,MAAQ,MAPhC,8BAW1CwC,EAAeI,KAAK,CAChBH,WACA1C,GAAI0C,EAAS1C,GAAK,IAAM2C,EAAS3C,GACjCkB,QACApB,UAAW6C,EAAS7C,UACpBqC,OAAQO,EAAS1C,GAAK2C,EAASR,OAC/BW,gBAAiB,MAvBkB,8BA6B/C,OAAOL,EA/BoCM,G,WC7FlCC,EAAgC,CACzCd,MAAO,CACHlC,GAAI,QACJiD,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1BC,MAAO,CACH,gBACA,UACA,YACA,UACA,cACA,kBACA,aAGRC,cAAe,CACXnD,GAAI,iBACJiD,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1BC,MAAO,CACH,sBACA,4CACA,wBACA,oCACA,+BACA,oBACA,mCAGRE,aAAc,CACVpD,GAAI,gBACJiD,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1BC,MAAO,CACH,qBACA,aACA,oBACA,mBACA,kBACA,4BACA,uCAqDCG,EAEb,WAII,IAFA,IAAMA,EAAkB,GAExB,MAAqCrC,OAAOsC,QAAQN,GAApD,eAAgE,CAAC,IAAD,sBAA1CO,GAA0C,WAEtDC,EAAqBD,EAE3B,GAAKC,EAASN,MAKd,IAAK,IAAIO,EAAI,EAAGA,EAAID,EAASN,MAAMQ,OAAQD,IAAK,CAC5C,IAAME,EAAaH,EAASN,MAAMO,GAC5BR,EAAK,sBACJO,EAASP,MAAMW,MAAMH,EAAGD,EAASN,MAAMQ,SADnC,YAEJF,EAASP,MAAMW,MAAM,EAAGH,KAEzBI,EAAW,CACb7D,GAAI2D,EACJV,QACAa,OAAc,IAANL,EACR3D,UAAWiE,EAAkBd,GAC7BO,SAAUD,EACVtD,KAAMwD,GAGVJ,EAAOR,KAAKgB,QAnBZR,EAAOR,KAAKU,GA0BpB,OAAOF,EArCoBW,GAwC/B,SAASD,EAAkBd,GAIvB,IAFA,IAAMgB,EAAmB,GACrBC,EAAO,EACFT,EAAI,EAAGA,EAAIR,EAAMS,OAAS,EAAGD,IAAK,CAEvCS,GADgBjB,EAAMQ,GAEtBQ,EAAOpB,KAAKqB,GAGhB,MAAM,CAAEpE,EAAUC,eAAlB,mBAAoCkE,EAAOE,KAAI,SAAAC,GAAC,OAAIrD,EAAeqD,QAIhE,IAAMC,EAGb,WAEI,IAF+C,EAEzCA,EAAkC,GAFO,cAIxBrC,GAJwB,IAI/C,2BAAmC,CAAC,IAAD,EAAxBU,EAAwB,sBAEXW,GAFW,IAE/B,2BAA4B,CAAC,IAAD,EAAjBiB,EAAiB,QAElBpD,EAAgB,GAFE,cAKDoD,EAAMxE,WALL,IAKxB,2BAAwC,CAAC,IAA9B8C,EAA6B,QAEpC1B,EAAM2B,KAAKb,GAAYY,EAAS3C,KAAOyC,EAAStB,cAAcnB,MAAQ,MAPlD,8BAYxB,IAAMsE,EAA+B,CACjCC,SAAS,EACTxE,GAAI0C,EAAS1C,GAAK,IAAMsE,EAAMtE,GAC9BsE,QACApD,QACAwB,WACA5C,UAAWwE,EAAMxE,UAEjBmC,OAAQ,GACRwC,OAAQ,GACRC,QAAS,IAGPzC,EAASc,EAAuBwB,GACtCA,EAActC,OAASA,EAAOA,OAE9BoC,EAAexB,KAAK0B,IA9BO,gCAJY,8BAwC/C,IAxC+C,iBAwC1C,IAAMA,EAAa,KAEdI,EAAaJ,EAAcD,MAAMrE,KACjC2E,EAAiBL,EAAcD,MAAMxE,UAAU6E,GAC/CE,EAAkBN,EAAcD,MAAMd,SAASN,MAAM,GACrD4B,GAAiCP,EAAc7B,SAAStB,cAAcnB,KAAO,GAAK2E,EAAe3E,MAAQ,GACxG8E,EAAsB/C,EAAWgD,MAAK,SAAAC,GAAI,OAAIA,EAAK7D,cAAcnB,OAAS6E,KAEhFP,EAAcW,kBAAoBb,EAAeW,MAAK,SAAAG,GAAO,OAAIA,EAAQnF,MAA0B,OAAnB+E,QAAmB,IAAnBA,OAAA,EAAAA,EAAqB/E,IAAG,IAAI6E,MARjH,MAA4BR,EAA5B,eAA6C,IAc7C,OAAOA,EAzDoCe,GA4D/C,SAASrC,EAAuBwB,GAQ5B,IANA,IAAMrD,EAAQqD,EAAcrD,MAEtBmE,EAAyC,GAItC5B,EAAI,EAAGA,EAAIvC,EAAMwC,OAAQD,IAAK,CACnC,IADmC,EAC7BwB,EAAO/D,EAAMuC,GACb6B,EAAwC,GAFX,cAGP7C,GAHO,IAGnC,2BAA4C,CAAC,IAAlC8C,EAAiC,QAExC,GAAIA,EAAcrE,MAAM,KAAO+D,EAGuB,IADrCM,EAAcrE,MAC1BsE,QAAO,SAAAP,GAAI,OAAK/D,EAAMuE,SAASR,MAAOvB,SAKvC4B,EAAqBzC,KAAK0C,GAC1BA,EAAczC,gBAAgBD,KAAK0B,KAdR,8BAkBnCc,EAAoBxC,KAAKyC,GAU7B,MAAO,CAAErD,OAAQoD,EAAqBZ,OA9BN,GA8BcC,QA/Bb,IClN9B,IAAMgB,EAAsD,CAC/DC,eAAe,CACX3F,GAAI,SACJ4F,WAAY,GACZC,OAAQ,CAAC3E,EAAMM,EAAGN,EAAMW,EAAGX,EAAMI,EAAGJ,EAAMS,EAAGT,EAAMa,EAAGb,EAAMM,IAEhEsE,YAAY,CACR9F,GAAI,SACJ4F,WAAY,GACZC,OAAQ,CAAC3E,EAAMI,EAAGJ,EAAMW,EAAGX,EAAMI,EAAGJ,EAAMS,EAAGT,EAAMa,EAAGb,EAAMM,KC8B7D,SAASuE,EAAwBC,EAAoCC,GAExE,IAAMC,EAAUF,EAAiBE,QAAQ/B,KAAI,SAAAgC,GAEzC,OAAOA,EAAOhC,KAAI,SAAAc,GAKd,MAAO,CACHrC,SC3CT,SAAqBwD,EAAYC,GAEpC,IAAMjC,GAAMiC,EAAGjF,cAAcnB,KAAOmG,EAAKhF,cAAcnB,KAAQ,IAAM,GAErE,OAAOc,EAAeqD,GDmCGkC,CAAYL,EAAWvD,SAAUuC,GAIpCA,OACVsB,QAASN,EAAW/E,MAAMuE,SAASR,UAQ/C,MAAO,CACHjF,GAAIiG,EAAWjG,GACfF,UAAWmG,EAAWnG,UACtBoB,MAAO+E,EAAW/E,MAClBsF,OAAQP,EACRC,QAASA,EACTF,mBACAS,WAAWC,EAAeV,EAAiBJ,aAKnD,SAASc,EAAeC,GAIpB,IAFA,IAAMC,EAAyB,GACzBC,EAAO,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,IAC5BpD,EAAI,EAAGA,EAAIkD,EAAYlD,IAExBoD,EAAKpB,SAAShC,GAAImD,EAAM/D,KAAKY,GAC5BmD,EAAM/D,KAAK,MAIpB,OAAO+D,EAIJ,IAAME,EAEb,WAKI,IAHA,IAAMC,ED1DH,SAA6BC,GAEhC,IAF8F,EAExFd,EAAqB,GAFmE,cAI3Ec,EAAoBnB,QAJuD,IAI9F,2BAA+C,CAK3C,IAL4C,IAArCZ,EAAoC,QAErCkB,EAAiB,GAEjBc,EAAuBjF,EAAWkF,QAAQjC,GACvCkC,EAAQ,EAAGA,EAAQH,EAAoBpB,WAAYuB,IAAS,CACjE,IAAMC,EAAoBpF,GAAYmF,EAAQF,GAAgB,IAG9Dd,EAAOtD,KAAKuE,GAIhBlB,EAAQrD,KAAKsD,IAjB6E,8BAqB9F,MAAO,CACHD,UACAL,OAAOmB,EAAoBnB,OAC3BD,WAAWoB,EAAoBpB,YCkCpByB,CAAoB3B,EAAqBC,gBAClDmB,EAAmC,GAEzC,4BAA6BzC,GAA7B,YAAgD5B,IAAhD,eAAiE,CAA5D,IAAMwD,EAAU,KACXqB,EAAoBvB,EAAwBgB,EAAQd,GAC1Da,EAAYjE,KAAKyE,GAGrB,OAAOR,EAZqCS,GE/DzC,ICNKC,EDMCC,EAAiBC,aAAc,SAAAC,GAAG,MAAK,CAChDb,cAEAc,OAAO,EACPC,OAAO,EAEPC,gBAAe,EACfC,iBAAgB,EAEhBC,cAAa,EAEbC,UAAW,SAACL,GAAD,OAAYD,GAAI,SAAAO,GAAK,MAAK,CAAEN,cACvCO,UAAW,SAACN,GAAD,OAAYF,GAAI,SAAAO,GAAK,MAAK,CAAEL,cACvCO,mBAAoB,kBAAMT,GAAI,SAAAO,GAAK,MAAK,CAAEF,cAAcE,EAAMF,kBAC9DK,qBAAsB,kBAAMV,GAAI,SAAAO,GAAK,MAAK,CAAEJ,gBAAgBI,EAAMJ,oBAClEQ,sBAAuB,kBAAMX,GAAI,SAAAO,GAAK,MAAK,CAAEH,iBAAiBG,EAAMH,yBEjCjE,SAASQ,EAASC,GACrB,IAAIvE,EAAS,4CAA4CwE,KAAKD,GAC9D,OAAKvE,EAME,OAJAyE,SAASzE,EAAO,GAAI,IAIH,IAHjByE,SAASzE,EAAO,GAAI,IAGW,IAF/ByE,SAASzE,EAAO,GAAI,IAEyB,QANhC,QDiBxB,SAAS0E,EAAeC,GAEpB,OAAO,sBAAKC,MAAO,CAAEC,QAAS,OAAQC,MAAO,OAAQC,OAAQ,OAAQC,WAAY,SAAUC,SAAU,YAA9F,UACH,qBAAKL,MAAO,CACRC,QAAS,OACTC,MAAO,OACPI,WAAY,QACZH,OAAQ,SASZ,qBAAKH,MAAO,CACRK,SAAU,WACVJ,QAAS,OACTG,WAAY,SACZG,eAAgB,SAChBC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,GARZ,SAWKZ,EAAMa,cAMJ,SAASC,EAAQd,GAAkB,IAItCe,EAAkBf,EAAlBe,MAAOC,EAAWhB,EAAXgB,OACRC,EAAatB,EAASoB,EAAMG,eAAelH,SAASzC,eACtCoI,EAASqB,EAAOE,eAAelH,SAASzC,eAE7D,OAAIwJ,EAAMG,eAAevD,QAAUqD,EAAOE,eAAevD,OAAe,cAACoC,EAAD,IAEjE,qBAAKE,MAAO,CAAEG,OAAQ,IAAtB,SAEH,cAACL,EAAD,UACI,sBAAKE,MAAO,CACRK,SAAU,WACVF,OAAQ,OACRD,MAAO,OACPD,QAAS,QAJb,UAOI,qBAAKiB,UAAU,QAAQlB,MAAO,CAC1BK,SAAU,WACVJ,QAASa,EAAMG,eAAevD,OAAS,OAAS,OAChD0C,WAAY,SACZG,eAAgB,SAChBC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRQ,MAAO,QACPC,gBAAiBN,EAAMG,eAAelH,WAAa9C,EAAUC,cAAe,OAAS8J,EACrFK,aAAa,IAXjB,SAcKtB,EAAMe,MAAMG,eAAe7E,KAAKjF,KAGrC,qBAAK+J,UAAU,SAASlB,MAAO,CAC3BK,SAAU,WACVJ,QAASc,EAAOE,eAAevD,QAAUqC,EAAMZ,aAAe,OAAS,OACvEiB,WAAY,SACZG,eAAgB,SAChBC,IAAK,EACLC,KAAM,MACNE,OAAQ,MACRD,MAAO,EACPS,MAAM,OACNG,SAAS,GAEThB,WAAWS,EAAOE,eAAelH,WAAa9C,EAAUC,cAAgB,MAAQ,QAEhFmK,aAAa,aE/FlB,SAASR,EAAQd,GAE9BwB,QAAQC,IAAIzB,GAEZ,IAAM0B,EAAwB1B,EAAMgB,OAAO1D,QAErCqE,EAAc3B,EAAMe,MAAMzD,QAAQ/B,KAAI,SAACgC,EAAQqE,GAkCnD,OAhCqBrE,EAAOhC,KAAI,SAAC2F,EAAgBW,GAG/C,IAAIC,EAAc,sBACdC,EAAa,sBAQjB,OAPkB,IAAdF,IAAiBC,EAAc,mBACjB,KAAdD,IAAkBC,EAAc,mBAClB,KAAdD,IAAkBC,EAAc,mBAClB,IAAdD,IAAiBE,EAAa,mBAChB,KAAdF,IAAkBE,EAAa,mBACjB,KAAdF,IAAkBE,EAAa,mBAE5B,qBAAuB9B,MAAO,CACnC+B,gBAAiBH,EAAY,EAC7BI,cAAeJ,EAAY,EAC3BK,aAAclC,EAAMe,MAAMzD,QAAQxC,OAAS8G,EAC3CO,WAAYnC,EAAMe,MAAMzD,QAAQxC,OAAS8G,EAEzCE,cACAC,cAPK,SAUJ,cAAC,EAAD,CACD3C,aAAcY,EAAMZ,aACpB2B,MAAO,CAAEG,iBAAgBkB,OAAQxD,EAAYyD,UAAWC,QAAS1D,EAAY2D,OAC7EvB,OAAQ,CAAEE,eAAgBQ,EAAsBE,GAAaC,GAAYO,OAAQxD,EAAYyD,UAAWC,QAAS1D,EAAY2D,UAb7GV,SAuBhBW,EAAoBxC,EAAMe,MAAMlD,WAAWtC,KAAI,SAACC,EAAGX,GACvD,OAAO,qBAAaoF,MAAO,CACzB+B,gBAAiBnH,EAAI,EACrBoH,cAAepH,EAAI,EACnBqH,aAAclC,EAAMe,MAAMzD,QAAQxC,OAAS,EAC3CqH,WAAYnC,EAAMe,MAAMzD,QAAQxC,OAAS,EACzC2H,UAAU,UALL,SAOHjH,GAAQ,IAPKX,MAUnB,OACE,8BACE,sBAAMoF,MAAO,CACXyC,OAAQ,GACRnB,SAAU,GACVrB,QAAS,OACTyC,oBAAqB,UAAY3C,EAAMe,MAAMlD,WAAW/C,OAAS,SACjE8H,iBAAkB,UAAY5C,EAAMe,MAAMzD,QAAQxC,OAAS,UAL7D,UAOG6G,EACAa,OCvEM,SAASK,IAEpB,IAAMvD,EAAQT,IACd2C,QAAQC,IAAInC,GAEZ,IAIIpF,EAJE4I,EAAUxD,EAAMpB,YAAY3C,KAAI,SAAC8B,EAAYxC,GAC/C,OAAO,wBAAgBkI,MAAOlI,EAAvB,SAA2BwC,EAAWjG,IAAzByD,MAIpByE,EAAMpB,YAAYoB,EAAMN,QAAQpB,OAAOoF,eAAe,qBAItD9I,EAF0BoF,EAAMpB,YAAYoB,EAAMN,QAAQpB,OAEtB1D,gBAE/B0C,QAAO,SAAAqG,GAAO,OAAIA,EAAQ7L,GAAG8L,MAAM,KAAK,KAAO5D,EAAMpB,YAAYoB,EAAMN,QAAQ5H,GAAG8L,MAAM,KAAK,MAC7F3H,KAAI,SAACI,EAAed,GAAO,IAAD,EACvB,OAAO,gCACH,wBACIoF,MAAO,CAAEkD,QAAS,GAAIC,YAAa,GAAIV,OAAQ,GAAInB,SAAU,GAAIpB,MAAO,IAAKsC,UAAW,QACxFY,QAAS,SAAAC,GAEL,IAAMC,EAAMrF,EAAY3C,KAAI,SAAA8B,GAAU,OAAIA,EAAWjG,MAAIkH,QAAQ3C,EAAcvE,IAC/EkI,EAAMC,UAAUgE,IALxB,SAOQ5H,EAAcvE,KACrB,sBAAwBuE,EAAcD,MAAMrE,KAAO,GAAK,SAAxD,UAAkEsE,EAAcW,yBAAhF,aAAkE,EAAiClF,MATvFyD,OAe7B,OAAO,sBAAMoF,MAAO,CAAEsB,SAAU,GAAIrB,QAAQ,OAAQsD,cAAc,SAAWpD,OAAO,QAA7E,UAEH,sBAAKH,MAAO,CAAEC,QAAS,OAAQsD,cAAe,MAAOnD,WAAY,SAAUoD,WAAW,SAAWlC,SAAS,GAAI4B,QAAQ,GAAIO,aAAa,kBAAmBrC,gBAAgB,WAA1K,2DAEI,qBAAKpB,MAAO,CAACsB,SAAS,GAAI6B,YAAY,GAAIlD,QAAQ,OAAOuD,WAAW,SAAUpD,WAAW,SAAUG,eAAe,UAAlH,SAEA,mBAAGmD,KAAK,+CAA+CC,OAAO,SAA9D,sCAGA,wBAIJ,sBAAK3D,MAAO,CAAEC,QAAS,OAAQsD,cAAe,SAAUnD,WAAY,cAApE,UAYI,sBAAKJ,MAAO,CAAEE,MAAO,OAAQD,QAAS,OAAQiD,QAAS,IAAvD,UACI,qBAAKlD,MAAO,CAAEE,MAAO,KAArB,0DAEA,wBAAQ0D,SAAU,SAAAP,GAAC,OAAIhE,EAAMD,UAAUyE,WAAWR,EAAEM,OAAOb,SAAS9C,MAAO,CAAEsB,SAAU,IAAMwB,MAAOzD,EAAMN,OAA1G,SAEK8D,OAGT,sBAAK7C,MAAO,CAAEE,MAAO,OAAQD,QAAS,OAAQiD,QAAS,IAAvD,UAEI,qBAAKlD,MAAO,CAAEE,MAAO,KAArB,6DAEA,wBAAQ0D,SAAU,SAAAP,GAAC,OAAIhE,EAAMC,UAAUuE,WAAWR,EAAEM,OAAOb,SAAS9C,MAAO,CAAEsB,SAAU,IAAMwB,MAAOzD,EAAML,OAA1G,SACK6D,OAKT,qBAAK7C,MAAO,CAAEE,MAAO,OAAQD,QAAS,OAAQwC,OAAQ,GAAIqB,WAAW,KAArE,SAEI,kCACI,uBAAOC,KAAK,WAAWC,QAAS3E,EAAMF,aAAcyE,SAAU,SAAAP,GAAC,OAAIhE,EAAME,wBAD7E,4BAUR,cAAC,EAAD,CACIJ,aAAcE,EAAMF,aACpB2B,MAAOzB,EAAMpB,YAAYoB,EAAMN,QAC/BgC,OAAQ1B,EAAMpB,YAAYoB,EAAML,QAChCC,eAAgBI,EAAMJ,eACtBC,gBAAiBG,EAAMH,kBAG3B,qBAAKc,MAAO,CAAEC,QAAS,OAAQsD,cAAe,SAAUnD,WAAY,aAAcD,OAAQ,EAAG8D,SAAS,EAAGC,SAAU,QAAnH,SACKjK,Q,SHtFD0E,K,sBAAAA,E,eAAAA,M,KIHGwF,MAXf,WAIE,OACE,qBAAKjD,UAAU,MAAf,SACC,cAAC0B,EAAD,OCGUwB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d12e34cc.chunk.js","sourcesContent":["\r\n\r\n\r\nexport interface Intervals {\r\n    PerfectUnison: Interval,\r\n    MinorSecond: Interval,\r\n    MajorSecond: Interval,\r\n    MinorThird: Interval,\r\n    MajorThird: Interval,\r\n    PerfectForth: Interval,\r\n    Tritone: Interval,\r\n    PerfectFifth: Interval,\r\n    MinorSixth: Interval,\r\n    MajorSixth: Interval,\r\n    MinorSeventh: Interval,\r\n    MajorSeventh: Interval,\r\n}\r\n\r\nexport interface Interval {\r\n    readonly id: string,\r\n    // readonly octaveName:string,\r\n    readonly step: number,\r\n    readonly standardSymbol: string,\r\n    // readonly octaveSymbol: string,\r\n    readonly standardColor: string,\r\n}\r\n\r\n// https://en.wikipedia.org/wiki/Interval_(music)#cite_ref-TritoneA4_6-0:~:text=below.-,Number%20of,Interval\r\n\r\nexport const intervals: Intervals = {\r\n\r\n    PerfectUnison: {\r\n        id: \"unison\",\r\n        step: 0,\r\n        standardSymbol: \"root\",\r\n        standardColor: \"#000000\"\r\n    },\r\n\r\n    MinorSecond: {\r\n        id: \"minorSecond\",\r\n        step: 1,\r\n        standardSymbol: \"b9\",\r\n        standardColor: \"#cf0e00\"\r\n    },\r\n\r\n    MajorSecond: {\r\n        id: \"majorSecond\",\r\n        step: 2,\r\n        standardSymbol: \"9\",\r\n        standardColor: \"#cf4f00\"\r\n    },\r\n\r\n    MinorThird: {\r\n        id: \"minorThird\",\r\n        step: 3,\r\n        standardSymbol: \"b3\",\r\n        standardColor: \"#72cf00\"\r\n    },\r\n\r\n    MajorThird: {\r\n        id: \"majorThird\",\r\n        step: 4,\r\n        standardSymbol: \"3\",\r\n        standardColor: \"#FF7F50\"\r\n    },\r\n    PerfectForth: {\r\n        id: \"perfectForth\",\r\n        step: 5,\r\n        standardSymbol: \"11\",\r\n        standardColor: \"#00751f\"\r\n    },\r\n    Tritone: {\r\n        id: \"tritone\",\r\n        step: 6,\r\n        standardSymbol: \"b5\",\r\n        standardColor: \"#9FE2BF\"\r\n    },\r\n\r\n\r\n    PerfectFifth: {\r\n        id: \"perfectFifth\",\r\n        step: 7,\r\n        standardSymbol: \"5\",\r\n        standardColor: \"#6495ED\"\r\n    },\r\n\r\n\r\n    MinorSixth: {\r\n        id: \"minorSixth\",\r\n        step: 8,\r\n        standardSymbol: \"b13\",\r\n        standardColor: \"#00751f\"\r\n    },\r\n    MajorSixth: {\r\n        id: \"majorSixth\",\r\n        step: 9,\r\n        standardSymbol: \"13\",\r\n        standardColor: \"#900C3F\"\r\n    },\r\n    MinorSeventh: {\r\n        id: \"minorSeventh\",\r\n        step: 10,\r\n        standardSymbol: \"7\",\r\n        standardColor: \"#CCCCFF\"\r\n    },\r\n    MajorSeventh: {\r\n        id: \"majorSeventh\",\r\n        step: 11,\r\n        standardSymbol: \"Δ\",\r\n        standardColor: \"#40E0D0\"\r\n    },\r\n\r\n}\r\n\r\nexport const intervalsArray: Interval[] = Object.values(intervals)\r\n\r\n","\r\nimport { Interval, intervals } from \"./intervals\"\r\n\r\n\r\nexport interface Notes {\r\n    C:Note,\r\n    Db:Note,\r\n    D:Note,\r\n    Eb:Note,\r\n    E:Note,\r\n    F:Note,\r\n    Gb:Note,\r\n    G:Note,\r\n    Ab:Note,\r\n    A:Note,\r\n    Bb:Note,\r\n    B:Note,\r\n}\r\n\r\nexport interface Note {\r\n    readonly id: string,\r\n    readonly intervalFromC: Interval,\r\n    readonly standardColor: string,\r\n}\r\n\r\nexport const notes : Notes = {\r\n    C:{\r\n        id:\"C\",\r\n        intervalFromC:intervals.PerfectUnison,\r\n        standardColor:\"#ffffff\",\r\n    },\r\n    Db:{\r\n        id:\"Db\",\r\n        intervalFromC:intervals.MinorSecond,\r\n        standardColor:\"#FF0000\",\r\n    },\r\n    D:{\r\n        id:\"D\",\r\n        intervalFromC:intervals.MajorSecond,\r\n        standardColor:\"#800000\",\r\n    },\r\n    Eb:{\r\n        id:\"Eb\",\r\n        intervalFromC:intervals.MinorThird,\r\n        standardColor:\"#FFFF00\",\r\n    },\r\n    E:{\r\n        id:\"E\",\r\n        intervalFromC:intervals.MajorThird,\r\n        standardColor:\"#808000\",\r\n    },\r\n    F:{\r\n        id:\"F\",\r\n        intervalFromC:intervals.PerfectForth,\r\n        standardColor:\"#00FF00\",\r\n    },\r\n    Gb:{\r\n        id:\"Gb\",\r\n        intervalFromC:intervals.Tritone,\r\n        standardColor:\"#008000\",\r\n    },\r\n    G:{\r\n        id:\"G\",\r\n        intervalFromC:intervals.PerfectFifth,\r\n        standardColor:\"#00FFFF\",\r\n    },\r\n    Ab:{\r\n        id:\"Ab\",\r\n        intervalFromC:intervals.MinorSixth,\r\n        standardColor:\"#008080\",\r\n    },\r\n    A:{\r\n        id:\"A\",\r\n        intervalFromC:intervals.MajorSixth,\r\n        standardColor:\"#0000FF\",\r\n    },\r\n    Bb:{\r\n        id:\"Bb\",\r\n        intervalFromC:intervals.MinorSeventh,\r\n        standardColor:\"#000080\",\r\n    },\r\n    B:{\r\n        id:\"B\",\r\n        intervalFromC:intervals.MajorSeventh,\r\n        standardColor:\"#FF00FF\",\r\n    },\r\n}\r\n\r\nexport const notesArray : Note[] = Object.values(notes)","import { Interval, intervals } from \"./intervals\"\r\nimport { Note, notesArray } from \"./notes\"\r\nimport { Scale, SpecificScale } from \"./scales\"\r\n\r\nexport const chords: RawChords = {\r\n/*     Minor: {\r\n        id: \"minor\",\r\n        intervals: [intervals.PerfectUnison, intervals.MinorThird, intervals.PerfectFifth],\r\n        symbol: \"_\",\r\n    }, */\r\n    Major: {\r\n        id: \"major\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MajorThird,\r\n            intervals.PerfectFifth],\r\n        symbol: \"\",\r\n    },\r\n    Major7: {\r\n        id: \"major7\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MajorThird,\r\n            intervals.PerfectFifth,\r\n            intervals.MajorSeventh,\r\n        ],\r\n        symbol: \"\",\r\n    },\r\n    Minor7b5: {\r\n        id: \"minor7b5\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MinorThird,\r\n            intervals.MinorSeventh,\r\n            intervals.Tritone],\r\n        symbol: \"m7b5\",\r\n    },\r\n    Chord7b9: {\r\n        id: \"7b9\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MajorThird,\r\n            intervals.PerfectFifth,\r\n            intervals.MinorSeventh,\r\n            intervals.MinorSecond\r\n        ],\r\n        symbol: \"7b9\",\r\n    },\r\n    Chord7Sharp5: {\r\n        id: \"7#5\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MajorThird,\r\n            intervals.MinorSixth,\r\n            intervals.MinorSeventh,\r\n        ],\r\n        symbol: \"7#5\",\r\n    },\r\n    PowerChord: {\r\n        id: \"5\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.PerfectFifth],\r\n        symbol: \"5\",\r\n    },\r\n}\r\n\r\nexport interface RawChords {\r\n    // Minor: RawChord,\r\n    Major: RawChord,\r\n    Minor7b5: RawChord,\r\n    Chord7b9: RawChord,\r\n    PowerChord: RawChord,\r\n    Major7: RawChord,\r\n    Chord7Sharp5: RawChord,\r\n}\r\n\r\nexport interface RawChord {\r\n    id: string,\r\n    intervals: Interval[],\r\n    symbol: string,\r\n    triad?:boolean,\r\n    tetrad?:boolean,\r\n}\r\n\r\nexport interface SpecificChord {\r\n    readonly rootNote: Note,\r\n    readonly id: string, // note name plus \r\n\r\n   readonly notes: Note[],\r\n    readonly intervals: Interval[],\r\n\r\n    readonly symbol: string,\r\n    presentInScales: SpecificScale[],\r\n}\r\n\r\n\r\nexport const specificChords: SpecificChord[] = generateSpecificChords()\r\n\r\nfunction generateSpecificChords(): SpecificChord[] {\r\n\r\n    const specificChords: SpecificChord[] = []\r\n\r\n    for (const rootNote of notesArray) {\r\n\r\n        for (const rawChord of Object.values(chords)) {\r\n\r\n\r\n            const notes: Note[] = []\r\n\r\n            for (const interval of rawChord.intervals) {\r\n\r\n                notes.push(notesArray[(interval.step + rootNote.intervalFromC.step) % 12])\r\n\r\n            }\r\n\r\n            specificChords.push({\r\n                rootNote,\r\n                id: rootNote.id + \" \" + rawChord.id,\r\n                notes,\r\n                intervals: rawChord.intervals,\r\n                symbol: rootNote.id + rawChord.symbol,\r\n                presentInScales: [],\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    return specificChords\r\n\r\n}","import { SpecificChord, specificChords } from \"./chords\"\r\nimport { Interval, intervals, intervalsArray } from \"./intervals\"\r\nimport { Note, notes, notesArray } from \"./notes\"\r\n\r\nexport const RawScales: RawScalesInterface = {\r\n    Major: {\r\n        id: \"major\",\r\n        steps: [2, 2, 1, 2, 2, 2, 1],\r\n        modes: [\r\n            \"ionisch (dur)\",\r\n            \"dorisch\",\r\n            \"phrygisch\",\r\n            \"lydisch\",\r\n            \"mixolydisch\",\r\n            \"aeolisch (moll)\",\r\n            \"lokrisch\",\r\n        ]\r\n    },\r\n    HarmonicMinor: {\r\n        id: \"harmonic minor\",\r\n        steps: [2, 1, 2, 2, 1, 3, 1],\r\n        modes: [\r\n            \"harmonic minor mode\",\r\n            \"Locrian 13 or Locrian 6 (half-diminished)\",\r\n            \"Ionian #5 (augmented)\",\r\n            \"Dorian #11 (or dorian #4) (minor)\",\r\n            \"Phrygian dominant (dominant)\",\r\n            \"Lydian #2 (major)\",\r\n            \"Super locrian bb7 (diminished)\",\r\n        ]\r\n    },\r\n    MelodicMinor: {\r\n        id: \"melodic minor\",\r\n        steps: [2, 1, 2, 2, 2, 2, 1],\r\n        modes: [\r\n            \"melodic minor mode\",\r\n            \"dorisch b9\",\r\n            \"lydisch augmented\",\r\n            \"lydisch dominant\",\r\n            \"mixolydisch b13\",\r\n            \"aeolisch b5 (lokrisch #2)\",\r\n            \"alterierte skala (super lokrisch)\",\r\n        ]\r\n    },\r\n}\r\n\r\nexport interface RawScalesInterface {\r\n    Major: RawScale,\r\n    HarmonicMinor: RawScale,\r\n    MelodicMinor: RawScale,\r\n}\r\n\r\n\r\n\r\n\r\nexport interface RawScale {\r\n    id: string,\r\n    steps: number[],\r\n    modes: string[]\r\n}\r\n\r\n\r\n\r\nexport interface Scale {\r\n\r\n    readonly id: string,\r\n    readonly steps: number[],\r\n    readonly intervals: Interval[],\r\n\r\n    readonly isMode: boolean,\r\n    readonly rawScale: RawScale,\r\n\r\n    readonly step: number,\r\n}\r\n\r\nexport interface SpecificScale {\r\n    readonly isScale: boolean,\r\n    readonly id: string,\r\n    readonly scale: Scale,\r\n\r\n    readonly notes: Note[],\r\n    readonly intervals: Interval[],\r\n\r\n\r\n    readonly rootNote: Note,\r\n    chords: SpecificChord[][],\r\n\r\n    \r\n    readonly triads: SpecificChord[],\r\n    readonly tetrads: SpecificChord[],\r\n\r\n    baseSpecificScale?:SpecificScale\r\n}\r\n\r\nexport const scales: Scale[] = generateScales()\r\n\r\nfunction generateScales(): Scale[] {\r\n\r\n    const scales: Scale[] = []\r\n\r\n    for (const [scaleKey, scaleValue] of Object.entries(RawScales)) {\r\n\r\n        const rawScale: RawScale = scaleValue\r\n\r\n        if (!rawScale.modes) {\r\n            scales.push(scaleValue)\r\n            continue;\r\n        }\r\n\r\n        for (let i = 0; i < rawScale.modes.length; i++) {\r\n            const modeString = rawScale.modes[i];\r\n            const steps = [\r\n                ...rawScale.steps.slice(i, rawScale.modes.length),\r\n                ...rawScale.steps.slice(0, i)\r\n            ]\r\n            const newScale = {\r\n                id: modeString,\r\n                steps,\r\n                isMode: i !== 0 ? true : false,\r\n                intervals: generateIntervals(steps),\r\n                rawScale: scaleValue,\r\n                step: i,\r\n            }\r\n\r\n            scales.push(newScale)\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    return scales\r\n}\r\n\r\nfunction generateIntervals(steps: number[]): Interval[] {\r\n\r\n    const result: number[] = []\r\n    let last = 0;\r\n    for (let i = 0; i < steps.length - 1; i++) {\r\n        const element = steps[i];\r\n        last += element;\r\n        result.push(last)\r\n    }\r\n\r\n    return [intervals.PerfectUnison, ...result.map(n => intervalsArray[n])]\r\n\r\n}\r\n\r\nexport const specificScales: SpecificScale[] = generateSpecificScales()\r\n\r\n\r\nfunction generateSpecificScales(): SpecificScale[] {\r\n\r\n    const specificScales: SpecificScale[] = []\r\n\r\n    for (const rootNote of notesArray) {\r\n\r\n        for (const scale of scales) {\r\n\r\n            const notes: Note[] = []\r\n\r\n\r\n            for (const interval of scale.intervals) {\r\n\r\n                notes.push(notesArray[(interval.step + rootNote.intervalFromC.step) % 12])\r\n\r\n            }\r\n\r\n\r\n            const specificScale: SpecificScale = {\r\n                isScale: true,\r\n                id: rootNote.id + \" \" + scale.id,\r\n                scale,\r\n                notes,\r\n                rootNote,\r\n                intervals: scale.intervals,\r\n\r\n                chords: [],\r\n                triads: [],\r\n                tetrads: [],\r\n            }\r\n\r\n            const chords = generateSpecificChords(specificScale)\r\n            specificScale.chords = chords.chords\r\n\r\n            specificScales.push(specificScale)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    for (const specificScale of specificScales) {\r\n\r\n        const stepOfMode = specificScale.scale.step\r\n        const intervalToRoot = specificScale.scale.intervals[stepOfMode]\r\n        const nameOfBaseScale = specificScale.scale.rawScale.modes[0]\r\n        const rootNoteOfBaseScaleStepsFromC = (specificScale.rootNote.intervalFromC.step + 12 - intervalToRoot.step) % 12\r\n         const rootNoteOfBaseScale = notesArray.find(note => note.intervalFromC.step === rootNoteOfBaseScaleStepsFromC)\r\n         \r\n         specificScale.baseSpecificScale = specificScales.find(spscale => spscale.id === rootNoteOfBaseScale?.id+\" \"+nameOfBaseScale)\r\n        //   console.log(rootNoteOfBaseScale+\" \"+nameOfBaseScale)\r\n        //  console.log(specificScale.id, { specificScale,  rootNoteOfBaseScale,  rootNoteOfBaseScaleStepsFromC,stepOfMode, intervalToRoot, nameOfBaseScale })\r\n    }\r\n\r\n\r\n    return specificScales\r\n}\r\n\r\nfunction generateSpecificChords(specificScale: SpecificScale): { chords: SpecificChord[][], tetrads: SpecificChord[], triads: SpecificChord[] } {\r\n\r\n    const notes = specificScale.notes\r\n\r\n    const specificChordsArray: SpecificChord[][] = []\r\n    const tetrads: SpecificChord[] = []\r\n    const triads: SpecificChord[] = []\r\n\r\n    for (let i = 0; i < notes.length; i++) {\r\n        const note = notes[i];\r\n        const specificChordsResult: SpecificChord[] = []\r\n        for (const specificChord of specificChords) {\r\n\r\n            if (specificChord.notes[0] !== note) continue;\r\n\r\n            const hasChord = specificChord.notes\r\n                .filter(note => !notes.includes(note)).length === 0\r\n\r\n\r\n\r\n            if (hasChord) {\r\n                specificChordsResult.push(specificChord)\r\n                specificChord.presentInScales.push(specificScale)\r\n            }\r\n\r\n        }\r\n        specificChordsArray.push(specificChordsResult)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return { chords: specificChordsArray, triads, tetrads }\r\n\r\n}","import { Note, notes, notesArray } from \"./notes\";\r\n\r\n\r\nexport const RawStringInstruments: RawStringInstrumentsInterface = {\r\n    standardGuitar:{\r\n        id: \"guitar\",\r\n        fretsCount: 25,\r\n        tuning: [notes.E, notes.A, notes.D, notes.G, notes.B, notes.E],\r\n    },\r\n    dropDGuitar:{\r\n        id: \"guitar\",\r\n        fretsCount: 25,\r\n        tuning: [notes.D, notes.A, notes.D, notes.G, notes.B, notes.E],\r\n    }\r\n}\r\n\r\nexport interface RawStringInstrumentsInterface {\r\n    standardGuitar: RawStringInstrument,\r\n    dropDGuitar: RawStringInstrument,\r\n}\r\n\r\n// A guitar, violin or ukulele tuning\r\nexport interface RawStringInstrument {\r\n    readonly id: string,\r\n    readonly fretsCount: number,\r\n    readonly tuning: Note[],\r\n}\r\n\r\nexport interface StringInstrument {\r\n    readonly fretsCount: number,\r\n    readonly tuning: Note[],\r\n    strings: Note[][]\r\n}\r\n\r\nexport function getStringInstrument(rawStringInstrument : RawStringInstrument) : StringInstrument {\r\n\r\n    const strings : Note[][] = []\r\n\r\n    for (const note of rawStringInstrument.tuning) {\r\n\r\n        const string: Note[] = []\r\n\r\n        const indexInNotes: number = notesArray.indexOf(note)\r\n        for (let index = 0; index < rawStringInstrument.fretsCount; index++) {\r\n            const grabbedNote: Note = notesArray[(index + indexInNotes) % 12]\r\n    \r\n\r\n            string.push(grabbedNote)\r\n\r\n        }\r\n\r\n        strings.push(string)\r\n\r\n    }\r\n\r\n    return {\r\n        strings,\r\n        tuning:rawStringInstrument.tuning,\r\n        fretsCount:rawStringInstrument.fretsCount\r\n    }\r\n}\r\n\r\n\r\n","import { SpecificChord, specificChords } from \"./chords\"\r\nimport { SpecificScale, specificScales } from \"./scales\"\r\nimport { getStringInstrument, RawStringInstruments, StringInstrument } from \"./instruments\"\r\nimport { Interval, intervals } from \"./intervals\"\r\nimport { Note, notes } from \"./notes\"\r\nimport { getInterval } from \".\"\r\n\r\n\r\nexport interface Dictionary<Item> {\r\n    [index: string]: Item\r\n}\r\n\r\n\r\n\r\nexport interface RenderableNote {\r\n    readonly interval: Interval,\r\n    readonly note: Note,\r\n    readonly hidden: boolean,\r\n}\r\n\r\ntype nullOrNumber = null | number\r\n\r\nexport interface RenderablePattern {\r\n\r\n    readonly id: string,\r\n\r\n    readonly strings: RenderableNote[][],\r\n\r\n    readonly fretsArray: nullOrNumber[]\r\n\r\n    readonly source: SpecificChord | SpecificScale,\r\n\r\n    readonly intervals: Interval[],\r\n\r\n    readonly notes: Note[],\r\n\r\n    readonly stringInstrument: StringInstrument,\r\n\r\n}\r\n\r\nexport type Renderable = SpecificChord | SpecificScale\r\n\r\nexport function createRenderablePattern(stringInstrument: StringInstrument, renderable: Renderable): RenderablePattern {\r\n\r\n    const strings = stringInstrument.strings.map(string => {\r\n\r\n        return string.map(note => {\r\n\r\n            const interval = getInterval(renderable.rootNote, note)\r\n\r\n\r\n            return {\r\n                interval, note,\r\n                hidden: !renderable.notes.includes(note),\r\n            }\r\n\r\n        })\r\n\r\n    })\r\n\r\n\r\n    return {\r\n        id: renderable.id,\r\n        intervals: renderable.intervals,\r\n        notes: renderable.notes,\r\n        source: renderable,\r\n        strings: strings as RenderableNote[][],\r\n        stringInstrument,\r\n        fretsArray:makeFretsArray(stringInstrument.fretsCount)\r\n    }\r\n\r\n}\r\n\r\nfunction makeFretsArray(fretscount : number) : nullOrNumber[] {\r\n\r\n    const array : nullOrNumber[] = []\r\n    const show = [3,5,7,9,12,15,17,19,21,24]\r\n    for (let i = 0; i < fretscount; i++) {\r\n        \r\n        if (show.includes(i)) array.push(i)\r\n        else array.push(null)\r\n        \r\n    }\r\n\r\n    return array\r\n\r\n}\r\n\r\nexport const renderables: RenderablePattern[] = generateAllRenderables()\r\n\r\nfunction generateAllRenderables() {\r\n\r\n    const guitar = getStringInstrument(RawStringInstruments.standardGuitar)\r\n    const renderables: RenderablePattern[] = []\r\n\r\n    for (const renderable of [...specificScales, ...specificChords]) {\r\n        const renderablePattern = createRenderablePattern(guitar, renderable)\r\n        renderables.push(renderablePattern)\r\n    }\r\n\r\n    return renderables\r\n\r\n}\r\n\r\n/* export type RenderableState = {\r\n\r\n    renderableArrays: RenderableArray[] | undefined,\r\n\r\n    add(\r\n        stringInstrument: StringInstrument,\r\n        config: \"notes\" | \"intervals\",\r\n        // renderable: Renderable,\r\n        // renderableSecondLayer?: Renderable,\r\n        index?: number,\r\n    ): void, // returns id\r\n\r\n    // removes renderableArray from array.\r\n    remove(id: string): void,\r\n\r\n}\r\n\r\n\r\n\r\n */","\r\nimport { specificScales, scales } from \"./scales\"\r\nimport { getStringInstrument, RawStringInstruments } from './instruments';\r\nimport { specificChords } from \"./chords\";\r\nimport { Note, notes } from \"../definitions/notes\";\r\nimport { createRenderablePattern } from \"./renderables\";\r\nimport { intervals, Interval, intervalsArray } from \"../definitions/intervals\";\r\nimport \"./renderables\"\r\n\r\nexport function getInterval(from: Note, to: Note): Interval {\r\n\r\n    const n = ((to.intervalFromC.step - from.intervalFromC.step) + 12) % 12\r\n\r\n    return intervalsArray[n]\r\n\r\n}","import create from \"zustand\"\r\nimport { Note, notesArray } from \"../definitions/notes\"\r\nimport { StringInstrument } from \"../definitions/instruments\"\r\nimport { RenderablePattern, renderables } from \"../definitions/renderables\"\r\n\r\n\r\n\r\ntype State = {\r\n    renderables: RenderablePattern[],\r\n\r\n    index1: number,\r\n    index2: number,\r\n\r\n    firstIntervals:boolean,\r\n    secondIntervals:boolean,\r\n\r\n    toggleFirstIntervals:() => void,\r\n    toggleSecondIntervals:() => void,\r\n\r\n    setIndex1: (index: number) => void\r\n    setIndex2: (index: number) => void\r\n    secondHidden:boolean,\r\n    toggleSecondHidden:() => void\r\n}\r\n\r\nexport const useSimpleStore = create<State>(set => ({\r\n    renderables,\r\n\r\n    index1:0,\r\n    index2:0,\r\n\r\n    firstIntervals:false,\r\n    secondIntervals:false,\r\n\r\n    secondHidden:true,\r\n    \r\n    setIndex1: (index1) => set(state => ({ index1 })),\r\n    setIndex2: (index2) => set(state => ({ index2 })),\r\n    toggleSecondHidden: () => set(state => ({ secondHidden:!state.secondHidden })),\r\n    toggleFirstIntervals: () => set(state => ({ firstIntervals:!state.firstIntervals })),\r\n    toggleSecondIntervals: () => set(state => ({ secondIntervals:!state.secondIntervals })),\r\n}))","import React from 'react';\r\nimport { Interval, intervals } from '../definitions/intervals';\r\nimport { Note } from '../definitions/notes';\r\nimport { RenderableNote, RenderablePattern } from '../definitions/renderables';\r\n// import { RenderableArray, RenderableState } from '../definitions/renderables';\r\nimport { hexToRgb } from '../utils/utils';\r\nimport classes from \"./Pattern.module.css\"\r\n\r\nexport interface RenderableCell {\r\n    renderableNote: RenderableNote,\r\n    colors: DisplayType,\r\n    symbols: DisplayType,\r\n}\r\nexport interface CellProps {\r\n    first: RenderableCell,\r\n    second: RenderableCell,\r\n    secondHidden:boolean\r\n}\r\n\r\nexport enum DisplayType {\r\n    Intervals = \"Intervals\",\r\n    Notes = \"Notes\",\r\n}\r\n\r\n\r\n\r\nfunction StringTemplate(props: any) {\r\n\r\n    return <div style={{ display: \"flex\", width: \"100%\", height: \"100%\", alignItems: \"center\", position: \"relative\" }}>\r\n        <div style={{\r\n            display: \"flex\",\r\n            width: \"100%\",\r\n            background: \"black\",\r\n            height: \"1px\"\r\n            /*             display: \"absolute\",\r\n                        top: 1,\r\n                        left: 10,\r\n                        right: 10,\r\n                        bottom:5,\r\n                        backgroundColor: \"black\", */\r\n\r\n        }}></div>\r\n        <div style={{\r\n            position: \"absolute\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n        }}>\r\n\r\n            {props.children}\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\nexport default function Pattern(props: CellProps) {\r\n\r\n    // console.log(props)\r\n\r\n    const { first, second } = props;\r\n     const colorFirst = hexToRgb(first.renderableNote.interval.standardColor)\r\n     const colorSecond = hexToRgb(second.renderableNote.interval.standardColor)\r\n\r\n    if (first.renderableNote.hidden && second.renderableNote.hidden) return <StringTemplate />\r\n\r\n    return <div style={{ height: 60 }}>\r\n\r\n        <StringTemplate>\r\n            <div style={{\r\n                position: \"relative\",\r\n                height: \"100%\",\r\n                width: \"100%\",\r\n                display: \"flex\",\r\n            }}>\r\n\r\n                <div className=\"first\" style={{\r\n                    position: \"absolute\",\r\n                    display: first.renderableNote.hidden ? \"none\" : \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    right: 0,\r\n                    bottom: 0,\r\n                    color: \"black\",\r\n                    backgroundColor: first.renderableNote.interval === intervals.PerfectUnison? \"grey\" : colorFirst,\r\n                    borderRadius:10,\r\n                }}>\r\n\r\n                    {props.first.renderableNote.note.id}\r\n                </div>\r\n\r\n                <div className=\"second\" style={{\r\n                    position: \"absolute\",\r\n                    display: second.renderableNote.hidden || props.secondHidden ? \"none\" : \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    top: 0,\r\n                    left: \"80%\",\r\n                    bottom: \"80%\",\r\n                    right: 0,\r\n                    color:\"blue\",\r\n                    fontSize:25,\r\n                    // background:colorSecond,\r\n                    background:second.renderableNote.interval === intervals.PerfectUnison ? \"red\" : \"black\",\r\n                    // background:\"black\",\r\n                    borderRadius:20,\r\n                }}>\r\n\r\n                    {/* {props.second.renderableNote.interval.standardSymbol} */}\r\n                    {/* {props.second.renderableNote.note.id} */}\r\n                </div>\r\n\r\n            </div>\r\n        </StringTemplate>\r\n    </div>\r\n\r\n}\r\n\r\n","\r\ninterface RGB {\r\n    r: number,\r\n    g: number,\r\n    b: number,\r\n}\r\n\r\nexport function hexToRgb(hex: string): string {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    if (!result) return \"black\"\r\n    const rgb = {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    }\r\n    return \"rgb(\" + rgb.r + \",\" + rgb.g + \",\" + rgb.b + \",0.2)\"\r\n}","import React from 'react';\r\nimport { RenderablePattern } from '../definitions/renderables';\r\n// import { RenderableArray, RenderableState } from '../definitions/renderables';\r\nimport { hexToRgb } from '../utils/utils';\r\n// import classes from \"./Pattern.module.css\"\r\nimport Cell, { DisplayType } from \"./Cell\"\r\n\r\ntype PatternProps = {\r\n  first: RenderablePattern,\r\n  second: RenderablePattern,\r\n  secondHidden: boolean,\r\n  firstIntervals: boolean,\r\n  secondIntervals: boolean,\r\n}\r\n\r\nexport default function Pattern(props: PatternProps) {\r\n\r\n  console.log(props)\r\n\r\n  const reversedSecondStrings = props.second.strings\r\n\r\n  const mappedNotes = props.first.strings.map((string, stringIndex) => {\r\n\r\n    const mappedString = string.map((renderableNote, fretIndex) => {\r\n      // const color = hexToRgb(renderableNote.interval.standardColor)\r\n\r\n      let borderRight = \"2px solid lightgrey\";\r\n      let borderLeft = \"2px solid lightgrey\";\r\n      if (fretIndex === 0) borderRight = \"5px solid black\"\r\n      if (fretIndex === 11) borderRight = \"5px solid black\"\r\n      if (fretIndex === 12) borderRight = \"5px solid black\"\r\n      if (fretIndex === 1) borderLeft = \"5px solid black\"\r\n      if (fretIndex === 13) borderLeft = \"5px solid black\"\r\n      if (fretIndex === 12) borderLeft = \"5px solid black\"\r\n\r\n      return <div  key={fretIndex}  style={{\r\n        gridColumnStart: fretIndex + 1,\r\n        gridColumnEnd: fretIndex + 2,\r\n        gridRowStart: props.first.strings.length - stringIndex,\r\n        gridRowEnd: props.first.strings.length - stringIndex,\r\n        // backgroundColor: color,\r\n        borderRight,\r\n        borderLeft,\r\n        // minWidth:40,\r\n        // }}>{note.hidden ? \"\" : props.firstIntervals ? note.interval.standardSymbol : note.note.id}</div>\r\n      }}><Cell\r\n        secondHidden={props.secondHidden}\r\n        first={{ renderableNote, colors: DisplayType.Intervals, symbols: DisplayType.Notes }}\r\n        second={{ renderableNote: reversedSecondStrings[stringIndex][fretIndex], colors: DisplayType.Intervals, symbols: DisplayType.Notes }}\r\n      ></Cell></div>\r\n      // if (note.hidden) return <div className={classes.note + \" \" + classes.hidden}></div>\r\n\r\n      // else return <div style={{ backgroundColor: color }} className={classes.text + \" \" + classes.note}>{props.firstIntervals ? note.interval.standardSymbol : note.note.id}</div>\r\n    })\r\n\r\n    return mappedString\r\n  })\r\n\r\n  const mappedFretNumbers = props.first.fretsArray.map((n, i) => {\r\n    return <div key={i} style={{\r\n      gridColumnStart: i + 1,\r\n      gridColumnEnd: i + 2,\r\n      gridRowStart: props.first.strings.length + 1,\r\n      gridRowEnd: props.first.strings.length + 2,\r\n      textAlign:\"center\",\r\n      // minWidth:40,\r\n    }}>{n ? n : \"\"}</div>\r\n  })\r\n\r\n  return (\r\n    <div >\r\n      <div  style={{\r\n        margin: 10,\r\n        fontSize: 40,\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"repeat(\" + props.first.fretsArray.length + \", 1fr)\",\r\n        gridTemplateRows: \"repeat(\" + props.first.strings.length + \", 1fr)\",\r\n      }}>\r\n        {mappedNotes}\r\n        {mappedFretNumbers}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport { useSimpleStore } from '../utils/store';\r\n// import { RenderableArray, RenderableState } from '../definitions/renderables';\r\nimport classes from \"./Pattern.module.css\"\r\nimport Pattern from \"./Pattern\"\r\nimport { SpecificChord } from '../definitions/chords';\r\nimport { renderables } from '../definitions/renderables';\r\n\r\nexport default function SimpleState() {\r\n\r\n    const state = useSimpleStore()\r\n    console.log(state)\r\n\r\n    const options = state.renderables.map((renderable, i) => {\r\n        return <option key={i} value={i}>{renderable.id}</option>\r\n    })\r\n\r\n    let presentInScales;\r\n    if (state.renderables[state.index1].source.hasOwnProperty(\"presentInScales\")) {\r\n\r\n        const renderablePattern = state.renderables[state.index1].source as SpecificChord\r\n\r\n        presentInScales = renderablePattern.presentInScales\r\n            // filter to only show scales with specific root note\r\n            .filter(pattern => pattern.id.split(\" \")[0] === state.renderables[state.index1].id.split(\" \")[0])\r\n            .map((specificScale, i) => {\r\n                return <div key={i} >\r\n                    <button\r\n                        style={{ padding: 10, paddingLeft: 40, margin: 10, fontSize: 20, width: 500, textAlign: \"left\" }}\r\n                        onClick={e => {\r\n\r\n                            const abc = renderables.map(renderable => renderable.id).indexOf(specificScale.id)\r\n                            state.setIndex2(abc)\r\n\r\n                        }}>{specificScale.id}</button>\r\n                    {\"  -- base scale:  \" + (specificScale.scale.step + 1) + \" of  \" + specificScale.baseSpecificScale?.id}\r\n                </div>\r\n            })\r\n\r\n    }\r\n\r\n    return <div  style={{ fontSize: 20, display:\"flex\", flexDirection:\"column\" , height:\"100%\"}}>\r\n\r\n        <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\" ,fontWeight:'bolder',  fontSize:25, padding:10, borderBottom:\"2px solid black\", backgroundColor:\"#ff8282\"}}>\r\n            simple two layer guitar scale/chord visualizer\r\n            <div style={{fontSize:17, paddingLeft:20, display:\"flex\",fontWeight:'bolder', alignItems:\"center\", justifyContent:\"center\"}}>\r\n\r\n            <a href=\"https://github.com/vincentwue/guitar-trainer\" target=\"_blank\">more info on github</a>\r\n            </div>\r\n</div>\r\n            <div >\r\n\r\n            </div>\r\n\r\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\" }}>\r\n\r\n\r\n            {/*         <label>\r\n            <input type=\"checkbox\" checked={state.firstIntervals} onChange={e => state.toggleFirstIntervals()}></input>\r\n            first intervals\r\n            </label>\r\n            <label>\r\n            <input type=\"checkbox\" checked={state.secondIntervals} onChange={e => state.toggleSecondIntervals()}></input>\r\n            second intervals\r\n        </label> */}\r\n\r\n            <div style={{ width: \"100%\", display: \"flex\", padding: 10 }}>\r\n                <div style={{ width: 500 }}>first layer (choose chord to see its modes):</div>\r\n\r\n                <select onChange={e => state.setIndex1(parseFloat(e.target.value))} style={{ fontSize: 20 }} value={state.index1}>\r\n\r\n                    {options}\r\n                </select>\r\n            </div>\r\n            <div style={{ width: \"100%\", display: \"flex\", padding: 10 }}>\r\n\r\n                <div style={{ width: 500 }}>second layer (just small black dots currently):</div>\r\n\r\n                <select onChange={e => state.setIndex2(parseFloat(e.target.value))} style={{ fontSize: 20 }} value={state.index2}>\r\n                    {options}\r\n\r\n\r\n                </select>\r\n            </div>\r\n            <div style={{ width: \"100%\", display: \"flex\", margin: 10, marginLeft:200 }}>\r\n\r\n                <label>\r\n                    <input type=\"checkbox\" checked={state.secondHidden} onChange={e => state.toggleSecondHidden()}></input>\r\n            hide second layer\r\n        </label>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n        <Pattern\r\n            secondHidden={state.secondHidden}\r\n            first={state.renderables[state.index1]}\r\n            second={state.renderables[state.index2]}\r\n            firstIntervals={state.firstIntervals}\r\n            secondIntervals={state.secondIntervals}\r\n        />\r\n\r\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\", height: 1, flexGrow:1, overflow: \"auto\" }}>\r\n            {presentInScales}\r\n\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\n","import React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport SimpleState from \"./components/SimpleState\"\n\nfunction App() {\n  \n\n\n  return (\n    <div className=\"App\">\n     <SimpleState/>\n   </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// import \"./definitions0/index.ts\"\n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport \"./definitions/index\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}