{"version":3,"sources":["components/Cell.module.css","components/SimpleState.module.css","components/Pattern.piano.module.css","components/MasterState.module.css","components/Patterns.module.css","definitions/Intervals.ts","definitions/Notes.ts","definitions/Chords.ts","definitions/Scales.ts","definitions/instruments.ts","definitions/renderables.ts","definitions/index.ts","utils/store.ts","utils/utils.ts","components/useLocalStorage.tsx","components/Cell.tsx","components/Pattern.tsx","components/PianoPattern.tsx","components/SimpleState.tsx","components/MasterState.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","intervals","PerfectUnison","id","step","standardSymbol","standardColor","MinorSecond","MajorSecond","MinorThird","MajorThird","PerfectForth","Tritone","PerfectFifth","MinorSixth","MajorSixth","MinorSeventh","MajorSeventh","solmisationColors","intervalsArray","Object","values","map","interval","i","doReMiColor","notes","C","intervalFromC","Db","D","Eb","E","F","Gb","G","Ab","A","Bb","B","notesArray","chords","symbol","Minor","Major","Major7","Chord7","Minor7","Minor7b5","Chord7b9","Chord7Sharp5","Chord7Sharp11","PowerChord","MajorB13","Dim7","b9b13","MinorMajor7","Minor6","Major6","Minorb6","Majorb6","Minor9","Major9","Minorb9","Majorb9","Sus4","NineSus4","Major7b6","specificChords","_step","_iterator","_createForOfIteratorHelper","s","n","done","rootNote","value","_i","_Object$values","length","_step2","rawChord","_iterator2","push","err","e","f","presentInScales","generateSpecificChords","RawScales","steps","modes","HarmonicMinor","MelodicMinor","Chromatic","MinorPentatonic","MajorPentatonic","MinorPentatonicBlues","MajorPentatonicBlues","BluesRocknRoll","BBKingBlues","scales","_Object$entries","entries","_Object$entries$_i","_slicedToArray","scaleValue","rawScale","modeString","concat","_toConsumableArray","slice","newScale","isMode","generateIntervals","generateScales","result","last","specificScales","_step3","scale","_iterator3","specificScale","isScale","triads","tetrads","autoChords","generateSpecificAutoChords","_loop","_specificScales","_i2","stepOfMode","nameOfBaseScale","helperScale","find","spscale","intervalToRoot","rootNoteOfBaseScaleStepsFromC","rootNoteOfBaseScale","note","baseSpecificScale","generateSpecificScales","_step4","longNotes","tetradsNotes","_iterator4","index","indexOf","tetrad","_step5","_iterator5","_loop2","specificChord","every","v","includes","specificChordsArray","_step6","specificChordsResult","_iterator6","hasChord","filter","RawStringInstruments","standardGuitar","fretsCount","tuning","dropDGuitar","createRenderablePattern","stringInstrument","renderable","strings","string","from","to","getInterval","hidden","source","fretsArray","makeFretsArray","fretscount","array","show","renderables","guitar","rawStringInstrument","indexInNotes","grabbedNote","getStringInstrument","_arr","renderablePattern","generateAllRenderables","createUseSimpleStore","a","arguments","undefined","b","create","set","get","index1","index2","secondHidden","setIndex1","state","useMasterStore","getState","saveStates","setIndex2","toggleSecondHidden","toggleDoReMi","doReMi","serialize","deserialize","serializedState","states","hideLegends","toggleHideLegends","showPiano","toggleShowPiano","loadStates","console","error","localStorage","getItem","simpleStore","log","parsed","JSON","parse","item","store","serialized","setItem","stringify","paramState","oldIndex","left","right","newStates","window","location","reload","delete","hexToRgb","hex","doremi","exec","rgb","parseInt","useLocalStorage","key","defaultValue","_useState","useState","currentValue","String","_useState2","setValue","useEffect","DisplayType","StringTemplate","props","_jsxs","className","classes","stringTemplate","children","_jsx","stringTemplate1","stringTemplate2","solmisation","getDoReMi","first","renderableNote","Pattern","_useLocalStorage","_useLocalStorage2","second","colorFirst","colorDoReMi","cell","wrapper","style","backgroundColor","classNames","React","Fragment","classnames","isUnison","reversedSecondStrings","masterState","mappedNotes","stringIndex","fretIndex","fret","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","Cell","colors","Intervals","symbols","Notes","mappedFretNumbers","preFretNumbers","mappedFretNumbers2","postFretNumbers","heading","grid","display","gridTemplateColumns","gridTemplateRows","PianoPattern","blackCount","noBlack","stepsFromC","inScale","isRoot","stepsFromCBlack","isBlackinScale","isBlackRoot","whiteKey","blackKey","width","border","whiteKeyNoteName","SimpleState","containingChords","allContainingChords","setDoReMi","options","hasOwnProperty","pattern","split","_specificScale$baseSp","presentInScalesRow","presentInScalesButton","onClick","abc","chord","specificChordButton","r","padEnd","padStart","flat","simpleState","settings","onChange","parseFloat","target","type","checked","legend","presentInChords","bottomBorder","MasterState","masterStore","forceUpdate","useForceUpdate","master","headText","headingLink","href","checkboxes","hideLegendLabel","readOnly","white","App","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.196c957b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"Cell_cell__34751\",\"doremi\":\"Cell_doremi__3s4LV\",\"stringTemplate\":\"Cell_stringTemplate__12snc\",\"stringTemplate1\":\"Cell_stringTemplate1__1-7P_\",\"stringTemplate2\":\"Cell_stringTemplate2__3-1Yd\",\"wrapper\":\"Cell_wrapper__3qkBy\",\"first\":\"Cell_first__2uZ5_\",\"second\":\"Cell_second__1K-9u\",\"hidden\":\"Cell_hidden__3rkMn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"SimpleState_settings__1eA0y\",\"legend\":\"SimpleState_legend__1BJdq\",\"allContainingChords\":\"SimpleState_allContainingChords__3xrK0\",\"presentInScales\":\"SimpleState_presentInScales__1qiDT\",\"presentInScalesRow\":\"SimpleState_presentInScalesRow__gPuFC\",\"presentInScalesButton\":\"SimpleState_presentInScalesButton__3aOI9\",\"presentInChords\":\"SimpleState_presentInChords__RplBN\",\"bottomBorder\":\"SimpleState_bottomBorder__2CjxS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Pattern_piano_wrapper__ETNA6\",\"heading\":\"Pattern_piano_heading__3T9Bv\",\"whiteKey\":\"Pattern_piano_whiteKey__1CfhF\",\"whiteKeyNoteName\":\"Pattern_piano_whiteKeyNoteName__1tAhc\",\"blackKey\":\"Pattern_piano_blackKey__1Mq0Y\",\"inScale\":\"Pattern_piano_inScale__2bqLF\",\"isRoot\":\"Pattern_piano_isRoot__1lzWE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"master\":\"MasterState_master__3keYv\",\"heading\":\"MasterState_heading__1hxhL\",\"headText\":\"MasterState_headText__2KtlM\",\"headingLink\":\"MasterState_headingLink__37Jpm\",\"checkboxes\":\"MasterState_checkboxes__1HIOP\",\"hideLegendLabel\":\"MasterState_hideLegendLabel__2Lbp_\",\"white\":\"MasterState_white__2Os99\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fret\":\"Patterns_fret__1asTL\",\"fret0\":\"Patterns_fret0__yTkkI\",\"fret11\":\"Patterns_fret11__YCm1u\",\"fret12\":\"Patterns_fret12__1ffY9\",\"fret23\":\"Patterns_fret23__1ILJe\",\"fret1\":\"Patterns_fret1__2wsaB\",\"fret13\":\"Patterns_fret13__fymmL\",\"fret24\":\"Patterns_fret24__3mHq-\",\"heading\":\"Patterns_heading__BzNb-\",\"hidden\":\"Patterns_hidden__1aajF\"};","\r\n\r\n\r\nexport interface Intervals {\r\n    PerfectUnison: Interval,\r\n    MinorSecond: Interval,\r\n    MajorSecond: Interval,\r\n    MinorThird: Interval,\r\n    MajorThird: Interval,\r\n    PerfectForth: Interval,\r\n    Tritone: Interval,\r\n    PerfectFifth: Interval,\r\n    MinorSixth: Interval,\r\n    MajorSixth: Interval,\r\n    MinorSeventh: Interval,\r\n    MajorSeventh: Interval,\r\n}\r\n\r\nexport interface Interval {\r\n    readonly id: string,\r\n    // readonly octaveName:string,\r\n    readonly step: number,\r\n    readonly standardSymbol: string,\r\n    // readonly octaveSymbol: string,\r\n    readonly standardColor: string,\r\n    doReMiColor?:string\r\n}\r\n\r\n// https://en.wikipedia.org/wiki/Interval_(music)#cite_ref-TritoneA4_6-0:~:text=below.-,Number%20of,Interval\r\n\r\nexport const intervals: Intervals = {\r\n\r\n    PerfectUnison: {\r\n        id: \"unison\",\r\n        step: 0,\r\n        standardSymbol: \"root\",\r\n        standardColor: \"#000000\"\r\n    },\r\n\r\n    MinorSecond: {\r\n        id: \"minorSecond\",\r\n        step: 1,\r\n        standardSymbol: \"b9\",\r\n        standardColor: \"#9e006f\"\r\n    },\r\n\r\n    MajorSecond: {\r\n        id: \"majorSecond\",\r\n        step: 2,\r\n        standardSymbol: \"9\",\r\n        standardColor: \"#ff00b3\"\r\n    },\r\n\r\n    MinorThird: {\r\n        id: \"minorThird\",\r\n        step: 3,\r\n        standardSymbol: \"b3\",\r\n        standardColor: \"#b7ff42\"\r\n    },\r\n\r\n    MajorThird: {\r\n        id: \"majorThird\",\r\n        step: 4,\r\n        standardSymbol: \"3\",\r\n        standardColor: \"#7dc900\"\r\n    },\r\n    PerfectForth: {\r\n        id: \"perfectForth\",\r\n        step: 5,\r\n        standardSymbol: \"11\",\r\n        standardColor: \"#f7e886\"\r\n    },\r\n    Tritone: {\r\n        id: \"tritone\",\r\n        step: 6,\r\n        standardSymbol: \"b5\",\r\n        standardColor: \"#ad6500\"\r\n    },\r\n\r\n\r\n    PerfectFifth: {\r\n        id: \"perfectFifth\",\r\n        step: 7,\r\n        standardSymbol: \"5\",\r\n        standardColor: \"#ffdd00\"\r\n    },\r\n\r\n\r\n    MinorSixth: {\r\n        id: \"minorSixth\",\r\n        step: 8,\r\n        standardSymbol: \"b13\",\r\n        standardColor: \"#ff0019\"\r\n    },\r\n    MajorSixth: {\r\n        id: \"majorSixth\",\r\n        step: 9,\r\n        standardSymbol: \"13\",\r\n        standardColor: \"#d42c3d\"\r\n    },\r\n    MinorSeventh: {\r\n        id: \"minorSeventh\",\r\n        step: 10,\r\n        standardSymbol: \"7\",\r\n        standardColor: \"#0073ff\"\r\n    },\r\n    MajorSeventh: {\r\n        id: \"majorSeventh\",\r\n        step: 11,\r\n        standardSymbol: \"Δ\",\r\n        standardColor: \"#00eaff\"\r\n    },\r\n\r\n}\r\n\r\nexport const solmisationColors = [\r\n    \"#138708\",//\"Do\", grün ionisch\r\n    \"\",//\"Ra\",\r\n    \"#3cd6d4\",//\"Re\", türkis\r\n    \"\",//\"Me\",\r\n    \"#b31212\",//\"Mi\", phrygisch\r\n    \"#ed7505\",//\"Fa\", orange lydisch\r\n    \"\",//\"Se\",\r\n    \"#ac1bfa\",//\"So\", purple mixo\r\n    \"\",//\"Le\",\r\n    \"#ffdb38\",//\"La\", gelb moll\r\n    \"\",//\"Li\",\r\n    \"#996100\",//\"Ti\", braun lokrisch\r\n]\r\n\r\nexport const intervalsArray: Interval[] = Object.values(intervals).map((interval, i) =>  {\r\n    interval.doReMiColor = solmisationColors[i]\r\n    return interval\r\n})\r\n\r\n","\r\nimport { Interval, intervals } from \"./Intervals\"\r\n\r\n\r\nexport interface Notes {\r\n    C:Note,\r\n    Db:Note,\r\n    D:Note,\r\n    Eb:Note,\r\n    E:Note,\r\n    F:Note,\r\n    Gb:Note,\r\n    G:Note,\r\n    Ab:Note,\r\n    A:Note,\r\n    Bb:Note,\r\n    B:Note,\r\n}\r\n\r\nexport interface Note {\r\n    readonly id: string,\r\n    readonly intervalFromC: Interval,\r\n    readonly standardColor: string,\r\n}\r\n\r\nexport const notes : Notes = {\r\n    C:{\r\n        id:\"C\",\r\n        intervalFromC:intervals.PerfectUnison,\r\n        standardColor:\"#ffffff\",\r\n    },\r\n    Db:{\r\n        id:\"Db\",\r\n        intervalFromC:intervals.MinorSecond,\r\n        standardColor:\"#FF0000\",\r\n    },\r\n    D:{\r\n        id:\"D\",\r\n        intervalFromC:intervals.MajorSecond,\r\n        standardColor:\"#800000\",\r\n    },\r\n    Eb:{\r\n        id:\"Eb\",\r\n        intervalFromC:intervals.MinorThird,\r\n        standardColor:\"#FFFF00\",\r\n    },\r\n    E:{\r\n        id:\"E\",\r\n        intervalFromC:intervals.MajorThird,\r\n        standardColor:\"#808000\",\r\n    },\r\n    F:{\r\n        id:\"F\",\r\n        intervalFromC:intervals.PerfectForth,\r\n        standardColor:\"#00FF00\",\r\n    },\r\n    Gb:{\r\n        id:\"Gb\",\r\n        intervalFromC:intervals.Tritone,\r\n        standardColor:\"#008000\",\r\n    },\r\n    G:{\r\n        id:\"G\",\r\n        intervalFromC:intervals.PerfectFifth,\r\n        standardColor:\"#00FFFF\",\r\n    },\r\n    Ab:{\r\n        id:\"Ab\",\r\n        intervalFromC:intervals.MinorSixth,\r\n        standardColor:\"#008080\",\r\n    },\r\n    A:{\r\n        id:\"A\",\r\n        intervalFromC:intervals.MajorSixth,\r\n        standardColor:\"#0000FF\",\r\n    },\r\n    Bb:{\r\n        id:\"Bb\",\r\n        intervalFromC:intervals.MinorSeventh,\r\n        standardColor:\"#000080\",\r\n    },\r\n    B:{\r\n        id:\"B\",\r\n        intervalFromC:intervals.MajorSeventh,\r\n        standardColor:\"#FF00FF\",\r\n    },\r\n}\r\n\r\nexport const notesArray : Note[] = Object.values(notes)","import { Interval, intervals } from \"./Intervals\"\r\nimport { Note, notesArray } from \"./Notes\"\r\nimport { Scale, SpecificScale } from \"./Scales\"\r\n\r\nexport const chords: RawChords = {\r\n    PerfectUnison: {\r\n        id: \"unison\",\r\n        intervals: [intervals.PerfectUnison],\r\n        symbol: \"unison\",\r\n    },\r\n    Minor: {\r\n        id: \"minor\",\r\n        intervals: [intervals.PerfectUnison, intervals.MinorThird, intervals.PerfectFifth],\r\n        symbol: \"_\",\r\n    },\r\n    Major: {\r\n        id: \"major\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MajorThird,\r\n            intervals.PerfectFifth],\r\n        symbol: \"\",\r\n    },\r\n    Major7: {\r\n        id: \"Δ7\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MajorThird,\r\n            intervals.PerfectFifth,\r\n            intervals.MajorSeventh,\r\n        ],\r\n        symbol: \"Δ7\",\r\n    },\r\n    Chord7: {\r\n        id: \"7\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MajorThird,\r\n            intervals.PerfectFifth,\r\n            intervals.MinorSeventh,\r\n        ],\r\n        symbol: \"7\",\r\n    },\r\n    Minor7: {\r\n        id: \"_7\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MinorThird,\r\n            intervals.PerfectFifth,\r\n            intervals.MinorSeventh,\r\n        ],\r\n        symbol: \"_7\",\r\n    },\r\n    Minor7b5: {\r\n        id: \"_7b5\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MinorThird,\r\n            intervals.MinorSeventh,\r\n            intervals.Tritone],\r\n        symbol: \"_7b5\",\r\n    },\r\n    Chord7b9: {\r\n        id: \"7b9\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MajorThird,\r\n            intervals.PerfectFifth,\r\n            intervals.MinorSeventh,\r\n            intervals.MinorSecond\r\n        ],\r\n        symbol: \"7b9\",\r\n    },\r\n    Chord7Sharp5: {\r\n        id: \"7#5\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MajorThird,\r\n            intervals.MinorSixth,\r\n            intervals.MinorSeventh,\r\n        ],\r\n        symbol: \"7#5\",\r\n    },\r\n    Chord7Sharp11: {\r\n        id: \"7#11\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MajorThird,\r\n            intervals.Tritone,\r\n            intervals.PerfectFifth,\r\n            intervals.MinorSeventh,\r\n        ],\r\n        symbol: \"7#11\",\r\n    },\r\n    PowerChord: {\r\n        id: \"5\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.PerfectFifth],\r\n        symbol: \"5\",\r\n    },\r\n    MajorB13: {\r\n        id: \"Δ#5\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MajorThird,\r\n            intervals.MinorSixth,\r\n            intervals.MajorSeventh],\r\n        symbol: \"Δ#5\",\r\n    },\r\n    Dim7: {\r\n        id: \"°7\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MinorThird,\r\n            intervals.Tritone,\r\n            intervals.MajorSixth],\r\n        symbol: \"°7\",\r\n    },\r\n    b9b13: {\r\n        id: \"#5b9\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MinorSecond,\r\n            intervals.MajorThird,\r\n            intervals.MinorSixth],\r\n        symbol: \"#5b9\",\r\n    },\r\n    MinorMajor7: {\r\n        id: \"_Δ\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MinorThird,\r\n            intervals.PerfectFifth,\r\n            intervals.MajorSeventh],\r\n        symbol: \"_Δ\",\r\n    },\r\n    Minor6: {\r\n        id: \"_6\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MinorThird,\r\n            intervals.PerfectFifth,\r\n            intervals.MajorSixth],\r\n        symbol: \"_6\",\r\n    },\r\n    Major6: {\r\n        id: \"6\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MajorThird,\r\n            intervals.PerfectFifth,\r\n            intervals.MajorSixth],\r\n        symbol: \"6\",\r\n    },\r\n    Minorb6: {\r\n        id: \"_b6\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MinorThird,\r\n            intervals.PerfectFifth,\r\n            intervals.MinorSixth],\r\n        symbol: \"_b6\",\r\n    },\r\n    Majorb6: {\r\n        id: \"b6\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MajorThird,\r\n            intervals.PerfectFifth,\r\n            intervals.MinorSixth],\r\n        symbol: \"b6\",\r\n    },\r\n    Minor9: {\r\n        id: \"_9\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MinorThird,\r\n            intervals.PerfectFifth,\r\n            intervals.MajorSecond],\r\n        symbol: \"_9\",\r\n    },\r\n    Major9: {\r\n        id: \"9\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MajorThird,\r\n            intervals.PerfectFifth,\r\n            intervals.MajorSecond],\r\n        symbol: \"9\",\r\n    },\r\n    Minorb9: {\r\n        id: \"_b9\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MinorThird,\r\n            intervals.PerfectFifth,\r\n            intervals.MinorSecond],\r\n        symbol: \"_b9\",\r\n    },\r\n    Majorb9: {\r\n        id: \"b9\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MajorThird,\r\n            intervals.PerfectFifth,\r\n            intervals.MinorSecond],\r\n        symbol: \"b9\",\r\n    },\r\n    Sus4: {\r\n        id: \"7sus4\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.PerfectForth,\r\n            intervals.PerfectFifth,\r\n            intervals.MinorSeventh],\r\n        symbol: \"sus4\",\r\n    },\r\n    NineSus4: {\r\n        id: \"79sus4\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.PerfectForth,\r\n            intervals.PerfectFifth,\r\n            intervals.MinorSeventh,\r\n            intervals.MajorSecond],\r\n        symbol: \"79sus4\",\r\n    },\r\n    Major7b6: {\r\n        id: \"7b13\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.PerfectForth,\r\n            intervals.PerfectFifth,\r\n            intervals.MinorSeventh,\r\n            intervals.MinorSixth],\r\n        symbol: \"7b13\",\r\n    }\r\n}\r\n\r\nexport interface RawChords {\r\n    Minor: RawChord,\r\n    Major: RawChord,\r\n    Minor7b5: RawChord,\r\n    Chord7b9: RawChord,\r\n    PowerChord: RawChord,\r\n    Major7: RawChord,\r\n    Chord7Sharp5: RawChord,\r\n    Chord7Sharp11: RawChord,\r\n    Minor7: RawChord,\r\n    Chord7: RawChord,\r\n    PerfectUnison: RawChord,\r\n\r\n\r\n    MajorB13: RawChord,\r\n    Dim7: RawChord,\r\n    b9b13: RawChord,\r\n    MinorMajor7: RawChord,\r\n\r\n    Minor6: RawChord,\r\n    Minorb6: RawChord,\r\n    Major6: RawChord,\r\n    Majorb6: RawChord,\r\n\r\n    Minor9: RawChord,\r\n    Major9: RawChord,\r\n\r\n    Majorb9: RawChord,\r\n    Minorb9: RawChord,\r\n\r\n\r\n\r\n    Sus4: RawChord,\r\n    NineSus4: RawChord,\r\n    \r\n    \r\n    Major7b6: RawChord,\r\n}\r\n\r\nexport interface RawChord {\r\n    id: string,\r\n    intervals: Interval[],\r\n    symbol: string,\r\n    triad?: boolean,\r\n    tetrad?: boolean,\r\n}\r\n\r\nexport interface SpecificChord {\r\n    readonly rootNote: Note,\r\n    readonly id: string, // note name plus \r\n\r\n    readonly notes: Note[],\r\n    readonly intervals: Interval[],\r\n\r\n    readonly symbol: string,\r\n    presentInScales: SpecificScale[],\r\n}\r\n\r\nexport interface SpecificAutoChord {\r\n    readonly id: string, // note name plus \r\n    specificChord: SpecificChord | null,\r\n    intervals: Interval[],\r\n    notes: Note[],\r\n    rootNoe: Note,\r\n    readonly symbol: string, // \r\n    presentInScales: SpecificScale[],\r\n\r\n}\r\n\r\n\r\nexport const specificChords: SpecificChord[] = generateSpecificChords()\r\n\r\nfunction generateSpecificChords(): SpecificChord[] {\r\n\r\n    const specificChords: SpecificChord[] = []\r\n\r\n    for (const rootNote of notesArray) {\r\n\r\n        for (const rawChord of Object.values(chords)) {\r\n\r\n\r\n            const notes: Note[] = []\r\n\r\n            for (const interval of rawChord.intervals) {\r\n\r\n                notes.push(notesArray[(interval.step + rootNote.intervalFromC.step) % 12])\r\n\r\n            }\r\n\r\n            specificChords.push({\r\n                rootNote,\r\n                id: rootNote.id + \" \" + rawChord.id,\r\n                notes,\r\n                intervals: rawChord.intervals,\r\n                symbol: rootNote.id + rawChord.symbol,\r\n                presentInScales: [],\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    return specificChords\r\n\r\n}","\r\nimport { Interval, intervals, intervalsArray } from \"./Intervals\"\r\nimport { Note, notes, notesArray } from \"./Notes\"\r\nimport { SpecificAutoChord, SpecificChord, specificChords } from \"./Chords\"\r\n\r\nexport const RawScales: RawScalesInterface = {\r\n    Major: {\r\n        id: \"major\",\r\n        steps: [2, 2, 1, 2, 2, 2, 1],\r\n        modes: [\r\n            \"ionisch (dur)\",\r\n            \"dorisch\",\r\n            \"phrygisch\",\r\n            \"lydisch\",\r\n            \"mixolydisch\",\r\n            \"aeolisch (moll)\",\r\n            \"lokrisch\",\r\n        ]\r\n    },\r\n    HarmonicMinor: {\r\n        id: \"harmonic minor\",\r\n        steps: [2, 1, 2, 2, 1, 3, 1],\r\n        modes: [\r\n            \"harmonic minor mode\",\r\n            \"Locrian 13 or Locrian 6 (half-diminished)\",\r\n            \"Ionian #5 (augmented)\",\r\n            \"Dorian #11 (or dorian #4) (minor)\",\r\n            \"Phrygian dominant (dominant)\",\r\n            \"Lydian #2 (major)\",\r\n            \"Super locrian bb7 (diminished)\",\r\n        ]\r\n    },\r\n    MelodicMinor: {\r\n        id: \"melodic minor\",\r\n        steps: [2, 1, 2, 2, 2, 2, 1],\r\n        modes: [\r\n            \"melodic minor mode\",\r\n            \"dorisch b9\",\r\n            \"lydisch augmented\",\r\n            \"lydisch dominant\",\r\n            \"mixolydisch b13\",\r\n            \"aeolisch b5 (lokrisch #2)\",\r\n            \"alterierte skala (super lokrisch)\",\r\n        ]\r\n    },\r\n    Chromatic: {\r\n        id: \"chromatic\",\r\n        steps: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,],\r\n        modes: [\r\n            \"chromatic\",\r\n            \"chromatic-del\",\r\n            \"chromatic-del\",\r\n            \"chromatic-del\",\r\n            \"chromatic-del\",\r\n            \"chromatic-del\",\r\n            \"chromatic-del\",\r\n            \"chromatic-del\",\r\n            \"chromatic-del\",\r\n            \"chromatic-del\",\r\n            \"chromatic-del\",\r\n            \"chromatic-del\",\r\n        ]\r\n    },\r\n    MinorPentatonic: {\r\n        id: \"minor pentatonic\",\r\n        steps: [3, 2, 2, 3, 2],\r\n        modes: [\r\n            \"minor pentatonic\",\r\n            \"pentatonic-del\",\r\n            \"pentatonic-del\",\r\n            \"pentatonic-del\",\r\n            \"pentatonic-del\",\r\n        ]\r\n    },\r\n    MajorPentatonic: {\r\n        id: \"major pentatonic\",\r\n        steps: [2, 2, 3, 2, 3],\r\n        modes: [\r\n            \"major pentatonic\",\r\n            \"pentatonic-del\",\r\n            \"pentatonic-del\",\r\n            \"pentatonic-del\",\r\n            \"pentatonic-del\",\r\n        ]\r\n    },\r\n    MinorPentatonicBlues: {\r\n        id: \"minor blues pentatonic\",\r\n        steps: [3, 2, 1, 1, 3, 2],\r\n        modes: [\r\n            \"minor blues pentatonic\",\r\n            \"pentatonic-del\",\r\n            \"pentatonic-del\",\r\n            \"pentatonic-del\",\r\n            \"pentatonic-del\",\r\n            \"pentatonic-del\",\r\n        ]\r\n    },\r\n    MajorPentatonicBlues: {\r\n        id: \"major blues pentatonic\",\r\n        steps: [2, 1, 1, 3, 2, 3],\r\n        modes: [\r\n            \"major blues pentatonic\",\r\n            \"pentatonic-del\",\r\n            \"pentatonic-del\",\r\n            \"pentatonic-del\",\r\n            \"pentatonic-del\",\r\n            \"pentatonic-del\",\r\n        ]\r\n    },\r\n    BluesRocknRoll: {\r\n        id: \"blues rock n roll\",\r\n        steps: [2, 1, 1, 1, 1, 1, 2, 1, 2],\r\n        modes: [\r\n            \"blues rock n roll\",\r\n            \"pentatonic-del\",\r\n            \"pentatonic-del\",\r\n            \"pentatonic-del\",\r\n            \"pentatonic-del\",\r\n            \"pentatonic-del\",\r\n            \"pentatonic-del\",\r\n            \"pentatonic-del\",\r\n            \"pentatonic-del\",\r\n        ]\r\n    },\r\n    BBKingBlues: {\r\n        id: \"B.B. King blues\",\r\n        steps: [3,3,1,1,2],\r\n        modes: [\r\n            \"B.B. King blues\",\r\n            \"pentatonic-del\",\r\n            \"pentatonic-del\",\r\n            \"pentatonic-del\",\r\n            \"pentatonic-del\",\r\n        ]\r\n    },\r\n}\r\n\r\nexport interface RawScalesInterface {\r\n    Major: RawScale,\r\n    HarmonicMinor: RawScale,\r\n    MelodicMinor: RawScale,\r\n    Chromatic: RawScale,\r\n    MajorPentatonic: RawScale,\r\n    MinorPentatonic: RawScale,\r\n    MajorPentatonicBlues: RawScale,\r\n    MinorPentatonicBlues: RawScale,\r\n    BluesRocknRoll: RawScale,\r\n    BBKingBlues: RawScale,\r\n}\r\n\r\n\r\n\r\n\r\nexport interface RawScale {\r\n    id: string,\r\n    steps: number[],\r\n    modes: string[]\r\n}\r\n\r\n\r\n\r\nexport interface Scale {\r\n\r\n    readonly id: string,\r\n    readonly steps: number[],\r\n    readonly intervals: Interval[],\r\n\r\n    readonly isMode: boolean,\r\n    readonly rawScale: RawScale,\r\n\r\n    readonly step: number,\r\n}\r\n\r\nexport interface SpecificScale {\r\n    readonly isScale: boolean,\r\n    readonly id: string,\r\n    readonly scale: Scale,\r\n\r\n    readonly notes: Note[],\r\n    readonly intervals: Interval[],\r\n\r\n\r\n    readonly rootNote: Note,\r\n    chords: SpecificChord[][],\r\n    autoChords?: SpecificChord[],\r\n\r\n\r\n    readonly triads: SpecificChord[],\r\n    readonly tetrads: SpecificChord[],\r\n\r\n    baseSpecificScale?: SpecificScale\r\n}\r\n\r\nexport const scales: Scale[] = generateScales()\r\n\r\nfunction generateScales(): Scale[] {\r\n\r\n    const scales: Scale[] = []\r\n\r\n    for (const [scaleKey, scaleValue] of Object.entries(RawScales)) {\r\n\r\n        const rawScale: RawScale = scaleValue\r\n\r\n        if (!rawScale.modes) {\r\n            scales.push(scaleValue)\r\n            continue;\r\n        }\r\n\r\n        for (let i = 0; i < rawScale.modes.length; i++) {\r\n            const modeString = rawScale.modes[i];\r\n            const steps = [\r\n                ...rawScale.steps.slice(i, rawScale.modes.length),\r\n                ...rawScale.steps.slice(0, i)\r\n            ]\r\n            const newScale = {\r\n                id: modeString,\r\n                steps,\r\n                isMode: i !== 0 ? true : false,\r\n                intervals: generateIntervals(steps),\r\n                rawScale: scaleValue,\r\n                step: i,\r\n            }\r\n\r\n            scales.push(newScale)\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    return scales\r\n}\r\n\r\nfunction generateIntervals(steps: number[]): Interval[] {\r\n\r\n    const result: number[] = []\r\n    let last = 0;\r\n    for (let i = 0; i < steps.length - 1; i++) {\r\n        const element = steps[i];\r\n        last += element;\r\n        result.push(last)\r\n    }\r\n\r\n    return [intervals.PerfectUnison, ...result.map(n => intervalsArray[n])]\r\n\r\n}\r\n\r\nexport const specificScales: SpecificScale[] = generateSpecificScales()\r\n\r\n\r\nfunction generateSpecificScales(): SpecificScale[] {\r\n\r\n    const specificScales: SpecificScale[] = []\r\n\r\n    for (const rootNote of notesArray) {\r\n\r\n        for (const scale of scales) {\r\n\r\n            const notes: Note[] = []\r\n\r\n\r\n            for (const interval of scale.intervals) {\r\n\r\n                notes.push(notesArray[(interval.step + rootNote.intervalFromC.step) % 12])\r\n\r\n            }\r\n\r\n\r\n            const specificScale: SpecificScale = {\r\n                isScale: true,\r\n                id: rootNote.id + \" \" + scale.id,\r\n                scale,\r\n                notes,\r\n                rootNote,\r\n                intervals: scale.intervals,\r\n\r\n\r\n\r\n                chords: [],\r\n                triads: [],\r\n                tetrads: [],\r\n            }\r\n\r\n            const chords = generateSpecificChords(specificScale)\r\n            specificScale.chords = chords.chords\r\n\r\n            specificScale.autoChords = generateSpecificAutoChords(specificScale)\r\n\r\n            specificScales.push(specificScale)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // This part is solved with a ugly hack.\r\n    // Consider restructuring whole datastructure.\r\n    // Design ONE interface that represents all wanted information and build small steps towards this goal.\r\n    for (const specificScale of specificScales) {\r\n\r\n        const stepOfMode = specificScale.scale.step\r\n\r\n\r\n        const nameOfBaseScale = specificScale.scale.rawScale.modes[0]\r\n        const helperScale = specificScales.find(spscale => spscale.id === specificScale.rootNote.id + \" \" + nameOfBaseScale)\r\n        if (helperScale) {\r\n\r\n            const intervalToRoot = helperScale.scale.intervals[stepOfMode]\r\n\r\n            // hacky exception\r\n            // if (specificScale.rootNote.intervalFromC) continue;\r\n\r\n            const rootNoteOfBaseScaleStepsFromC = (specificScale.rootNote.intervalFromC.step + 12 - intervalToRoot.step) % 12\r\n            const rootNoteOfBaseScale = notesArray.find(note => note.intervalFromC.step === rootNoteOfBaseScaleStepsFromC)\r\n\r\n\r\n\r\n            specificScale.baseSpecificScale = specificScales.find(spscale => spscale.id === rootNoteOfBaseScale?.id + \" \" + nameOfBaseScale)\r\n            // console.log(specificScale.id, rootNoteOfBaseScale + \" \" + nameOfBaseScale)\r\n            // console.log(specificScale.id, { specificScale, rootNoteOfBaseScale, rootNoteOfBaseScaleStepsFromC, stepOfMode, intervalToRoot, nameOfBaseScale })\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    return specificScales\r\n}\r\n\r\nfunction generateSpecificAutoChords(specificScale: SpecificScale): SpecificChord[] {\r\n\r\n\r\n    //TODO implement\r\n    const longNotes = [...specificScale.notes, ...specificScale.notes, ...specificScale.notes]\r\n\r\n    const tetradsNotes = []\r\n\r\n    for (const note of specificScale.notes) {\r\n        const index = longNotes.indexOf(note)\r\n        const tetrad = []\r\n        for (let i = index; i < index + 8; i += 2) {\r\n            tetrad.push(longNotes[i])\r\n        }\r\n        tetradsNotes.push(tetrad)\r\n    }\r\n\r\n    const autoChords: any = tetradsNotes\r\n\r\n    for (const specificChord of specificChords) {\r\n        for (let i = 0; i < tetradsNotes.length; i++) {\r\n            const tetrad = tetradsNotes[i];\r\n\r\n            if (tetrad.length === specificChord.notes.length && specificChord.notes[0] === tetrad[0]) {\r\n                if (tetrad.every(v => specificChord.notes.includes(v))) {\r\n                    autoChords[i] = specificChord\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // console.log(\"chord\", specificScale.id, \"found\", { autoChords })\r\n\r\n    // console.log(specificScale.id, { specificScale, longNotes, tetradsNotes })\r\n\r\n\r\n    return autoChords\r\n}\r\n\r\nfunction generateSpecificChords(specificScale: SpecificScale): { chords: SpecificChord[][], tetrads: SpecificChord[], triads: SpecificChord[] } {\r\n\r\n    const notes = specificScale.notes\r\n\r\n    const specificChordsArray: SpecificChord[][] = []\r\n    const tetrads: SpecificChord[] = []\r\n    const triads: SpecificChord[] = []\r\n\r\n    for (let i = 0; i < notes.length; i++) {\r\n        const note = notes[i];\r\n        const specificChordsResult: SpecificChord[] = []\r\n        for (const specificChord of specificChords) {\r\n\r\n            if (specificChord.notes[0] !== note) continue;\r\n\r\n            const hasChord = specificChord.notes\r\n                .filter(note => !notes.includes(note)).length === 0\r\n\r\n\r\n\r\n            if (hasChord) {\r\n                specificChordsResult.push(specificChord)\r\n                specificChord.presentInScales.push(specificScale)\r\n            }\r\n\r\n        }\r\n        specificChordsArray.push(specificChordsResult)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return { chords: specificChordsArray, triads, tetrads }\r\n\r\n}","import { Note, notes, notesArray } from \"./Notes\";\r\n\r\n\r\nexport const RawStringInstruments: RawStringInstrumentsInterface = {\r\n    standardGuitar:{\r\n        id: \"guitar\",\r\n        fretsCount: 25,\r\n        tuning: [notes.E, notes.A, notes.D, notes.G, notes.B, notes.E],\r\n    },\r\n    dropDGuitar:{\r\n        id: \"guitar\",\r\n        fretsCount: 25,\r\n        tuning: [notes.D, notes.A, notes.D, notes.G, notes.B, notes.E],\r\n    }\r\n}\r\n\r\nexport interface RawStringInstrumentsInterface {\r\n    standardGuitar: RawStringInstrument,\r\n    dropDGuitar: RawStringInstrument,\r\n}\r\n\r\n// A guitar, violin or ukulele tuning\r\nexport interface RawStringInstrument {\r\n    readonly id: string,\r\n    readonly fretsCount: number,\r\n    readonly tuning: Note[],\r\n}\r\n\r\nexport interface StringInstrument {\r\n    readonly fretsCount: number,\r\n    readonly tuning: Note[],\r\n    strings: Note[][]\r\n}\r\n\r\nexport function getStringInstrument(rawStringInstrument : RawStringInstrument) : StringInstrument {\r\n\r\n    const strings : Note[][] = []\r\n\r\n    for (const note of rawStringInstrument.tuning) {\r\n\r\n        const string: Note[] = []\r\n\r\n        const indexInNotes: number = notesArray.indexOf(note)\r\n        for (let index = 0; index < rawStringInstrument.fretsCount; index++) {\r\n            const grabbedNote: Note = notesArray[(index + indexInNotes) % 12]\r\n    \r\n\r\n            string.push(grabbedNote)\r\n\r\n        }\r\n\r\n        strings.push(string)\r\n\r\n    }\r\n\r\n    return {\r\n        strings,\r\n        tuning:rawStringInstrument.tuning,\r\n        fretsCount:rawStringInstrument.fretsCount\r\n    }\r\n}\r\n\r\n\r\n","import { SpecificChord, specificChords } from \"./Chords\"\r\nimport { SpecificScale, specificScales } from \"./Scales\"\r\nimport { getStringInstrument, RawStringInstruments, StringInstrument } from \"./instruments\"\r\nimport { Interval, intervals } from \"./Intervals\"\r\nimport { Note, notes } from \"./Notes\"\r\nimport { getInterval } from \".\"\r\n\r\n\r\nexport interface Dictionary<Item> {\r\n    [index: string]: Item\r\n}\r\n\r\n\r\n\r\nexport interface RenderableNote {\r\n    readonly interval: Interval,\r\n    readonly note: Note,\r\n    readonly hidden: boolean,\r\n}\r\n\r\ntype nullOrNumber = null | number\r\n\r\nexport interface RenderablePattern {\r\n\r\n    readonly id: string,\r\n\r\n    readonly strings: RenderableNote[][],\r\n\r\n    readonly fretsArray: nullOrNumber[]\r\n\r\n    readonly source: SpecificChord | SpecificScale,\r\n\r\n    readonly intervals: Interval[],\r\n\r\n    readonly notes: Note[],\r\n\r\n    readonly stringInstrument: StringInstrument,\r\n\r\n}\r\n\r\nexport type Renderable = SpecificChord | SpecificScale\r\n\r\nexport function createRenderablePattern(stringInstrument: StringInstrument, renderable: Renderable): RenderablePattern {\r\n\r\n    const strings = stringInstrument.strings.map(string => {\r\n\r\n        return string.map(note => {\r\n\r\n            const interval = getInterval(renderable.rootNote, note)\r\n\r\n\r\n            return {\r\n                interval, note,\r\n                hidden: !renderable.notes.includes(note),\r\n            }\r\n\r\n        })\r\n\r\n    })\r\n\r\n\r\n    return {\r\n        id: renderable.id,\r\n        intervals: renderable.intervals,\r\n        notes: renderable.notes,\r\n        source: renderable,\r\n        strings: strings as RenderableNote[][],\r\n        stringInstrument,\r\n        fretsArray:makeFretsArray(stringInstrument.fretsCount)\r\n    }\r\n\r\n}\r\n\r\nfunction makeFretsArray(fretscount : number) : nullOrNumber[] {\r\n\r\n    const array : nullOrNumber[] = []\r\n    const show = [3,5,7,9,12,15,17,19,21,24]\r\n    for (let i = 0; i < fretscount; i++) {\r\n        \r\n        if (show.includes(i)) array.push(i)\r\n        else array.push(null)\r\n        \r\n    }\r\n\r\n    return array\r\n\r\n}\r\n\r\nexport const renderables: RenderablePattern[] = generateAllRenderables()\r\n\r\nfunction generateAllRenderables() {\r\n\r\n    const guitar = getStringInstrument(RawStringInstruments.standardGuitar)\r\n    const renderables: RenderablePattern[] = []\r\n\r\n    for (const renderable of [...specificScales, ...specificChords]) {\r\n        const renderablePattern = createRenderablePattern(guitar, renderable)\r\n        renderables.push(renderablePattern)\r\n    }\r\n\r\n    return renderables.filter(e => !e.id.includes(\"-del\"))\r\n\r\n}\r\n\r\n/* export type RenderableState = {\r\n\r\n    renderableArrays: RenderableArray[] | undefined,\r\n\r\n    add(\r\n        stringInstrument: StringInstrument,\r\n        config: \"notes\" | \"intervals\",\r\n        // renderable: Renderable,\r\n        // renderableSecondLayer?: Renderable,\r\n        index?: number,\r\n    ): void, // returns id\r\n\r\n    // removes renderableArray from array.\r\n    remove(id: string): void,\r\n\r\n}\r\n\r\n\r\n\r\n */","\r\nimport { specificScales, scales } from \"./Scales\"\r\nimport { getStringInstrument, RawStringInstruments } from './instruments';\r\nimport { specificChords } from \"./Chords\";\r\nimport { Note, notes } from \"./Notes\";\r\nimport { createRenderablePattern } from \"./renderables\";\r\nimport { intervals, Interval, intervalsArray } from \"./Intervals\";\r\nimport \"./renderables\"\r\n\r\nexport function getInterval(from: Note, to: Note): Interval {\r\n\r\n    const n = ((to.intervalFromC.step - from.intervalFromC.step) + 12) % 12\r\n\r\n    return intervalsArray[n]\r\n\r\n}","import create, { UseStore } from \"zustand\"\r\nimport { Note, notesArray } from \"../definitions/Notes\"\r\nimport { StringInstrument } from \"../definitions/instruments\"\r\nimport { RenderablePattern, renderables } from \"../definitions/renderables\"\r\n\r\n\r\n\r\nexport type State = {\r\n    renderables: RenderablePattern[],\r\n\r\n    index1: number,\r\n    index2: number,\r\n\r\n    /*     firstIntervals:boolean,\r\n        secondIntervals:boolean,\r\n     */\r\n    secondHidden: boolean,\r\n\r\n    /*     toggleFirstIntervals:() => void,\r\n        toggleSecondIntervals:() => void, */\r\n\r\n    setIndex1: (index: number) => void\r\n    setIndex2: (index: number) => void\r\n    toggleSecondHidden: () => void,\r\n\r\n\r\n    serialize: () => SerializedState,\r\n    deserialize: (serializedState: SerializedState) => void,\r\n\r\n    doReMi:boolean,\r\n    toggleDoReMi: () => void,\r\n\r\n\r\n}\r\n\r\nexport interface SerializedState {\r\n    index1: number,\r\n    index2: number,\r\n\r\n    secondHidden: boolean,\r\n}\r\n\r\ndeclare const window: any;\r\n// @ts-ignore\r\nexport const createUseSimpleStore = (a: number = 0, b: number = 0) => create<State>((set, get) => ({\r\n    renderables,\r\n\r\n    index1: a,\r\n    index2: b,\r\n\r\n    /*     firstIntervals:false,\r\n        secondIntervals:false, */\r\n\r\n    secondHidden: false,\r\n\r\n    setIndex1: (index1) => {\r\n        // console.log(index1, get())\r\n        set(state => ({ index1 }))\r\n        useMasterStore.getState().saveStates()\r\n    },\r\n    setIndex2: (index2) => {\r\n        // console.log(index2, get())\r\n        set(state => ({ index2 }))\r\n        useMasterStore.getState().saveStates()\r\n\r\n    },\r\n    toggleSecondHidden: () => {\r\n        set(state => ({ secondHidden: !state.secondHidden }))\r\n        useMasterStore.getState().saveStates()\r\n\r\n    },\r\n    toggleDoReMi: () => {\r\n        set(state => ({ doReMi: !state.doReMi }))\r\n        useMasterStore.getState().saveStates()\r\n\r\n    },\r\n    /* toggleFirstIntervals: () => set(state => ({ firstIntervals:!state.firstIntervals })),\r\n    toggleSecondIntervals: () => set(state => ({ secondIntervals:!state.secondIntervals })),\r\n */\r\n\r\n    serialize: () => {\r\n        const state = get()\r\n\r\n        return {\r\n            index1: state.index1,\r\n            index2: state.index2,\r\n            secondHidden: state.secondHidden,\r\n        }\r\n    },\r\n\r\n    deserialize: (serializedState) => {\r\n\r\n        set(state => {\r\n            return {\r\n                index1: serializedState.index1,\r\n                index2: serializedState.index2,\r\n                secondHidden: serializedState.secondHidden,\r\n            }\r\n        })\r\n\r\n    },\r\n\r\n}))\r\n\r\nexport type MasterStore = {\r\n    states: UseStore<State>[],\r\n\r\n    hideLegends: boolean,\r\n    showPiano:boolean,\r\n    toggleShowPiano(): void,\r\n\r\n    toggleHideLegends(): void,\r\n\r\n    loadStates(): void,\r\n    saveStates(): void,\r\n\r\n    create(paramState: UseStore<State>): void,\r\n    delete(paramState: UseStore<State>): void,\r\n\r\n}\r\n\r\nexport const useMasterStore = create<MasterStore>((set, get) => ({\r\n\r\n    states: [],\r\n\r\n    hideLegends: false,\r\n    toggleHideLegends: () => set({ hideLegends: !get().hideLegends }),\r\n    \r\n    showPiano:false,\r\n    toggleShowPiano: () => set({ showPiano: !get().showPiano }),\r\n\r\n\r\n    loadStates: () => {\r\n\r\n        if (get().states.length > 0) {\r\n            console.error(\"already loaded state from localstorage\")\r\n            return\r\n        }\r\n\r\n        const state = localStorage.getItem(\"state\")\r\n        if (!state) {\r\n\r\n            const simpleStore = createUseSimpleStore()\r\n            simpleStore.getState().setIndex1(0)\r\n            simpleStore.getState().setIndex2(1)\r\n            // simpleStore.getState().toggleSecondHidden()\r\n            set({ states: [simpleStore] })\r\n            get().saveStates()\r\n            return\r\n        };\r\n\r\n        console.log(\"localStorage get\", state)\r\n        const parsed = JSON.parse(state)\r\n        console.log(\"localStorage get parsed\", parsed)\r\n\r\n        const mapped = parsed.map((item: SerializedState) => {\r\n            const store = createUseSimpleStore()\r\n            store.getState().deserialize(item)\r\n            return store\r\n        })\r\n\r\n\r\n        const states = mapped\r\n\r\n\r\n        set(state => ({ states }))\r\n\r\n    },\r\n\r\n    saveStates: () => {\r\n\r\n        const serialized = get().states.map(s => s.getState().serialize())\r\n        console.log(serialized)\r\n        localStorage.setItem(\"state\", JSON.stringify(serialized))\r\n        // window.location.reload()\r\n\r\n    },\r\n\r\n    create: paramState => {\r\n\r\n        const store = createUseSimpleStore()\r\n        // set(() => ({ states: [newStore].concat(get().states) }))\r\n\r\n\r\n        // store.getState().setIndex1(paramState.getState().index1)\r\n        // store.getState().setIndex2(paramState.getState().index2)\r\n\r\n        // return\r\n\r\n        store.getState().deserialize({\r\n            index1: paramState.getState().index1,\r\n            index2: paramState.getState().index2,\r\n            secondHidden: paramState.getState().secondHidden,\r\n        })\r\n\r\n        const oldIndex = get().states.indexOf(paramState)\r\n\r\n        const left = get().states.slice(0, oldIndex)\r\n        const right = get().states.slice(oldIndex)\r\n\r\n        const newStates = [...left, store, ...right]\r\n\r\n        set({ states: newStates })\r\n\r\n        get().saveStates()\r\n        window.location.reload()\r\n        return\r\n\r\n    },\r\n\r\n    delete: paramState => {\r\n        if (get().states.length === 1) return\r\n        set({ states: get().states.filter(s => s !== paramState) })\r\n        get().saveStates()\r\n        window.location.reload()\r\n    }\r\n\r\n\r\n}))\r\n\r\nuseMasterStore.getState().loadStates()","\r\ninterface RGB {\r\n    r: number,\r\n    g: number,\r\n    b: number,\r\n}\r\n\r\nexport function hexToRgb(hex: string, doremi=false): string {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    if (!result) return \"black\"\r\n    const rgb = {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    }\r\n    if (doremi) {\r\n        return \"rgb(\" + rgb.r + \",\" + rgb.g + \",\" + rgb.b + \",0.8)\"\r\n    }\r\n    return \"rgb(\" + rgb.r + \",\" + rgb.g + \",\" + rgb.b + \",0.4)\"\r\n}","\r\nimport { useState, useEffect } from \"react\";\r\n// @ts-ignore\r\nconst useLocalStorage = (key, defaultValue) => {\r\n  const [value, setValue] = useState(() => {\r\n    let currentValue;\r\n\r\n    try {\r\n      currentValue = JSON.parse(\r\n        localStorage.getItem(key) || String(defaultValue)\r\n      );\r\n    } catch (error) {\r\n      currentValue = defaultValue;\r\n    }\r\n\r\n    return currentValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }, [value, key]);\r\n\r\n  return [value, setValue];\r\n};\r\n\r\nexport default useLocalStorage;","import React from 'react';\r\nimport { Interval, intervals } from '../definitions/Intervals';\r\nimport { Note } from '../definitions/Notes';\r\nimport { RenderableNote, RenderablePattern } from '../definitions/renderables';\r\n// import { RenderableArray, RenderableState } from '../definitions/renderables';\r\nimport { hexToRgb } from '../utils/utils';\r\nimport classes from \"./Cell.module.css\"\r\nimport classnames from \"classnames\"\r\nimport classNames from 'classnames';\r\nimport useLocalStorage from './useLocalStorage';\r\n\r\nexport interface RenderableCell {\r\n    renderableNote: RenderableNote,\r\n    colors: DisplayType,\r\n    symbols: DisplayType,\r\n}\r\nexport interface CellProps {\r\n    first: RenderableCell,\r\n    second: RenderableCell,\r\n    secondHidden: boolean\r\n}\r\n\r\nexport enum DisplayType {\r\n    Intervals = \"Intervals\",\r\n    Notes = \"Notes\",\r\n}\r\n\r\nfunction StringTemplate(props: any) {\r\n\r\n    return <div className={classes.stringTemplate}>\r\n        <div className={classes.stringTemplate1}></div>\r\n        <div className={classes.stringTemplate2}>\r\n\r\n            {props.children}\r\n        </div>\r\n    </div>\r\n\r\n}\r\nexport const solmisation = [\r\n    \"Do\",\r\n    \"Ra\",\r\n    \"Re\",\r\n    \"Me\",\r\n    \"Mi\",\r\n    \"Fa\",\r\n    \"Se\",\r\n    \"So\",\r\n    \"Le\",\r\n    \"La\",\r\n    \"Li\",\r\n    \"Ti\",\r\n]\r\n\r\n\r\nfunction getDoReMi(props: CellProps) {\r\n    console.log(props)\r\n    \r\n    return solmisation[props.first.renderableNote.interval.step]\r\n}\r\n\r\nexport default function Pattern(props: CellProps) {\r\n\r\n    const [doReMi, setDoReMi] = useLocalStorage(\"doremi\", true)\r\n\r\n    // console.log(props)\r\n\r\n    const { first, second } = props;\r\n    const colorFirst = hexToRgb(first.renderableNote.interval.standardColor)\r\n    const colorDoReMi = first.renderableNote.interval.doReMiColor ? hexToRgb(first.renderableNote.interval.doReMiColor, true) : \"white\"\r\n    const colorSecond = hexToRgb(second.renderableNote.interval.standardColor)\r\n\r\n    if (first.renderableNote.hidden && second.renderableNote.hidden) return <div className={classes.cell}>\r\n\r\n        <StringTemplate />\r\n\r\n    </div>\r\n\r\n    return <div className={classes.cell}>\r\n\r\n        <StringTemplate>\r\n            <div className={classes.wrapper}>\r\n\r\n                <div\r\n                    style={{ backgroundColor: doReMi ? colorDoReMi : colorFirst }}\r\n                    className={classNames(\r\n                        classes.first,\r\n                        first.renderableNote.hidden && classes.hidden,\r\n                        doReMi ? classes.doremi : \"\"\r\n                    )}>\r\n\r\n                    {doReMi ?\r\n                        <React.Fragment>\r\n                            {getDoReMi(props)}\r\n                        </React.Fragment>\r\n                        :\r\n                        <React.Fragment>\r\n\r\n                            {props.first.renderableNote.note.id}\r\n                        </React.Fragment>\r\n                    }\r\n\r\n\r\n                </div>\r\n\r\n                <div className={classnames(\r\n                    classes.second,\r\n                    (second.renderableNote.hidden || props.secondHidden) && classes.hidden,\r\n                    second.renderableNote.interval === intervals.PerfectUnison && classes.isUnison\r\n                )} ></div>\r\n\r\n            </div>\r\n        </StringTemplate>\r\n    </div>\r\n\r\n}\r\n\r\n","import classes from './Patterns.module.css';\r\nimport React, { useEffect } from 'react';\r\nimport { RenderablePattern } from '../definitions/renderables';\r\n// import { RenderableArray, RenderableState } from '../definitions/renderables';\r\nimport { hexToRgb } from '../utils/utils';\r\n// import classes from \"./Pattern.module.css\"\r\nimport Cell, { DisplayType } from \"./Cell\"\r\nimport classNames from 'classnames';\r\nimport { useMasterStore } from '../utils/store';\r\n\r\ntype PatternProps = {\r\n  first: RenderablePattern,\r\n  second: RenderablePattern,\r\n  secondHidden: boolean,\r\n  n:number,\r\n  /*   firstIntervals: boolean,\r\n    secondIntervals: boolean, */\r\n}\r\n\r\nexport default function Pattern(props: PatternProps) {\r\n\r\n  console.log(props)\r\n\r\n  const reversedSecondStrings = props.second.strings\r\n  const masterState = useMasterStore()\r\n\r\n\r\n\r\n  const mappedNotes = props.first.strings.map((string, stringIndex) => {\r\n\r\n    const mappedString = string.map((renderableNote, fretIndex) => {\r\n      // const color = hexToRgb(renderableNote.interval.standardColor)\r\n\r\n      /*       let borderRight = \"4px solid grey\";\r\n            let borderLeft = \"4px solid grey\";\r\n            if (fretIndex === 0) borderRight = \"5px solid black\"\r\n            if (fretIndex === 11) borderRight = \"5px solid black\"\r\n            if (fretIndex === 12) borderRight = \"5px solid black\"\r\n            if (fretIndex === 23) borderRight = \"5px solid black\"\r\n            if (fretIndex === 1) borderLeft = \"5px solid black\"\r\n            if (fretIndex === 13) borderLeft = \"5px solid black\"\r\n            if (fretIndex === 12) borderLeft = \"5px solid black\"\r\n            if (fretIndex === 24) borderLeft = \"5px solid black\" */\r\n\r\n      return <div key={fretIndex} className={classNames(classes[\"fret\" + fretIndex], classes.fret)} style={{\r\n        gridColumnStart: fretIndex + 1,\r\n        gridColumnEnd: fretIndex + 2,\r\n        gridRowStart: props.first.strings.length - stringIndex,\r\n        gridRowEnd: props.first.strings.length - stringIndex,\r\n        // backgroundColor: color,\r\n        // minWidth:40,\r\n        // }}>{note.hidden ? \"\" : props.firstIntervals ? note.interval.standardSymbol : note.note.id}</div>\r\n      }}><Cell\r\n        secondHidden={props.secondHidden}\r\n        first={{ renderableNote, colors: DisplayType.Intervals, symbols: DisplayType.Notes }}\r\n        second={{ renderableNote: reversedSecondStrings[stringIndex][fretIndex], colors: DisplayType.Intervals, symbols: DisplayType.Notes }}\r\n      ></Cell></div>\r\n      // if (note.hidden) return <div className={classes.note + \" \" + classes.hidden}></div>\r\n\r\n      // else return <div style={{ backgroundColor: color }} className={classes.text + \" \" + classes.note}>{props.firstIntervals ? note.interval.standardSymbol : note.note.id}</div>\r\n    })\r\n\r\n    return mappedString\r\n  })\r\n\r\n  const mappedFretNumbers = props.first.fretsArray.map((n, i) => {\r\n    return <div key={i} className={classes.preFretNumbers} style={{\r\n      gridColumnStart: i + 1,\r\n      gridColumnEnd: i + 2,\r\n      gridRowStart: props.first.strings.length + 2,\r\n      gridRowEnd: props.first.strings.length + 3,\r\n      // textAlign:\"center\",\r\n      // minWidth:40,\r\n    }}>{n ? n : \"\"}</div>\r\n  })\r\n  const mappedFretNumbers2 = props.first.fretsArray.map((n, i) => {\r\n    return <div key={i} className={classes.postFretNumbers} style={{\r\n      gridColumnStart: i + 1,\r\n      gridColumnEnd: i + 2,\r\n      gridRowStart: 0,\r\n      gridRowEnd: 1,\r\n      // textAlign:\"center\",\r\n      // minWidth:40,\r\n    }}>{n ? n : \"\"}</div>\r\n  })\r\n\r\n  return (\r\n    <div >\r\n      <div className={classNames(classes.heading, !masterState.hideLegends ? classes.hidden : \"\")}>\r\n\r\n        {props.n + \" - \" + props.first.id + \" - \" + props.second.id}\r\n\r\n      </div>\r\n      <div className={classes.grid} style={{\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"repeat(\" + props.first.fretsArray.length + \", 1fr)\",\r\n        gridTemplateRows: \"repeat(\" + props.first.strings.length + \", 1fr)\",\r\n      }}>\r\n        {mappedNotes}\r\n        {mappedFretNumbers2}\r\n        {!masterState.hideLegends && mappedFretNumbers}\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n","import classes from './Pattern.piano.module.css';\r\nimport React, { useEffect } from 'react';\r\nimport { RenderablePattern } from '../definitions/renderables';\r\n// import { RenderableArray, RenderableState } from '../definitions/renderables';\r\nimport { hexToRgb } from '../utils/utils';\r\nimport Cell, { DisplayType } from \"./Cell\"\r\nimport classNames from 'classnames';\r\nimport { useMasterStore } from '../utils/store';\r\nimport { notesArray } from '../definitions/Notes';\r\n\r\ntype PatternProps = {\r\n  first: RenderablePattern,\r\n  second: RenderablePattern,\r\n  secondHidden: boolean,\r\n  n: number,\r\n  /*   firstIntervals: boolean,\r\n    secondIntervals: boolean, */\r\n}\r\n\r\nexport default function PianoPattern(props: PatternProps) {\r\n\r\n  console.log(\"pattern\", props)\r\n\r\n  const { second, first } = props\r\n\r\n  const a = []\r\n  const masterState = useMasterStore()\r\n\r\n  let blackCount = 0\r\n  for (let index = 0; index < 50; index++) {\r\n\r\n    const noBlack = index % 7 === 0 || index % 7 === 3\r\n    if (!noBlack) blackCount++\r\n\r\n    const stepsFromC = (blackCount + index) % 12\r\n\r\n    const inScale = first.notes.find(note => note.intervalFromC.step === stepsFromC)\r\n    const isRoot = first.notes[0].intervalFromC.step === stepsFromC\r\n    // const inScale2 = second.notes.find(note => note.intervalFromC.step === stepsFromC)\r\n    // const isRoot2 = second.notes[0].intervalFromC.step === stepsFromC\r\n\r\n    const stepsFromCBlack = (blackCount + index - 1) % 12\r\n\r\n    const isBlackinScale = first.notes.find(note => note.intervalFromC.step === stepsFromCBlack)\r\n    const isBlackRoot = first.notes[0].intervalFromC.step === stepsFromCBlack\r\n    // const isBlackinScale2 = second.notes.find(note => note.intervalFromC.step === stepsFromCBlack)\r\n    // const isBlackRoot2 = second.notes[0].intervalFromC.step === stepsFromCBlack\r\n\r\n    // const rootColor=\"red\"\r\n\r\n    const whiteKey = <div className={classes.whiteKey}\r\n      style={{\r\n        // backgroundColor: isRoot ? rootColor : inScale ? \"green\" : \"white\"\r\n        backgroundColor: \"white\"\r\n      }}\r\n    >\r\n\r\n      {!noBlack &&\r\n        <div className={classes.blackKey}\r\n          style={{\r\n            left: -6,\r\n            width: 6,\r\n            border: \"2px solid black\",\r\n            // backgroundColor:isBlackRoot ? rootColor : isBlackinScale ? \"green\" : \"white\"\r\n            backgroundColor: \"black\"\r\n          }}\r\n        >\r\n          {/* <div className={classNames(isRoot2 && classes.isRoot2, inScale2 && classes.inScale2)}></div> */}\r\n          <div className={classNames(isBlackRoot && classes.isRoot, isBlackinScale && classes.inScale)}></div>\r\n\r\n        </div>\r\n      }\r\n\r\n      <div className={classes.whiteKeyNoteName}>\r\n        {/* {notesArray[stepsFromC].id} */}\r\n\r\n        <div className={classNames(isRoot && classes.isRoot, inScale && classes.inScale)}></div>\r\n        {/* <div className={classNames(isRoot2 && classes.isRoot2, inScale2 && classes.inScale2, classes.white)}></div> */}\r\n\r\n      </div>\r\n\r\n    </div>\r\n    a.push(whiteKey)\r\n\r\n  }\r\n\r\n\r\n  return (<div>\r\n    <div className={classNames(classes.heading, !masterState.hideLegends ? classes.hidden : \"\")}>\r\n\r\n      {props.n + \" - \" + props.first.id + \" - \" + props.second.id}\r\n\r\n    </div>\r\n    <div className={classes.wrapper}>\r\n      {a}\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport { createUseSimpleStore, State, useMasterStore } from '../utils/store';\r\n// import { RenderableArray, RenderableState } from '../definitions/renderables';\r\nimport classes from \"./SimpleState.module.css\"\r\nimport Pattern from \"./Pattern\"\r\nimport PianoPattern from \"./PianoPattern\"\r\nimport { SpecificChord } from '../definitions/Chords';\r\nimport { renderables } from '../definitions/renderables';\r\nimport { SpecificScale, specificScales } from '../definitions/Scales';\r\nimport { UseStore } from 'zustand';\r\nimport useLocalStorage from './useLocalStorage';\r\n\r\n\r\nexport type SimpleStateType = {\r\n    useState: UseStore<State>,\r\n    create(usestore: UseStore<State>): void,\r\n    delete(usestore: UseStore<State>): void,\r\n    n: number,\r\n}\r\n\r\nexport default function SimpleState(props: SimpleStateType) {\r\n\r\n    const state = props.useState()\r\n\r\n    // console.log(\"SimpleState props\", state)\r\n    // console.log(state.serialize())\r\n    const masterState = useMasterStore()\r\n    const [doReMi, setDoReMi] = useLocalStorage(\"doremi\", true)\r\n\r\n    const options = state.renderables.map((renderable, i) => {\r\n        return <option key={i} value={i}>{renderable.id}</option>\r\n    })\r\n\r\n    let presentInScales;\r\n    if (state.renderables[state.index1].source.hasOwnProperty(\"presentInScales\")) {\r\n\r\n        const renderablePattern = state.renderables[state.index1].source as SpecificChord\r\n\r\n        presentInScales = renderablePattern.presentInScales.filter(e => !e.id.includes(\"-del\"))\r\n            // filter to only show scales with specific root note\r\n            .filter(pattern => pattern.id.split(\" \")[0] === state.renderables[state.index1].id.split(\" \")[0])\r\n            .map((specificScale, i) => {\r\n                return <div key={i} className={classes.presentInScalesRow}>\r\n                    <button\r\n                        className={classes.presentInScalesButton}\r\n                        /* style={{ padding: 10, paddingLeft: 40, margin: 10, fontSize: 20, width: 500, textAlign: \"left\" }} */\r\n                        onClick={e => {\r\n\r\n                            const abc = renderables.map(renderable => renderable.id).indexOf(specificScale.id)\r\n                            state.setIndex2(abc)\r\n\r\n                        }}>{specificScale.id}</button>\r\n                    {\"  -- base scale:  \" + (specificScale.scale.step + 1) + \" of  \" + specificScale.baseSpecificScale?.id}\r\n                </div>\r\n            })\r\n\r\n    }\r\n\r\n    let containingChords;\r\n\r\n    if (state.renderables[state.index1].source.hasOwnProperty(\"autoChords\")) {\r\n\r\n        const specificScale = state.renderables[state.index1].source as SpecificScale\r\n\r\n        // console.log(\"hi\", specificScale)\r\n        if (specificScale.autoChords) {\r\n\r\n            containingChords = specificScale.autoChords.map((chord, i) => {\r\n\r\n                // const specificChord  = chord as SpecificChord\r\n                if (chord.id && chord.id.includes(\"-del\")) return null\r\n\r\n                return <button /* style={{ fontSize: 20, padding: 10, margin: 20 }} */ className={classes.specificChordButton} key={i} onClick={e => {\r\n                    const renderable = renderables.find(r => r.id === chord.id)\r\n                    if (renderable) {\r\n\r\n                        const index = renderables.indexOf(renderable)\r\n                        state.setIndex2(index)\r\n                    }\r\n                }}>{(i + 1)}\r\n                    {/* {chord.id} */}\r\n                    {chord.id && chord.id.padEnd(10, \"_\").padStart(15, \"_\")}\r\n                    {specificScale.scale.rawScale.modes[i]}\r\n                </button>\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n    let allContainingChords;\r\n\r\n    if (state.renderables[state.index1].source.hasOwnProperty(\"chords\")) {\r\n\r\n        const specificScale = state.renderables[state.index1].source as SpecificScale\r\n\r\n        // console.log(\"specificScale\", specificScale)\r\n\r\n        if (specificScale.chords) {\r\n\r\n            allContainingChords = specificScale.chords.flat().map((chord, i) => {\r\n\r\n                // const specificChord  = chord as SpecificChord\r\n\r\n                if (chord.id && chord.id.includes(\"-del\")) return null\r\n\r\n\r\n                // console.log(chord)\r\n\r\n                return <button /* style={{ fontSize: 20, padding: 10, margin: 20 }} */ className={classes.specificChordButton} key={i} onClick={e => {\r\n                    const renderable = renderables.find(r => r.id === chord.id)\r\n                    if (renderable) {\r\n\r\n                        const index = renderables.indexOf(renderable)\r\n                        state.setIndex2(index)\r\n                    }\r\n                }}>{(i + 1)}\r\n                    {chord.id && chord.id.padEnd(10, \"_\").padStart(15, \"_\")}\r\n                    {specificScale.scale.rawScale.modes[i]}\r\n                </button>\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    let pattern = <Pattern\r\n        secondHidden={state.secondHidden}\r\n        first={state.renderables[state.index1]}\r\n        second={state.renderables[state.index2]}\r\n        n={props.n}\r\n    /*       firstIntervals={state.firstIntervals}\r\n          secondIntervals={state.secondIntervals} */\r\n    />\r\n\r\n    if (masterState.showPiano) {\r\n        pattern = <PianoPattern\r\n            secondHidden={state.secondHidden}\r\n            first={state.renderables[state.index1]}\r\n            second={state.renderables[state.index2]}\r\n            n={props.n}\r\n        ></PianoPattern>\r\n    }\r\n\r\n    if (masterState.hideLegends) return pattern\r\n\r\n\r\n    return <div /* style={{ fontSize: 20, display: \"flex\", flexDirection: \"column\", height: \"100%\", minHeight: 700 }} */ className={classes.simpleState}>\r\n\r\n        <div /* style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\" }}  */ className={classes.settings}>\r\n\r\n\r\n            {/*         <label>\r\n            <input type=\"checkbox\" checked={state.firstIntervals} onChange={e => state.toggleFirstIntervals()}></input>\r\n            first intervals\r\n            </label>\r\n            <label>\r\n            <input type=\"checkbox\" checked={state.secondIntervals} onChange={e => state.toggleSecondIntervals()}></input>\r\n            second intervals\r\n        </label> */}\r\n\r\n            {/* <div className={classes.label}>first layer:</div> */}\r\n            <div >\r\n\r\n                {props.n}\r\n\r\n            </div>\r\n\r\n            <select onChange={e => state.setIndex1(parseFloat(e.target.value))} value={state.index1}>\r\n\r\n                {options}\r\n            </select>\r\n            <select onChange={e => state.setIndex2(parseFloat(e.target.value))} value={state.index2}>\r\n                {options}\r\n\r\n\r\n            </select>\r\n            <button onClick={e => {\r\n                const index = state.index1\r\n                state.setIndex1(state.index2)\r\n                state.setIndex2(index)\r\n            }}>invert</button>\r\n            <div >\r\n                <label>\r\n                    <input type=\"checkbox\" checked={state.secondHidden} onChange={e => state.toggleSecondHidden()}></input>\r\n                    hide second layer\r\n                </label>\r\n            </div>\r\n            <button onClick={e => props.create(props.useState)}>copy</button>\r\n            <button onClick={e => props.delete(props.useState)}>delete</button>\r\n            <div >\r\n                <label>\r\n                    <input type=\"checkbox\" checked={doReMi} onChange={e => setDoReMi(!doReMi)}></input>\r\n                    DoReMi (refresh req)\r\n                </label>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        {pattern}\r\n\r\n\r\n        <div className={classes.legend}>\r\n\r\n\r\n\r\n\r\n            <div className={classes.presentInScales} /* style={{ display: presentInScales ? \"flex\" : \"none\", flexDirection: \"column\", alignItems: \"flex-start\", height: 1, flexGrow: 1, overflow: \"auto\" }} */>\r\n                {presentInScales}\r\n            </div>\r\n            <div className={classes.presentInChords}/* style={{ display: containingChords ? \"flex\" : \"none\", flexDirection: \"row\", justifyContent: \"center\", height: 1, flexGrow: 1, overflow: \"auto\" }} */>\r\n                {containingChords}\r\n            </div>\r\n            <div className={classes.allContainingChords}/* style={{ display: containingChords ? \"flex\" : \"none\", flexDirection: \"row\", justifyContent: \"center\", height: 1, flexGrow: 1, overflow: \"auto\" }} */>\r\n                {allContainingChords}\r\n            </div>\r\n\r\n        </div>\r\n        <div className={classes.bottomBorder}>\r\n\r\n\r\n\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useMasterStore } from '../utils/store';\r\n// import { RenderableArray, RenderableState } from '../definitions/renderables';\r\nimport Pattern from \"./Pattern\"\r\nimport { SpecificChord } from '../definitions/Chords';\r\nimport { renderables } from '../definitions/renderables';\r\nimport { SpecificScale, specificScales } from '../definitions/Scales';\r\nimport SimpleState from './SimpleState';\r\nimport classes from \"./MasterState.module.css\"\r\n\r\n//create your forceUpdate hook\r\nfunction useForceUpdate() {\r\n\r\n    const [value, setValue] = useState(0); // integer state\r\n    return () => setValue(value => value + 1); // update the state to force render\r\n}\r\n\r\nexport default function MasterState() {\r\n\r\n    const masterStore = useMasterStore()\r\n\r\n    console.log(\"masterStore\", masterStore)\r\n    const forceUpdate = useForceUpdate()\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(\"state in Pattern\", masterStore.states)\r\n        forceUpdate()\r\n    }, [masterStore.states])\r\n\r\n\r\n\r\n    if (masterStore.states.length === 0) return <div>loading states...</div>\r\n\r\n    return <div className={classes.master}>\r\n\r\n        <div className={classes.heading}>\r\n            <div className={classes.headText}>\r\n\r\n\r\n\r\n                Guitar scale/chord visualizer\r\n            </div>\r\n            <div className={classes.headingLink}>\r\n\r\n                <a href=\"https://github.com/vincentwue/guitar-trainer\" target=\"_blank\">more information on github</a>\r\n            </div>\r\n\r\n            <div className={classes.checkboxes}>\r\n\r\n                <label className={classes.hideLegendLabel}>\r\n                    <input type=\"checkbox\" checked={masterStore.hideLegends} readOnly onClick={e => masterStore.toggleHideLegends()}></input>\r\n                    hide legends\r\n                </label>\r\n\r\n                <label className={classes.hideLegendLabel}>\r\n                    <input type=\"checkbox\" checked={masterStore.showPiano} readOnly onClick={e => masterStore.toggleShowPiano()}></input>\r\n                    show piano\r\n                </label>\r\n\r\n            </div>\r\n        </div>\r\n\r\n        {masterStore.states.map((state:any, i:any) => {\r\n            return <SimpleState useState={state} create={masterStore.create} delete={masterStore.delete} n={i}></SimpleState>\r\n        })}\r\n\r\n        <div className={classes.white}>\r\n\r\n        </div>\r\n\r\n\r\n    </div>\r\n\r\n}\r\n\r\n","import React from 'react';\r\n\r\nimport './App.css';\r\nimport MasterState from \"./components/MasterState\"\r\n\r\nfunction App() {\r\n  \r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n     <MasterState/>\r\n   </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// import \"./definitions0/index.ts\"\r\n\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport \"./definitions/index\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}