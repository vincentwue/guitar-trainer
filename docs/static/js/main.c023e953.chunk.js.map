{"version":3,"sources":["definitions/intervals.ts","definitions/notes.ts","definitions/chords.ts","definitions/scales.ts","definitions/instruments.ts","definitions/renderables.ts","definitions/index.ts","utils/store.ts","components/Cell.tsx","utils/utils.ts","components/Pattern.tsx","components/SimpleState.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["intervals","PerfectUnison","id","step","standardSymbol","standardColor","MinorSecond","MajorSecond","MinorThird","MajorThird","PerfectForth","Tritone","PerfectFifth","MinorSixth","MajorSixth","MinorSeventh","MajorSeventh","intervalsArray","Object","values","notes","C","intervalFromC","Db","D","Eb","E","F","Gb","G","Ab","A","Bb","B","notesArray","chords","symbol","Minor","Major","Major7","Chord7","Minor7","Minor7b5","Chord7b9","Chord7Sharp5","Chord7Sharp11","PowerChord","MajorB13","Dim7","b9b13","MinorMajor7","Minor6","Major6","Minorb6","Majorb6","specificChords","rootNote","rawChord","interval","push","presentInScales","generateSpecificChords","RawScales","steps","modes","HarmonicMinor","MelodicMinor","Chromatic","scales","entries","scaleValue","rawScale","i","length","modeString","slice","newScale","isMode","generateIntervals","generateScales","result","last","map","n","specificScales","scale","specificScale","isScale","triads","tetrads","autoChords","generateSpecificAutoChords","stepOfMode","nameOfBaseScale","helperScale","find","spscale","intervalToRoot","rootNoteOfBaseScaleStepsFromC","rootNoteOfBaseScale","note","baseSpecificScale","generateSpecificScales","longNotes","tetradsNotes","index","indexOf","tetrad","specificChord","every","v","includes","specificChordsArray","specificChordsResult","filter","RawStringInstruments","standardGuitar","fretsCount","tuning","dropDGuitar","createRenderablePattern","stringInstrument","renderable","strings","string","from","to","getInterval","hidden","source","fretsArray","makeFretsArray","fretscount","array","show","renderables","guitar","rawStringInstrument","indexInNotes","grabbedNote","getStringInstrument","renderablePattern","e","generateAllRenderables","DisplayType","useSimpleStore","create","set","index1","index2","firstIntervals","secondIntervals","secondHidden","setIndex1","state","setIndex2","toggleSecondHidden","toggleFirstIntervals","toggleSecondIntervals","hexToRgb","hex","exec","parseInt","StringTemplate","props","style","display","width","height","alignItems","position","background","justifyContent","top","left","right","bottom","children","Pattern","first","second","colorFirst","renderableNote","className","color","backgroundColor","borderRadius","fontSize","border","console","log","reversedSecondStrings","mappedNotes","stringIndex","fretIndex","borderRight","borderLeft","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","colors","Intervals","symbols","Notes","mappedFretNumbers","textAlign","mappedFretNumbers2","margin","gridTemplateColumns","gridTemplateRows","SimpleState","containingChords","options","value","hasOwnProperty","pattern","split","padding","paddingLeft","onClick","abc","chord","r","flexDirection","fontWeight","borderBottom","href","target","marginRight","onChange","parseFloat","marginLeft","type","checked","flexGrow","overflow","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c023e953.chunk.js","sourcesContent":["\r\n\r\n\r\nexport interface Intervals {\r\n    PerfectUnison: Interval,\r\n    MinorSecond: Interval,\r\n    MajorSecond: Interval,\r\n    MinorThird: Interval,\r\n    MajorThird: Interval,\r\n    PerfectForth: Interval,\r\n    Tritone: Interval,\r\n    PerfectFifth: Interval,\r\n    MinorSixth: Interval,\r\n    MajorSixth: Interval,\r\n    MinorSeventh: Interval,\r\n    MajorSeventh: Interval,\r\n}\r\n\r\nexport interface Interval {\r\n    readonly id: string,\r\n    // readonly octaveName:string,\r\n    readonly step: number,\r\n    readonly standardSymbol: string,\r\n    // readonly octaveSymbol: string,\r\n    readonly standardColor: string,\r\n}\r\n\r\n// https://en.wikipedia.org/wiki/Interval_(music)#cite_ref-TritoneA4_6-0:~:text=below.-,Number%20of,Interval\r\n\r\nexport const intervals: Intervals = {\r\n\r\n    PerfectUnison: {\r\n        id: \"unison\",\r\n        step: 0,\r\n        standardSymbol: \"root\",\r\n        standardColor: \"#000000\"\r\n    },\r\n\r\n    MinorSecond: {\r\n        id: \"minorSecond\",\r\n        step: 1,\r\n        standardSymbol: \"b9\",\r\n        standardColor: \"#9e006f\"\r\n    },\r\n\r\n    MajorSecond: {\r\n        id: \"majorSecond\",\r\n        step: 2,\r\n        standardSymbol: \"9\",\r\n        standardColor: \"#ff00b3\"\r\n    },\r\n\r\n    MinorThird: {\r\n        id: \"minorThird\",\r\n        step: 3,\r\n        standardSymbol: \"b3\",\r\n        standardColor: \"#b7ff42\"\r\n    },\r\n\r\n    MajorThird: {\r\n        id: \"majorThird\",\r\n        step: 4,\r\n        standardSymbol: \"3\",\r\n        standardColor: \"#7dc900\"\r\n    },\r\n    PerfectForth: {\r\n        id: \"perfectForth\",\r\n        step: 5,\r\n        standardSymbol: \"11\",\r\n        standardColor: \"#f7e886\"\r\n    },\r\n    Tritone: {\r\n        id: \"tritone\",\r\n        step: 6,\r\n        standardSymbol: \"b5\",\r\n        standardColor: \"#ad6500\"\r\n    },\r\n\r\n\r\n    PerfectFifth: {\r\n        id: \"perfectFifth\",\r\n        step: 7,\r\n        standardSymbol: \"5\",\r\n        standardColor: \"#ffdd00\"\r\n    },\r\n\r\n\r\n    MinorSixth: {\r\n        id: \"minorSixth\",\r\n        step: 8,\r\n        standardSymbol: \"b13\",\r\n        standardColor: \"#ff0019\"\r\n    },\r\n    MajorSixth: {\r\n        id: \"majorSixth\",\r\n        step: 9,\r\n        standardSymbol: \"13\",\r\n        standardColor: \"#d42c3d\"\r\n    },\r\n    MinorSeventh: {\r\n        id: \"minorSeventh\",\r\n        step: 10,\r\n        standardSymbol: \"7\",\r\n        standardColor: \"#0073ff\"\r\n    },\r\n    MajorSeventh: {\r\n        id: \"majorSeventh\",\r\n        step: 11,\r\n        standardSymbol: \"Δ\",\r\n        standardColor: \"#00eaff\"\r\n    },\r\n\r\n}\r\n\r\nexport const intervalsArray: Interval[] = Object.values(intervals)\r\n\r\n","\r\nimport { Interval, intervals } from \"./intervals\"\r\n\r\n\r\nexport interface Notes {\r\n    C:Note,\r\n    Db:Note,\r\n    D:Note,\r\n    Eb:Note,\r\n    E:Note,\r\n    F:Note,\r\n    Gb:Note,\r\n    G:Note,\r\n    Ab:Note,\r\n    A:Note,\r\n    Bb:Note,\r\n    B:Note,\r\n}\r\n\r\nexport interface Note {\r\n    readonly id: string,\r\n    readonly intervalFromC: Interval,\r\n    readonly standardColor: string,\r\n}\r\n\r\nexport const notes : Notes = {\r\n    C:{\r\n        id:\"C\",\r\n        intervalFromC:intervals.PerfectUnison,\r\n        standardColor:\"#ffffff\",\r\n    },\r\n    Db:{\r\n        id:\"Db\",\r\n        intervalFromC:intervals.MinorSecond,\r\n        standardColor:\"#FF0000\",\r\n    },\r\n    D:{\r\n        id:\"D\",\r\n        intervalFromC:intervals.MajorSecond,\r\n        standardColor:\"#800000\",\r\n    },\r\n    Eb:{\r\n        id:\"Eb\",\r\n        intervalFromC:intervals.MinorThird,\r\n        standardColor:\"#FFFF00\",\r\n    },\r\n    E:{\r\n        id:\"E\",\r\n        intervalFromC:intervals.MajorThird,\r\n        standardColor:\"#808000\",\r\n    },\r\n    F:{\r\n        id:\"F\",\r\n        intervalFromC:intervals.PerfectForth,\r\n        standardColor:\"#00FF00\",\r\n    },\r\n    Gb:{\r\n        id:\"Gb\",\r\n        intervalFromC:intervals.Tritone,\r\n        standardColor:\"#008000\",\r\n    },\r\n    G:{\r\n        id:\"G\",\r\n        intervalFromC:intervals.PerfectFifth,\r\n        standardColor:\"#00FFFF\",\r\n    },\r\n    Ab:{\r\n        id:\"Ab\",\r\n        intervalFromC:intervals.MinorSixth,\r\n        standardColor:\"#008080\",\r\n    },\r\n    A:{\r\n        id:\"A\",\r\n        intervalFromC:intervals.MajorSixth,\r\n        standardColor:\"#0000FF\",\r\n    },\r\n    Bb:{\r\n        id:\"Bb\",\r\n        intervalFromC:intervals.MinorSeventh,\r\n        standardColor:\"#000080\",\r\n    },\r\n    B:{\r\n        id:\"B\",\r\n        intervalFromC:intervals.MajorSeventh,\r\n        standardColor:\"#FF00FF\",\r\n    },\r\n}\r\n\r\nexport const notesArray : Note[] = Object.values(notes)","import { Interval, intervals } from \"./intervals\"\r\nimport { Note, notesArray } from \"./notes\"\r\nimport { Scale, SpecificScale } from \"./scales\"\r\n\r\nexport const chords: RawChords = {\r\n    PerfectUnison: {\r\n        id: \"unison\",\r\n        intervals: [intervals.PerfectUnison],\r\n        symbol: \"unison\",\r\n    },\r\n    Minor: {\r\n        id: \"minor\",\r\n        intervals: [intervals.PerfectUnison, intervals.MinorThird, intervals.PerfectFifth],\r\n        symbol: \"_\",\r\n    },\r\n    Major: {\r\n        id: \"major\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MajorThird,\r\n            intervals.PerfectFifth],\r\n        symbol: \"\",\r\n    },\r\n    Major7: {\r\n        id: \"Δ7\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MajorThird,\r\n            intervals.PerfectFifth,\r\n            intervals.MajorSeventh,\r\n        ],\r\n        symbol: \"Δ7\",\r\n    },\r\n    Chord7: {\r\n        id: \"7\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MajorThird,\r\n            intervals.PerfectFifth,\r\n            intervals.MinorSeventh,\r\n        ],\r\n        symbol: \"7\",\r\n    },\r\n    Minor7: {\r\n        id: \"_7\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MinorThird,\r\n            intervals.PerfectFifth,\r\n            intervals.MinorSeventh,\r\n        ],\r\n        symbol: \"_7\",\r\n    },\r\n    Minor7b5: {\r\n        id: \"_7b5\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MinorThird,\r\n            intervals.MinorSeventh,\r\n            intervals.Tritone],\r\n        symbol: \"_7b5\",\r\n    },\r\n    Chord7b9: {\r\n        id: \"7b9\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MajorThird,\r\n            intervals.PerfectFifth,\r\n            intervals.MinorSeventh,\r\n            intervals.MinorSecond\r\n        ],\r\n        symbol: \"7b9\",\r\n    },\r\n    Chord7Sharp5: {\r\n        id: \"7#5\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MajorThird,\r\n            intervals.MinorSixth,\r\n            intervals.MinorSeventh,\r\n        ],\r\n        symbol: \"7#5\",\r\n    },\r\n    Chord7Sharp11: {\r\n        id: \"7#11\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MajorThird,\r\n            intervals.Tritone,\r\n            intervals.PerfectFifth,\r\n            intervals.MinorSeventh,\r\n        ],\r\n        symbol: \"7#11\",\r\n    },\r\n    PowerChord: {\r\n        id: \"5\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.PerfectFifth],\r\n        symbol: \"5\",\r\n    },\r\n    MajorB13: {\r\n        id: \"Δ#5\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MajorThird,\r\n            intervals.MinorSixth,\r\n            intervals.MajorSeventh],\r\n        symbol: \"Δ#5\",\r\n    },\r\n    Dim7: {\r\n        id: \"°7\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MinorThird,\r\n            intervals.Tritone,\r\n            intervals.MajorSixth],\r\n        symbol: \"°7\",\r\n    },\r\n    b9b13: {\r\n        id: \"#5b9\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MinorSecond,\r\n            intervals.MajorThird,\r\n            intervals.MinorSixth],\r\n        symbol: \"#5b9\",\r\n    },\r\n    MinorMajor7: {\r\n        id: \"_Δ\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MinorThird,\r\n            intervals.PerfectFifth,\r\n            intervals.MajorSeventh],\r\n        symbol: \"_Δ\",\r\n    },\r\n    Minor6: {\r\n        id: \"_6\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MinorThird,\r\n            intervals.PerfectFifth,\r\n            intervals.MajorSixth],\r\n        symbol: \"_6\",\r\n    },\r\n    Major6: {\r\n        id: \"6\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MajorThird,\r\n            intervals.PerfectFifth,\r\n            intervals.MajorSixth],\r\n        symbol: \"6\",\r\n    },\r\n    Minorb6: {\r\n        id: \"_b6\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MinorThird,\r\n            intervals.PerfectFifth,\r\n            intervals.MinorSixth],\r\n        symbol: \"_b6\",\r\n    },\r\n    Majorb6: {\r\n        id: \"b6\",\r\n        intervals: [\r\n            intervals.PerfectUnison,\r\n            intervals.MajorThird,\r\n            intervals.PerfectFifth,\r\n            intervals.MinorSixth],\r\n        symbol: \"b6\",\r\n    },\r\n}\r\n\r\nexport interface RawChords {\r\n    Minor: RawChord,\r\n    Major: RawChord,\r\n    Minor7b5: RawChord,\r\n    Chord7b9: RawChord,\r\n    PowerChord: RawChord,\r\n    Major7: RawChord,\r\n    Chord7Sharp5: RawChord,\r\n    Chord7Sharp11: RawChord,\r\n    Minor7: RawChord,\r\n    Chord7: RawChord,\r\n    PerfectUnison: RawChord,\r\n\r\n    \r\n    MajorB13:RawChord,\r\n    Dim7:RawChord,\r\n    b9b13:RawChord,\r\n    MinorMajor7:RawChord,\r\n    Minor6:RawChord,\r\n    Minorb6:RawChord,\r\n    Major6:RawChord,\r\n    Majorb6:RawChord,\r\n\r\n    \r\n}\r\n\r\nexport interface RawChord {\r\n    id: string,\r\n    intervals: Interval[],\r\n    symbol: string,\r\n    triad?: boolean,\r\n    tetrad?: boolean,\r\n}\r\n\r\nexport interface SpecificChord {\r\n    readonly rootNote: Note,\r\n    readonly id: string, // note name plus \r\n    \r\n    readonly notes: Note[],\r\n    readonly intervals: Interval[],\r\n    \r\n    readonly symbol: string,\r\n    presentInScales: SpecificScale[],\r\n}\r\n\r\nexport interface SpecificAutoChord {\r\n    readonly id: string, // note name plus \r\n    specificChord: SpecificChord | null,\r\n    intervals:Interval[],\r\n    notes:Note[],\r\n    rootNoe:Note,\r\n    readonly symbol: string, // \r\n    presentInScales: SpecificScale[],\r\n\r\n}\r\n\r\n\r\nexport const specificChords: SpecificChord[] = generateSpecificChords()\r\n\r\nfunction generateSpecificChords(): SpecificChord[] {\r\n\r\n    const specificChords: SpecificChord[] = []\r\n\r\n    for (const rootNote of notesArray) {\r\n\r\n        for (const rawChord of Object.values(chords)) {\r\n\r\n\r\n            const notes: Note[] = []\r\n\r\n            for (const interval of rawChord.intervals) {\r\n\r\n                notes.push(notesArray[(interval.step + rootNote.intervalFromC.step) % 12])\r\n\r\n            }\r\n\r\n            specificChords.push({\r\n                rootNote,\r\n                id: rootNote.id + \" \" + rawChord.id,\r\n                notes,\r\n                intervals: rawChord.intervals,\r\n                symbol: rootNote.id + rawChord.symbol,\r\n                presentInScales: [],\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    return specificChords\r\n\r\n}","import { SpecificAutoChord, SpecificChord, specificChords } from \"./chords\"\r\nimport { Interval, intervals, intervalsArray } from \"./intervals\"\r\nimport { Note, notes, notesArray } from \"./notes\"\r\n\r\nexport const RawScales: RawScalesInterface = {\r\n    Major: {\r\n        id: \"major\",\r\n        steps: [2, 2, 1, 2, 2, 2, 1],\r\n        modes: [\r\n            \"ionisch (dur)\",\r\n            \"dorisch\",\r\n            \"phrygisch\",\r\n            \"lydisch\",\r\n            \"mixolydisch\",\r\n            \"aeolisch (moll)\",\r\n            \"lokrisch\",\r\n        ]\r\n    },\r\n    HarmonicMinor: {\r\n        id: \"harmonic minor\",\r\n        steps: [2, 1, 2, 2, 1, 3, 1],\r\n        modes: [\r\n            \"harmonic minor mode\",\r\n            \"Locrian 13 or Locrian 6 (half-diminished)\",\r\n            \"Ionian #5 (augmented)\",\r\n            \"Dorian #11 (or dorian #4) (minor)\",\r\n            \"Phrygian dominant (dominant)\",\r\n            \"Lydian #2 (major)\",\r\n            \"Super locrian bb7 (diminished)\",\r\n        ]\r\n    },\r\n    MelodicMinor: {\r\n        id: \"melodic minor\",\r\n        steps: [2, 1, 2, 2, 2, 2, 1],\r\n        modes: [\r\n            \"melodic minor mode\",\r\n            \"dorisch b9\",\r\n            \"lydisch augmented\",\r\n            \"lydisch dominant\",\r\n            \"mixolydisch b13\",\r\n            \"aeolisch b5 (lokrisch #2)\",\r\n            \"alterierte skala (super lokrisch)\",\r\n        ]\r\n    },\r\n    Chromatic: {\r\n        id: \"chromatic\",\r\n        steps: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,],\r\n        modes: [\r\n            \"chromatic\",\r\n            \"chromatic-del\",\r\n            \"chromatic-del\",\r\n            \"chromatic-del\",\r\n            \"chromatic-del\",\r\n            \"chromatic-del\",\r\n            \"chromatic-del\",\r\n            \"chromatic-del\",\r\n            \"chromatic-del\",\r\n            \"chromatic-del\",\r\n            \"chromatic-del\",\r\n            \"chromatic-del\",\r\n        ]\r\n    },\r\n}\r\n\r\nexport interface RawScalesInterface {\r\n    Major: RawScale,\r\n    HarmonicMinor: RawScale,\r\n    MelodicMinor: RawScale,\r\n    Chromatic: RawScale,\r\n}\r\n\r\n\r\n\r\n\r\nexport interface RawScale {\r\n    id: string,\r\n    steps: number[],\r\n    modes: string[]\r\n}\r\n\r\n\r\n\r\nexport interface Scale {\r\n\r\n    readonly id: string,\r\n    readonly steps: number[],\r\n    readonly intervals: Interval[],\r\n\r\n    readonly isMode: boolean,\r\n    readonly rawScale: RawScale,\r\n\r\n    readonly step: number,\r\n}\r\n\r\nexport interface SpecificScale {\r\n    readonly isScale: boolean,\r\n    readonly id: string,\r\n    readonly scale: Scale,\r\n\r\n    readonly notes: Note[],\r\n    readonly intervals: Interval[],\r\n\r\n\r\n    readonly rootNote: Note,\r\n    chords: SpecificChord[][],\r\n    autoChords?: SpecificChord[],\r\n\r\n\r\n    readonly triads: SpecificChord[],\r\n    readonly tetrads: SpecificChord[],\r\n\r\n    baseSpecificScale?: SpecificScale\r\n}\r\n\r\nexport const scales: Scale[] = generateScales()\r\n\r\nfunction generateScales(): Scale[] {\r\n\r\n    const scales: Scale[] = []\r\n\r\n    for (const [scaleKey, scaleValue] of Object.entries(RawScales)) {\r\n\r\n        const rawScale: RawScale = scaleValue\r\n\r\n        if (!rawScale.modes) {\r\n            scales.push(scaleValue)\r\n            continue;\r\n        }\r\n\r\n        for (let i = 0; i < rawScale.modes.length; i++) {\r\n            const modeString = rawScale.modes[i];\r\n            const steps = [\r\n                ...rawScale.steps.slice(i, rawScale.modes.length),\r\n                ...rawScale.steps.slice(0, i)\r\n            ]\r\n            const newScale = {\r\n                id: modeString,\r\n                steps,\r\n                isMode: i !== 0 ? true : false,\r\n                intervals: generateIntervals(steps),\r\n                rawScale: scaleValue,\r\n                step: i,\r\n            }\r\n\r\n            scales.push(newScale)\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    return scales\r\n}\r\n\r\nfunction generateIntervals(steps: number[]): Interval[] {\r\n\r\n    const result: number[] = []\r\n    let last = 0;\r\n    for (let i = 0; i < steps.length - 1; i++) {\r\n        const element = steps[i];\r\n        last += element;\r\n        result.push(last)\r\n    }\r\n\r\n    return [intervals.PerfectUnison, ...result.map(n => intervalsArray[n])]\r\n\r\n}\r\n\r\nexport const specificScales: SpecificScale[] = generateSpecificScales()\r\n\r\n\r\nfunction generateSpecificScales(): SpecificScale[] {\r\n\r\n    const specificScales: SpecificScale[] = []\r\n\r\n    for (const rootNote of notesArray) {\r\n\r\n        for (const scale of scales) {\r\n\r\n            const notes: Note[] = []\r\n\r\n\r\n            for (const interval of scale.intervals) {\r\n\r\n                notes.push(notesArray[(interval.step + rootNote.intervalFromC.step) % 12])\r\n\r\n            }\r\n\r\n\r\n            const specificScale: SpecificScale = {\r\n                isScale: true,\r\n                id: rootNote.id + \" \" + scale.id,\r\n                scale,\r\n                notes,\r\n                rootNote,\r\n                intervals: scale.intervals,\r\n\r\n\r\n\r\n                chords: [],\r\n                triads: [],\r\n                tetrads: [],\r\n            }\r\n\r\n            const chords = generateSpecificChords(specificScale)\r\n            specificScale.chords = chords.chords\r\n\r\n            specificScale.autoChords = generateSpecificAutoChords(specificScale)\r\n\r\n            specificScales.push(specificScale)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // This part is solved with a ugly hack.\r\n    // Consider restructuring whole datastructure.\r\n    // Design ONE interface that represents all wanted information and build small steps towards this goal.\r\n    for (const specificScale of specificScales) {\r\n\r\n        const stepOfMode = specificScale.scale.step\r\n\r\n\r\n        const nameOfBaseScale = specificScale.scale.rawScale.modes[0]\r\n        const helperScale = specificScales.find(spscale => spscale.id === specificScale.rootNote.id + \" \" + nameOfBaseScale)\r\n        if (helperScale) {\r\n\r\n            const intervalToRoot = helperScale.scale.intervals[stepOfMode]\r\n\r\n            const rootNoteOfBaseScaleStepsFromC = (specificScale.rootNote.intervalFromC.step + 12 - intervalToRoot.step) % 12\r\n            const rootNoteOfBaseScale = notesArray.find(note => note.intervalFromC.step === rootNoteOfBaseScaleStepsFromC)\r\n\r\n\r\n\r\n            specificScale.baseSpecificScale = specificScales.find(spscale => spscale.id === rootNoteOfBaseScale?.id + \" \" + nameOfBaseScale)\r\n            // console.log(specificScale.id, rootNoteOfBaseScale + \" \" + nameOfBaseScale)\r\n            // console.log(specificScale.id, { specificScale, rootNoteOfBaseScale, rootNoteOfBaseScaleStepsFromC, stepOfMode, intervalToRoot, nameOfBaseScale })\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    return specificScales\r\n}\r\n\r\nfunction generateSpecificAutoChords(specificScale: SpecificScale): SpecificChord[] {\r\n\r\n\r\n    //TODO implement\r\n    const longNotes = [...specificScale.notes, ...specificScale.notes, ...specificScale.notes]\r\n\r\n    const tetradsNotes = []\r\n\r\n    for (const note of specificScale.notes) {\r\n        const index = longNotes.indexOf(note)\r\n        const tetrad = []\r\n        for (let i = index; i < index + 8; i += 2) {\r\n            tetrad.push(longNotes[i])\r\n        }\r\n        tetradsNotes.push(tetrad)\r\n    }\r\n\r\n    const autoChords : any = tetradsNotes\r\n\r\n    for (const specificChord of specificChords) {\r\n        for (let i = 0; i < tetradsNotes.length; i++) {\r\n            const tetrad = tetradsNotes[i];\r\n\r\n            if (tetrad.length === specificChord.notes.length && specificChord.notes[0] === tetrad[0]) {\r\n                if (tetrad.every(v => specificChord.notes.includes(v))) {\r\n                    autoChords[i]=specificChord\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // console.log(\"chord\", specificScale.id, \"found\", { autoChords })\r\n\r\n    // console.log(specificScale.id, { specificScale, longNotes, tetradsNotes })\r\n\r\n\r\n    return autoChords\r\n}\r\n\r\nfunction generateSpecificChords(specificScale: SpecificScale): { chords: SpecificChord[][], tetrads: SpecificChord[], triads: SpecificChord[] } {\r\n\r\n    const notes = specificScale.notes\r\n\r\n    const specificChordsArray: SpecificChord[][] = []\r\n    const tetrads: SpecificChord[] = []\r\n    const triads: SpecificChord[] = []\r\n\r\n    for (let i = 0; i < notes.length; i++) {\r\n        const note = notes[i];\r\n        const specificChordsResult: SpecificChord[] = []\r\n        for (const specificChord of specificChords) {\r\n\r\n            if (specificChord.notes[0] !== note) continue;\r\n\r\n            const hasChord = specificChord.notes\r\n                .filter(note => !notes.includes(note)).length === 0\r\n\r\n\r\n\r\n            if (hasChord) {\r\n                specificChordsResult.push(specificChord)\r\n                specificChord.presentInScales.push(specificScale)\r\n            }\r\n\r\n        }\r\n        specificChordsArray.push(specificChordsResult)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return { chords: specificChordsArray, triads, tetrads }\r\n\r\n}","import { Note, notes, notesArray } from \"./notes\";\r\n\r\n\r\nexport const RawStringInstruments: RawStringInstrumentsInterface = {\r\n    standardGuitar:{\r\n        id: \"guitar\",\r\n        fretsCount: 25,\r\n        tuning: [notes.E, notes.A, notes.D, notes.G, notes.B, notes.E],\r\n    },\r\n    dropDGuitar:{\r\n        id: \"guitar\",\r\n        fretsCount: 25,\r\n        tuning: [notes.D, notes.A, notes.D, notes.G, notes.B, notes.E],\r\n    }\r\n}\r\n\r\nexport interface RawStringInstrumentsInterface {\r\n    standardGuitar: RawStringInstrument,\r\n    dropDGuitar: RawStringInstrument,\r\n}\r\n\r\n// A guitar, violin or ukulele tuning\r\nexport interface RawStringInstrument {\r\n    readonly id: string,\r\n    readonly fretsCount: number,\r\n    readonly tuning: Note[],\r\n}\r\n\r\nexport interface StringInstrument {\r\n    readonly fretsCount: number,\r\n    readonly tuning: Note[],\r\n    strings: Note[][]\r\n}\r\n\r\nexport function getStringInstrument(rawStringInstrument : RawStringInstrument) : StringInstrument {\r\n\r\n    const strings : Note[][] = []\r\n\r\n    for (const note of rawStringInstrument.tuning) {\r\n\r\n        const string: Note[] = []\r\n\r\n        const indexInNotes: number = notesArray.indexOf(note)\r\n        for (let index = 0; index < rawStringInstrument.fretsCount; index++) {\r\n            const grabbedNote: Note = notesArray[(index + indexInNotes) % 12]\r\n    \r\n\r\n            string.push(grabbedNote)\r\n\r\n        }\r\n\r\n        strings.push(string)\r\n\r\n    }\r\n\r\n    return {\r\n        strings,\r\n        tuning:rawStringInstrument.tuning,\r\n        fretsCount:rawStringInstrument.fretsCount\r\n    }\r\n}\r\n\r\n\r\n","import { SpecificChord, specificChords } from \"./chords\"\r\nimport { SpecificScale, specificScales } from \"./scales\"\r\nimport { getStringInstrument, RawStringInstruments, StringInstrument } from \"./instruments\"\r\nimport { Interval, intervals } from \"./intervals\"\r\nimport { Note, notes } from \"./notes\"\r\nimport { getInterval } from \".\"\r\n\r\n\r\nexport interface Dictionary<Item> {\r\n    [index: string]: Item\r\n}\r\n\r\n\r\n\r\nexport interface RenderableNote {\r\n    readonly interval: Interval,\r\n    readonly note: Note,\r\n    readonly hidden: boolean,\r\n}\r\n\r\ntype nullOrNumber = null | number\r\n\r\nexport interface RenderablePattern {\r\n\r\n    readonly id: string,\r\n\r\n    readonly strings: RenderableNote[][],\r\n\r\n    readonly fretsArray: nullOrNumber[]\r\n\r\n    readonly source: SpecificChord | SpecificScale,\r\n\r\n    readonly intervals: Interval[],\r\n\r\n    readonly notes: Note[],\r\n\r\n    readonly stringInstrument: StringInstrument,\r\n\r\n}\r\n\r\nexport type Renderable = SpecificChord | SpecificScale\r\n\r\nexport function createRenderablePattern(stringInstrument: StringInstrument, renderable: Renderable): RenderablePattern {\r\n\r\n    const strings = stringInstrument.strings.map(string => {\r\n\r\n        return string.map(note => {\r\n\r\n            const interval = getInterval(renderable.rootNote, note)\r\n\r\n\r\n            return {\r\n                interval, note,\r\n                hidden: !renderable.notes.includes(note),\r\n            }\r\n\r\n        })\r\n\r\n    })\r\n\r\n\r\n    return {\r\n        id: renderable.id,\r\n        intervals: renderable.intervals,\r\n        notes: renderable.notes,\r\n        source: renderable,\r\n        strings: strings as RenderableNote[][],\r\n        stringInstrument,\r\n        fretsArray:makeFretsArray(stringInstrument.fretsCount)\r\n    }\r\n\r\n}\r\n\r\nfunction makeFretsArray(fretscount : number) : nullOrNumber[] {\r\n\r\n    const array : nullOrNumber[] = []\r\n    const show = [3,5,7,9,12,15,17,19,21,24]\r\n    for (let i = 0; i < fretscount; i++) {\r\n        \r\n        if (show.includes(i)) array.push(i)\r\n        else array.push(null)\r\n        \r\n    }\r\n\r\n    return array\r\n\r\n}\r\n\r\nexport const renderables: RenderablePattern[] = generateAllRenderables()\r\n\r\nfunction generateAllRenderables() {\r\n\r\n    const guitar = getStringInstrument(RawStringInstruments.standardGuitar)\r\n    const renderables: RenderablePattern[] = []\r\n\r\n    for (const renderable of [...specificScales, ...specificChords]) {\r\n        const renderablePattern = createRenderablePattern(guitar, renderable)\r\n        renderables.push(renderablePattern)\r\n    }\r\n\r\n    return renderables.filter(e => !e.id.includes(\"-del\"))\r\n\r\n}\r\n\r\n/* export type RenderableState = {\r\n\r\n    renderableArrays: RenderableArray[] | undefined,\r\n\r\n    add(\r\n        stringInstrument: StringInstrument,\r\n        config: \"notes\" | \"intervals\",\r\n        // renderable: Renderable,\r\n        // renderableSecondLayer?: Renderable,\r\n        index?: number,\r\n    ): void, // returns id\r\n\r\n    // removes renderableArray from array.\r\n    remove(id: string): void,\r\n\r\n}\r\n\r\n\r\n\r\n */","\r\nimport { specificScales, scales } from \"./scales\"\r\nimport { getStringInstrument, RawStringInstruments } from './instruments';\r\nimport { specificChords } from \"./chords\";\r\nimport { Note, notes } from \"../definitions/notes\";\r\nimport { createRenderablePattern } from \"./renderables\";\r\nimport { intervals, Interval, intervalsArray } from \"../definitions/intervals\";\r\nimport \"./renderables\"\r\n\r\nexport function getInterval(from: Note, to: Note): Interval {\r\n\r\n    const n = ((to.intervalFromC.step - from.intervalFromC.step) + 12) % 12\r\n\r\n    return intervalsArray[n]\r\n\r\n}","import create from \"zustand\"\r\nimport { Note, notesArray } from \"../definitions/notes\"\r\nimport { StringInstrument } from \"../definitions/instruments\"\r\nimport { RenderablePattern, renderables } from \"../definitions/renderables\"\r\n\r\n\r\n\r\ntype State = {\r\n    renderables: RenderablePattern[],\r\n\r\n    index1: number,\r\n    index2: number,\r\n\r\n    firstIntervals:boolean,\r\n    secondIntervals:boolean,\r\n\r\n    toggleFirstIntervals:() => void,\r\n    toggleSecondIntervals:() => void,\r\n\r\n    setIndex1: (index: number) => void\r\n    setIndex2: (index: number) => void\r\n    secondHidden:boolean,\r\n    toggleSecondHidden:() => void\r\n}\r\n\r\nexport const useSimpleStore = create<State>(set => ({\r\n    renderables,\r\n\r\n    index1:0,\r\n    index2:0,\r\n\r\n    firstIntervals:false,\r\n    secondIntervals:false,\r\n\r\n    secondHidden:true,\r\n    \r\n    setIndex1: (index1) => set(state => ({ index1 })),\r\n    setIndex2: (index2) => set(state => ({ index2 })),\r\n    toggleSecondHidden: () => set(state => ({ secondHidden:!state.secondHidden })),\r\n    toggleFirstIntervals: () => set(state => ({ firstIntervals:!state.firstIntervals })),\r\n    toggleSecondIntervals: () => set(state => ({ secondIntervals:!state.secondIntervals })),\r\n}))","import React from 'react';\r\nimport { Interval, intervals } from '../definitions/intervals';\r\nimport { Note } from '../definitions/notes';\r\nimport { RenderableNote, RenderablePattern } from '../definitions/renderables';\r\n// import { RenderableArray, RenderableState } from '../definitions/renderables';\r\nimport { hexToRgb } from '../utils/utils';\r\nimport classes from \"./Pattern.module.css\"\r\n\r\nexport interface RenderableCell {\r\n    renderableNote: RenderableNote,\r\n    colors: DisplayType,\r\n    symbols: DisplayType,\r\n}\r\nexport interface CellProps {\r\n    first: RenderableCell,\r\n    second: RenderableCell,\r\n    secondHidden:boolean\r\n}\r\n\r\nexport enum DisplayType {\r\n    Intervals = \"Intervals\",\r\n    Notes = \"Notes\",\r\n}\r\n\r\n\r\n\r\nfunction StringTemplate(props: any) {\r\n\r\n    return <div style={{ display: \"flex\", width: \"100%\", height: \"100%\", alignItems: \"center\", position: \"relative\" }}>\r\n        <div style={{\r\n            display: \"flex\",\r\n            width: \"100%\",\r\n            background: \"black\",\r\n            height: \"1px\"\r\n            /*             display: \"absolute\",\r\n                        top: 1,\r\n                        left: 10,\r\n                        right: 10,\r\n                        bottom:5,\r\n                        backgroundColor: \"black\", */\r\n\r\n        }}></div>\r\n        <div style={{\r\n            position: \"absolute\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n        }}>\r\n\r\n            {props.children}\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\nexport default function Pattern(props: CellProps) {\r\n\r\n    // console.log(props)\r\n\r\n    const { first, second } = props;\r\n     const colorFirst = hexToRgb(first.renderableNote.interval.standardColor)\r\n     const colorSecond = hexToRgb(second.renderableNote.interval.standardColor)\r\n\r\n    if (first.renderableNote.hidden && second.renderableNote.hidden) return <StringTemplate />\r\n\r\n    return <div style={{ height: 60 }}>\r\n\r\n        <StringTemplate>\r\n            <div style={{\r\n                position: \"relative\",\r\n                height: \"100%\",\r\n                width: \"100%\",\r\n                display: \"flex\",\r\n            }}>\r\n\r\n                <div className=\"first\" style={{\r\n                    position: \"absolute\",\r\n                    display: first.renderableNote.hidden ? \"none\" : \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    top: \"5%\",\r\n                    left: \"5%\",\r\n                    bottom: \"5%\",\r\n                    right: \"5%\",\r\n                    color: \"black\",\r\n                    backgroundColor: colorFirst,\r\n                    // backgroundColor: first.renderableNote.interval === intervals.PerfectUnison? \"grey\" : colorFirst,\r\n                    borderRadius:20,\r\n\r\n                }}>\r\n\r\n                    {props.first.renderableNote.note.id}\r\n                </div>\r\n\r\n                <div className=\"second\" style={{\r\n                    position: \"absolute\",\r\n                    display: second.renderableNote.hidden || props.secondHidden ? \"none\" : \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    top: \"5%\",\r\n                    left: \"5%\",\r\n                    bottom: \"5%\",\r\n                    right: \"5%\",\r\n                    color:\"blue\",\r\n                    fontSize:25,\r\n                    // background:colorSecond,\r\n                    // background:second.renderableNote.interval === intervals.PerfectUnison ? \"red\" : \"black\",\r\n                    border:\"4px solid \" + (second.renderableNote.interval === intervals.PerfectUnison ? \"red\" : \"black\"),\r\n                    // background:\"black\",\r\n                    borderRadius:20,\r\n                }}>\r\n\r\n                    {/* {props.second.renderableNote.interval.standardSymbol} */}\r\n                    {/* {props.second.renderableNote.note.id} */}\r\n                </div>\r\n{/*                 <div className=\"second\" style={{\r\n                    position: \"absolute\",\r\n                    display: second.renderableNote.hidden || props.secondHidden ? \"none\" : \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    top: 0,\r\n                    left: \"80%\",\r\n                    bottom: \"80%\",\r\n                    right: 0,\r\n                    color:\"blue\",\r\n                    fontSize:25,\r\n                    // background:colorSecond,\r\n                    background:second.renderableNote.interval === intervals.PerfectUnison ? \"red\" : \"black\",\r\n                    // background:\"black\",\r\n                    borderRadius:20,\r\n                }}>\r\n\r\n                     {props.second.renderableNote.interval.standardSymbol} \r\n                     {props.second.renderableNote.note.id} \r\n                </div> */}\r\n\r\n            </div>\r\n        </StringTemplate>\r\n    </div>\r\n\r\n}\r\n\r\n","\r\ninterface RGB {\r\n    r: number,\r\n    g: number,\r\n    b: number,\r\n}\r\n\r\nexport function hexToRgb(hex: string): string {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    if (!result) return \"black\"\r\n    const rgb = {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    }\r\n    return \"rgb(\" + rgb.r + \",\" + rgb.g + \",\" + rgb.b + \",0.4)\"\r\n}","import React from 'react';\r\nimport { RenderablePattern } from '../definitions/renderables';\r\n// import { RenderableArray, RenderableState } from '../definitions/renderables';\r\nimport { hexToRgb } from '../utils/utils';\r\n// import classes from \"./Pattern.module.css\"\r\nimport Cell, { DisplayType } from \"./Cell\"\r\n\r\ntype PatternProps = {\r\n  first: RenderablePattern,\r\n  second: RenderablePattern,\r\n  secondHidden: boolean,\r\n  firstIntervals: boolean,\r\n  secondIntervals: boolean,\r\n}\r\n\r\nexport default function Pattern(props: PatternProps) {\r\n\r\n  console.log(props)\r\n\r\n  const reversedSecondStrings = props.second.strings\r\n\r\n  const mappedNotes = props.first.strings.map((string, stringIndex) => {\r\n\r\n    const mappedString = string.map((renderableNote, fretIndex) => {\r\n      // const color = hexToRgb(renderableNote.interval.standardColor)\r\n\r\n      let borderRight = \"4px solid grey\";\r\n      let borderLeft = \"4px solid grey\";\r\n      if (fretIndex === 0) borderRight = \"5px solid black\"\r\n      if (fretIndex === 11) borderRight = \"5px solid black\"\r\n      if (fretIndex === 12) borderRight = \"5px solid black\"\r\n      if (fretIndex === 1) borderLeft = \"5px solid black\"\r\n      if (fretIndex === 13) borderLeft = \"5px solid black\"\r\n      if (fretIndex === 12) borderLeft = \"5px solid black\"\r\n      if (fretIndex === 23) borderRight = \"5px solid black\"\r\n      if (fretIndex === 24) borderLeft = \"5px solid black\"\r\n      \r\n      return <div  key={fretIndex}  style={{\r\n        gridColumnStart: fretIndex + 1,\r\n        gridColumnEnd: fretIndex + 2,\r\n        gridRowStart: props.first.strings.length - stringIndex,\r\n        gridRowEnd: props.first.strings.length - stringIndex,\r\n        // backgroundColor: color,\r\n        borderRight,\r\n        borderLeft,\r\n        // minWidth:40,\r\n        // }}>{note.hidden ? \"\" : props.firstIntervals ? note.interval.standardSymbol : note.note.id}</div>\r\n      }}><Cell\r\n        secondHidden={props.secondHidden}\r\n        first={{ renderableNote, colors: DisplayType.Intervals, symbols: DisplayType.Notes }}\r\n        second={{ renderableNote: reversedSecondStrings[stringIndex][fretIndex], colors: DisplayType.Intervals, symbols: DisplayType.Notes }}\r\n      ></Cell></div>\r\n      // if (note.hidden) return <div className={classes.note + \" \" + classes.hidden}></div>\r\n\r\n      // else return <div style={{ backgroundColor: color }} className={classes.text + \" \" + classes.note}>{props.firstIntervals ? note.interval.standardSymbol : note.note.id}</div>\r\n    })\r\n\r\n    return mappedString\r\n  })\r\n\r\n  const mappedFretNumbers = props.first.fretsArray.map((n, i) => {\r\n    return <div key={i} style={{\r\n      gridColumnStart: i + 1,\r\n      gridColumnEnd: i + 2,\r\n      gridRowStart: props.first.strings.length + 2,\r\n      gridRowEnd: props.first.strings.length + 3,\r\n      textAlign:\"center\",\r\n      // minWidth:40,\r\n    }}>{n ? n : \"\"}</div>\r\n  })\r\n  const mappedFretNumbers2 = props.first.fretsArray.map((n, i) => {\r\n    return <div key={i} style={{\r\n      gridColumnStart: i + 1,\r\n      gridColumnEnd: i + 2,\r\n      gridRowStart: 0,\r\n      gridRowEnd: 1,\r\n      textAlign:\"center\",\r\n      // minWidth:40,\r\n    }}>{n ? n : \"\"}</div>\r\n  })\r\n\r\n  return (\r\n    <div >\r\n      <div  style={{\r\n        margin: 10,\r\n        fontSize: 40,\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"repeat(\" + props.first.fretsArray.length + \", 1fr)\",\r\n        gridTemplateRows: \"repeat(\" + props.first.strings.length + \", 1fr)\",\r\n      }}>\r\n        {mappedNotes}\r\n        {mappedFretNumbers2}\r\n        {mappedFretNumbers}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport { useSimpleStore } from '../utils/store';\r\n// import { RenderableArray, RenderableState } from '../definitions/renderables';\r\nimport classes from \"./Pattern.module.css\"\r\nimport Pattern from \"./Pattern\"\r\nimport { SpecificChord } from '../definitions/chords';\r\nimport { renderables } from '../definitions/renderables';\r\nimport { SpecificScale, specificScales } from '../definitions/scales';\r\n\r\nexport default function SimpleState() {\r\n\r\n    const state = useSimpleStore()\r\n    console.log(state)\r\n\r\n    const options = state.renderables.map((renderable, i) => {\r\n        return <option key={i} value={i}>{renderable.id}</option>\r\n    })\r\n\r\n    let presentInScales;\r\n    if (state.renderables[state.index1].source.hasOwnProperty(\"presentInScales\")) {\r\n\r\n        const renderablePattern = state.renderables[state.index1].source as SpecificChord\r\n\r\n        presentInScales = renderablePattern.presentInScales.filter(e => !e.id.includes(\"-del\"))\r\n            // filter to only show scales with specific root note\r\n            .filter(pattern => pattern.id.split(\" \")[0] === state.renderables[state.index1].id.split(\" \")[0])\r\n            .map((specificScale, i) => {\r\n                return <div key={i} >\r\n                    <button\r\n                        style={{ padding: 10, paddingLeft: 40, margin: 10, fontSize: 20, width: 500, textAlign: \"left\" }}\r\n                        onClick={e => {\r\n\r\n                            const abc = renderables.map(renderable => renderable.id).indexOf(specificScale.id)\r\n                            state.setIndex2(abc)\r\n\r\n                        }}>{specificScale.id}</button>\r\n                    {\"  -- base scale:  \" + (specificScale.scale.step + 1) + \" of  \" + specificScale.baseSpecificScale?.id}\r\n                </div>\r\n            })\r\n\r\n    }\r\n\r\n    let containingChords;\r\n\r\n    if (state.renderables[state.index1].source.hasOwnProperty(\"autoChords\")) {\r\n\r\n        const specificScale = state.renderables[state.index1].source as SpecificScale\r\n\r\n        if (specificScale.autoChords) {\r\n\r\n            containingChords = specificScale.autoChords.map((chord, i) => {\r\n\r\n                // const specificChord  = chord as SpecificChord\r\n\r\n                console.log(chord)\r\n\r\n                return <button style={{ fontSize: 20, padding: 10, margin: 20 }} key={i} onClick={e => {\r\n                    const renderable = renderables.find(r => r.id === chord.id)\r\n                    if (renderable) {\r\n\r\n                        const index = renderables.indexOf(renderable)\r\n                        state.setIndex2(index)\r\n                    }\r\n                }}>{(i + 1)}\r\n                    <br></br>\r\n                    {chord.id}\r\n                    <br></br>\r\n                    {specificScale.scale.rawScale.modes[i]}\r\n                </button>\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    return <div style={{ fontSize: 20, display: \"flex\", flexDirection: \"column\", height: \"100%\" }}>\r\n\r\n        <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", fontWeight: 'bolder', fontSize: 25, padding: 10, borderBottom: \"2px solid black\", backgroundColor: \"#ff8282\" }}>\r\n            Guitar scale/chord visualizer\r\n            <div style={{ fontSize: 17, paddingLeft: 20, display: \"flex\", fontWeight: 'bolder', alignItems: \"center\", justifyContent: \"center\" }}>\r\n\r\n                <a href=\"https://github.com/vincentwue/guitar-trainer\" target=\"_blank\">more information on github</a>\r\n            </div>\r\n        </div>\r\n        <div >\r\n\r\n        </div>\r\n\r\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\" }}>\r\n\r\n\r\n            {/*         <label>\r\n            <input type=\"checkbox\" checked={state.firstIntervals} onChange={e => state.toggleFirstIntervals()}></input>\r\n            first intervals\r\n            </label>\r\n            <label>\r\n            <input type=\"checkbox\" checked={state.secondIntervals} onChange={e => state.toggleSecondIntervals()}></input>\r\n            second intervals\r\n        </label> */}\r\n\r\n            <div style={{ width: \"100%\", display: \"flex\", padding: 10 }}>\r\n                <div style={{ width: 500, marginRight: 20, textAlign: \"right\" }}>first layer:</div>\r\n\r\n                <select onChange={e => state.setIndex1(parseFloat(e.target.value))} style={{ fontSize: 20 }} value={state.index1}>\r\n\r\n                    {options}\r\n                </select>\r\n                <button style={{ marginLeft: 20 }} onClick={e => {\r\n                    const index = state.index1\r\n                    state.setIndex1(state.index2)\r\n                    state.setIndex2(index)\r\n                }}>invert</button>\r\n            </div>\r\n            <div style={{ width: \"100%\", display: \"flex\", padding: 10 }}>\r\n\r\n                <div style={{ width: 500, marginRight: 20, textAlign: \"right\" }}>second layer:</div>\r\n\r\n                <select onChange={e => state.setIndex2(parseFloat(e.target.value))} style={{ fontSize: 20 }} value={state.index2}>\r\n                    {options}\r\n\r\n\r\n                </select>\r\n                <div style={{ marginLeft:20 }}>\r\n                    <label>\r\n                        <input type=\"checkbox\" checked={state.secondHidden} onChange={e => state.toggleSecondHidden()}></input>\r\n            hide second layer\r\n        </label>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n        <Pattern\r\n            secondHidden={state.secondHidden}\r\n            first={state.renderables[state.index1]}\r\n            second={state.renderables[state.index2]}\r\n            firstIntervals={state.firstIntervals}\r\n            secondIntervals={state.secondIntervals}\r\n        />\r\n\r\n        <div style={{ display: presentInScales ? \"flex\" : \"none\", flexDirection: \"column\", alignItems: \"flex-start\", height: 1, flexGrow: 1, overflow: \"auto\" }}>\r\n            {presentInScales}\r\n        </div>\r\n        <div style={{ display: containingChords ? \"flex\" : \"none\", flexDirection: \"row\", justifyContent: \"center\", height: 1, flexGrow: 1, overflow: \"auto\" }}>\r\n            {containingChords}\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\n","import React, { useEffect } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport SimpleState from \"./components/SimpleState\"\r\n\r\nfunction App() {\r\n  \r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n     <SimpleState/>\r\n   </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// import \"./definitions0/index.ts\"\r\n\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport \"./definitions/index\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}